{"version":3,"sources":["webpack:///core/webpack/universalModuleDefinition","webpack:///core/playkit.min.js","webpack:///core/webpack/bootstrap ec358df201a16dc49892","webpack:///core/./track/track.js","webpack:///core/./utils/logger.js","webpack:///core/./event/fake-event.js","webpack:///core/./track/audio-track.js","webpack:///core/./track/text-track.js","webpack:///core/./track/video-track.js","webpack:///core/./event/event-manager.js","webpack:///core/./event/events.js","webpack:///core/./player.js","webpack:///core/./event/fake-event-target.js","webpack:///core/./utils/player-error.js","webpack:///core/./utils/util.js","webpack:///core/./engines/html5/media-source/base-media-source-adapter.js","webpack:///core/./engines/html5/media-source/media-source-provider.js","webpack:///core/./plugin/base-plugin.js","webpack:///core/./plugin/plugin-manager.js","webpack:///core/./state/state-types.js","webpack:///core/./utils/multi-map.js","webpack:///core/../package.json","webpack:///core/./engines/html5/html5.js","webpack:///core/./engines/html5/media-source/adapters/native-adapter.js","webpack:///core/./playkit.js","webpack:///core/./state/state-manager.js","webpack:///core/./state/state.js","webpack:///core/./track/track-types.js","webpack:///core/../~/js-logger/src/logger.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","Track","settings","arguments","undefined","_id","id","_active","active","_label","label","_language","language","_index","index","set","default","LOG_LEVEL","_jsLogger","JsLogger","obj","newObj","DEBUG","INFO","TIME","WARN","ERROR","OFF","LoggerFactory","options","useDefaults","lf","defaultLevel","FakeEvent","type","payload","bubbles","cancelable","defaultPrevented","timeStamp","window","performance","now","Date","isTrusted","currentTarget","stopped","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_track","_track2","AudioTrack","_Track","getPrototypeOf","apply","TextTrack","_this","_kind","kind","VideoTrack","_bandwidth","bandwidth","_interopRequireDefault","_multiMap","_multiMap2","_fakeEvent","EventManager","_bindingMap","removeAll","Promise","resolve","listener","binding","Binding_","push","list","unlisten","remove","listeners","getAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","clear","addEventListener","removeEventListener","CUSTOM_EVENTS","HTML5_EVENTS","PLAYER_EVENTS","_util","ABORT","CAN_PLAY","CAN_PLAY_THROUGH","DURATION_CHANGE","EMPTIED","ENDED","LOADED_DATA","LOADED_METADATA","LOAD_START","PAUSE","PLAY","PLAYING","PROGRESS","RATE_CHANGE","SEEKED","SEEKING","STALLED","SUSPEND","TIME_UPDATE","VOLUME_CHANGE","WAITING","VIDEO_TRACK_CHANGED","AUDIO_TRACK_CHANGED","TEXT_TRACK_CHANGED","TRACKS_CHANGED","PLAYER_STATE_CHANGED","FIRST_PLAY","SOURCE_SELECTED","merge","_eventManager","_eventManager2","_fakeEvent2","_fakeEventTarget","_fakeEventTarget2","_events","_stateTypes","_stateTypes2","_logger","_logger2","_html","_html2","_pluginManager","_pluginManager2","_stateManager","_stateManager2","_trackTypes","_trackTypes2","_videoTrack","_videoTrack2","_audioTrack","_audioTrack2","_textTrack","_textTrack2","Player","_FakeEventTarget","config","_tracks","_firstPlay","getLogger","_readyPromise","reject","listen","configure","_config","_defaultConfig","_loadPlugins","_selectEngine","_attachMedia","_engine","destroy","plugins","load","sources","canPlayType","mimetype","dispatchEvent","selectedSource","_loadEngine","source","preload","_this2","playerEvent","event","_markActiveTrack","selectedVideoTrack","selectedAudioTrack","selectedTextTrack","_onPlay","bind","_getTracksByType","filter","track","VIDEO","AUDIO","TEXT","selectVideoTrack","selectAudioTrack","selectTextTrack","hideTextTrack","map","enableAdaptiveBitrate","tracks","getTracks","_this3","then","data","catch","error","_this4","src","play","ready","pause","sessionId","session","to","isNumber","boundedTo","duration","currentTime","vol","isFloat","boundedVol","volume","paused","seeking","mute","muted","FakeEventTarget","_listeners","dispatchTarget","handleEvent","exception","PlayerError","param","message","TYPE","NOT_REGISTERED_PLUGIN","NOT_VALID_HANDLER","NOT_IMPLEMENTED_METHOD","method","Number","isInt","objects","assign","_playerError","_playerError2","BaseMediaSourceAdapter","videoElement","_videoElement","_sourceObj","_trigger","CustomEvents","getError","videoTrack","audioTrack","textTrack","mimeType","registerMediaSourceAdapter","_nativeAdapter","_nativeAdapter2","MediaSourceProvider","mediaSourceAdapter","_mediaSourceAdapters","includes","debug","indexOf","splice","mediaSourceAdapters","_selectedAdapter","createAdapter","engines","register","_player","BasePlugin","player","eventManager","logger","defaultConfig","attr","update","registerPlugin","_basePlugin","_basePlugin2","PluginManager","_plugins","Map","_registry","has","pluginClass","isValid","createPlugin","forEach","_destroy","plugin","delete","handler","PLAYER_STATE_TYPES","IDLE","LOADING","PAUSED","BUFFERING","MultiMap","_map","Array","isArray","values","slice","concat","keys","version","main","scripts","clean","prebuild","build:prod","build","dev","test","test:chrome","test:chrome:dots","test:firefox","test:safari","test:watch","start","release","publish","eslint","flow","eslint:flow:test","commit:dist","prepush-msg:build","prepush-msg:dist","prepush-msg:done","pre-push","devDependencies","babel-cli","babel-core","babel-eslint","babel-loader","babel-plugin-istanbul","babel-plugin-transform-class-properties","babel-plugin-transform-flow-strip-types","babel-preset-es2015","babel-register","chai","cross-env","eslint-loader","eslint-plugin-flowtype","eslint-plugin-import","eslint-plugin-mocha-no-only","flow-bin","istanbul","karma","karma-chai","karma-chrome-launcher","karma-cli","karma-coverage","karma-firefox-launcher","karma-ie-launcher","karma-mocha","karma-safari-launcher","karma-sourcemap-loader","karma-webpack","mocha","mocha-cli","sinon","sinon-chai","standard-version","uglifyjs-webpack-plugin","webpack","webpack-dev-server","repository","url","keywords","license","bugs","homepage","dependencies","js-logger","_mediaSourceProvider","_mediaSourceProvider2","Html5","_createVideoElement","_loadMediaSourceAdapter","attach","detach","_mediaSourceAdapter","_el","removeAttribute","parentNode","removeChild","document","createElement","style","width","height","backgroundColor","controls","body","appendChild","getMediaSourceAdapter","getVideoElement","seekable","played","buffered","defaultMuted","poster","autoplay","loop","playbackRate","defaultPlaybackRate","ended","networkState","readyState","videoHeight","videoWidth","TEST_VID","e","EngineName","_get","receiver","Function","desc","getOwnPropertyDescriptor","parent","_baseMediaSourceAdapter","_baseMediaSourceAdapter2","NativeAdapter","_BaseMediaSourceAdapt","toLowerCase","toString","_loadPromise","_getParsedTracks","videoTracks","_getParsedVideoTracks","audioTracks","_getParsedAudioTracks","textTracks","_getParsedTextTracks","parsedTracks","selected","enabled","mode","_disableVideoTracks","_onTrackChanged","_disableAudioTracks","_disableTextTracks","playkit","_player2","VERSION","_package","packageData","log","_defineProperty","_state","_state2","StateManager","_PlayerStates$IDLE","_PlayerStates$LOADING","_PlayerStates$PAUSED","_PlayerStates$PLAYING","_PlayerStates$BUFFERI","_transitions","_updateState","_dispatchEvent","autoPlay","_history","_prevState","_curState","_attachListeners","_doTransition","transition","oldState","newState","State","_duration","_timestamp","endTime","TRACK_TYPES","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","global","Logger","logHandler","contextualLoggersByNameMap","scope","func","args","defineLogLevel","ContextualLogger","defaultContext","context","setLevel","filterLevel","info","newLevel","enabledFor","lvl","invoke","warn","time","timeEnd","level","msgArgs","globalLogger","L","setHandler","createDefaultHandler","formatter","messages","unshift","timerStartTimeByLabelMap","invokeConsoleMethod","hdlr","console","timerLabel","getTime"],"mappings":"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","file":"playkit.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Playkit\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Playkit\"] = factory();\n\telse\n\t\troot[\"Playkit\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Playkit\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Playkit\"] = factory();\n\telse\n\t\troot[\"Playkit\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 21);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * General track representation of the player.\n * @classdesc\n */\nvar Track = function () {\n  _createClass(Track, [{\n    key: \"id\",\n\n\n    /**\n     * Getter for the track id.\n     * @public\n     * @returns {?string} - The track id.\n     */\n\n    /**\n     * The language of the track.\n     * @member\n     * @type {string}\n     * @private\n     */\n\n    /**\n     * The active mode of the track.\n     * @member\n     * @type {boolean}\n     * @private\n     */\n    get: function get() {\n      return this._id;\n    }\n\n    /**\n     * Getter for the active mode of the track.\n     * @public\n     * @returns {boolean} - The active mode of the track.\n     */\n\n    /**\n     * The index of the track.\n     * @member\n     * @type {number}\n     * @private\n     */\n\n    /**\n     * The label of the track.\n     * @member\n     * @type {string}\n     * @private\n     */\n\n    /**\n     * The id of the track.\n     * @member\n     * @type {string}\n     * @private\n     */\n\n  }, {\n    key: \"active\",\n    get: function get() {\n      return this._active;\n    }\n\n    /**\n     * Setter for the active mode of the track.\n     * @public\n     * @param {boolean} value - Whether the track is active or not.\n     */\n    ,\n    set: function set(value) {\n      this._active = value;\n    }\n\n    /**\n     * Getter for the label of the track.\n     * @public\n     * @returns {string} - The label of the track.\n     */\n\n  }, {\n    key: \"label\",\n    get: function get() {\n      return this._label;\n    }\n\n    /**\n     * Getter for the language of the track.\n     * @public\n     * @returns {string} - The language of the track.\n     */\n\n  }, {\n    key: \"language\",\n    get: function get() {\n      return this._language;\n    }\n\n    /**\n     * Getter for the index of the track.\n     * @public\n     * @returns {number} - The index of the track.\n     */\n\n  }, {\n    key: \"index\",\n    get: function get() {\n      return this._index;\n    }\n\n    /**\n     * @constructor\n     * @param {Object} settings - The track settings object.\n     */\n\n  }]);\n\n  function Track() {\n    var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Track);\n\n    this._id = settings.id;\n    this._active = settings.active;\n    this._label = settings.label;\n    this._language = settings.language;\n    this._index = settings.index;\n  }\n\n  return Track;\n}();\n\nexports.default = Track;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LOG_LEVEL = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _jsLogger = __webpack_require__(25);\n\nvar JsLogger = _interopRequireWildcard(_jsLogger);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar LOG_LEVEL = {\n  \"DEBUG\": JsLogger.DEBUG,\n  \"INFO\": JsLogger.INFO,\n  \"TIME\": JsLogger.TIME,\n  \"WARN\": JsLogger.WARN,\n  \"ERROR\": JsLogger.ERROR,\n  \"OFF\": JsLogger.OFF\n};\n\nvar LoggerFactory = function () {\n  function LoggerFactory(options) {\n    _classCallCheck(this, LoggerFactory);\n\n    JsLogger.useDefaults(options || {});\n  }\n\n  _createClass(LoggerFactory, [{\n    key: \"getLogger\",\n    value: function getLogger(name) {\n      if (!name) {\n        return JsLogger;\n      }\n      return JsLogger.get(name);\n    }\n  }]);\n\n  return LoggerFactory;\n}();\n\nvar lf = new LoggerFactory({ defaultLevel: JsLogger.DEBUG });\n\nexports.default = lf;\nexports.LOG_LEVEL = LOG_LEVEL;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Create an Event work-alike object based on the dictionary.\n * The event should contain all of the same properties from the dict.\n * @param {string} type -\n * @param {Object=} opt_dict -\n * @constructor\n * @extends {Event}\n */\nvar FakeEvent = function () {\n\n  /**\n   * Non-standard property read by FakeEventTarget to stop processing listeners.\n   * @type {boolean}\n   */\n\n\n  /** @type {EventTarget} */\n\n\n  /** @const {string} */\n\n\n  /** @const {boolean} */\n\n  /** @const {boolean} */\n  function FakeEvent(type, payload) {\n    _classCallCheck(this, FakeEvent);\n\n    // These Properties below cannot be set by dict.  They are all provided for\n    // compatibility with native events.\n\n    /** @const {boolean} */\n    this.bubbles = false;\n\n    /** @const {boolean} */\n    this.cancelable = false;\n\n    /** @const {boolean} */\n    this.defaultPrevented = false;\n\n    /**\n     * According to MDN, Chrome uses high-res timers instead of epoch time.\n     * Follow suit so that timeStamps on FakeEvents use the same base as\n     * on native Events.\n     * @const {number}\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Event/timeStamp\n     */\n    this.timeStamp = window.performance ? window.performance.now() : Date.now();\n\n    /** @const {string} */\n    this.type = type;\n\n    /** @const {boolean} */\n    this.isTrusted = false;\n\n    /** @type {EventTarget} */\n    this.currentTarget = null;\n\n    /** @type {EventTarget} */\n    this.target = null;\n\n    /**\n     * Non-standard property read by FakeEventTarget to stop processing listeners.\n     * @type {boolean}\n     */\n    this.stopped = false;\n\n    this.payload = payload;\n  }\n\n  /**\n   * Does nothing, since FakeEvents have no default.  Provided for compatibility\n   * with native Events.\n   * @override\n   */\n\n\n  /** @type {EventTarget} */\n\n\n  /** @const {boolean} */\n\n\n  /**\n   * According to MDN, Chrome uses high-res timers instead of epoch time.\n   * Follow suit so that timeStamps on FakeEvents use the same base as\n   * on native Events.\n   * @const {number}\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Event/timeStamp\n   */\n\n\n  /** @const {boolean} */\n\n\n  _createClass(FakeEvent, [{\n    key: \"preventDefault\",\n    value: function preventDefault() {}\n\n    /**\n     * Stops processing event listeners for this event.  Provided for compatibility\n     * with native Events.\n     * @override\n     */\n\n  }, {\n    key: \"stopImmediatePropagation\",\n    value: function stopImmediatePropagation() {\n      this.stopped = true;\n    }\n\n    /**\n     * Does nothing, since FakeEvents do not bubble.  Provided for compatibility\n     * with native Events.\n     * @override\n     */\n\n  }, {\n    key: \"stopPropagation\",\n    value: function stopPropagation() {}\n  }]);\n\n  return FakeEvent;\n}();\n\nexports.default = FakeEvent;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _track = __webpack_require__(0);\n\nvar _track2 = _interopRequireDefault(_track);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Audio track representation of the player.\n * @classdesc\n */\nvar AudioTrack = function (_Track) {\n  _inherits(AudioTrack, _Track);\n\n  function AudioTrack() {\n    _classCallCheck(this, AudioTrack);\n\n    return _possibleConstructorReturn(this, (AudioTrack.__proto__ || Object.getPrototypeOf(AudioTrack)).apply(this, arguments));\n  }\n\n  return AudioTrack;\n}(_track2.default);\n\nexports.default = AudioTrack;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _track = __webpack_require__(0);\n\nvar _track2 = _interopRequireDefault(_track);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Text track representation of the player.\n * @classdesc\n */\nvar TextTrack = function (_Track) {\n  _inherits(TextTrack, _Track);\n\n  _createClass(TextTrack, [{\n    key: 'kind',\n\n\n    /**\n     * Getter for the kind of the text track.\n     * @public\n     * @returns {string} - The kind of the text track.\n     */\n    get: function get() {\n      return this._kind;\n    }\n\n    /**\n     * @constructor\n     * @param {Object} settings - The track settings object.\n     */\n\n    /**\n     * The kind of the text track:\n     * subtitles/captions/metadata.\n     * @member\n     * @type {string}\n     * @private\n     */\n\n  }]);\n\n  function TextTrack() {\n    var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, TextTrack);\n\n    var _this = _possibleConstructorReturn(this, (TextTrack.__proto__ || Object.getPrototypeOf(TextTrack)).call(this, settings));\n\n    _this._kind = settings.kind;\n    return _this;\n  }\n\n  return TextTrack;\n}(_track2.default);\n\nexports.default = TextTrack;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _track = __webpack_require__(0);\n\nvar _track2 = _interopRequireDefault(_track);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Video track representation of the player.\n * @classdesc\n */\nvar VideoTrack = function (_Track) {\n  _inherits(VideoTrack, _Track);\n\n  _createClass(VideoTrack, [{\n    key: 'bandwidth',\n\n\n    /**\n     * Getter for the kind of the text track.\n     * @public\n     * @returns {string} - The kind of the text track.\n     */\n    get: function get() {\n      return this._bandwidth;\n    }\n\n    /**\n     * @constructor\n     * @param {Object} settings - The track settings object.\n     */\n\n    /**\n     * The kind of the text track:\n     * subtitles/captions/metadata.\n     * @member\n     * @type {string}\n     * @private\n     */\n\n  }]);\n\n  function VideoTrack() {\n    var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, VideoTrack);\n\n    var _this = _possibleConstructorReturn(this, (VideoTrack.__proto__ || Object.getPrototypeOf(VideoTrack)).call(this, settings));\n\n    _this._bandwidth = settings.bandwidth;\n    return _this;\n  }\n\n  return VideoTrack;\n}(_track2.default);\n\nexports.default = VideoTrack;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _multiMap = __webpack_require__(17);\n\nvar _multiMap2 = _interopRequireDefault(_multiMap);\n\nvar _fakeEvent = __webpack_require__(2);\n\nvar _fakeEvent2 = _interopRequireDefault(_fakeEvent);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Creates a new EventManager. An EventManager maintains a collection of \"event\n * bindings\" between event targets and event listeners.\n *\n * @struct\n * @constructor\n * @implements {IDestroyable}\n */\nvar EventManager = function () {\n  function EventManager() {\n    _classCallCheck(this, EventManager);\n\n    /**\n     * Maps an event type to an array of event bindings.\n     * @private {MultiMap.<!EventManager.Binding_>}\n     */\n    this._bindingMap = new _multiMap2.default();\n  }\n\n  /**\n   * Detaches all event listeners.\n   * @override\n   */\n\n\n  _createClass(EventManager, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.removeAll();\n      this._bindingMap = null;\n      return Promise.resolve();\n    }\n\n    /**\n     * Attaches an event listener to an event target.\n     * @param {EventTarget} target The event target.\n     * @param {string} type The event type.\n     * @param {EventManager.ListenerType} listener The event listener.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'listen',\n    value: function listen(target, type, listener) {\n      var binding = new Binding_(target, type, listener);\n      if (this._bindingMap) {\n        this._bindingMap.push(type, binding);\n      }\n    }\n\n    /**\n     * Detaches an event listener from an event target.\n     * @param {EventTarget} target The event target.\n     * @param {string} type The event type.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'unlisten',\n    value: function unlisten(target, type) {\n      if (this._bindingMap) {\n        var list = this._bindingMap.get(type);\n\n        for (var i = 0; i < list.length; ++i) {\n          var binding = list[i];\n\n          if (binding.target == target) {\n            binding.unlisten();\n            if (this._bindingMap) {\n              this._bindingMap.remove(type, binding);\n            }\n          }\n        }\n      }\n    }\n\n    /**\n     * Detaches all event listeners from all targets.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'removeAll',\n    value: function removeAll() {\n      if (this._bindingMap) {\n        var listeners = this._bindingMap.getAll();\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = listeners[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var listener = _step.value;\n\n            listener.unlisten();\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        if (this._bindingMap) {\n          this._bindingMap.clear();\n        }\n      }\n    }\n  }]);\n\n  return EventManager;\n}();\n\n/**\n * @typedef {function(!Event)}\n */\n\n\n/**\n * Creates a new Binding_ and attaches the event listener to the event target.\n * @param {EventTarget} target The event target.\n * @param {string} type The event type.\n * @param {EventManager.ListenerType} listener The event listener.\n * @constructor\n * @private\n */\nvar Binding_ = function () {\n  function Binding_(target, type, listener) {\n    _classCallCheck(this, Binding_);\n\n    /** @type {EventTarget} */\n    this.target = target;\n\n    /** @type {string} */\n    this.type = type;\n\n    /** @type {?EventManager.ListenerType} */\n    this.listener = listener;\n\n    this.target.addEventListener(type, listener, false);\n  }\n\n  /**\n   * Detaches the event listener from the event target. This does nothing if the\n   * event listener is already detached.\n   * @returns {void}\n   */\n\n\n  _createClass(Binding_, [{\n    key: 'unlisten',\n    value: function unlisten() {\n      if (!this.target) return;\n\n      this.target.removeEventListener(this.type, this.listener, false);\n\n      this.target = null;\n      this.listener = null;\n    }\n  }]);\n\n  return Binding_;\n}();\n\nexports.default = EventManager;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CUSTOM_EVENTS = exports.HTML5_EVENTS = exports.PLAYER_EVENTS = undefined;\n\nvar _util = __webpack_require__(11);\n\nvar HTML5_EVENTS = {\n  /**\n   * Fires when the loading of an audio/video is aborted\n   */\n  ABORT: 'abort',\n  /**\n   * Fires when the browser can start playing the audio/video\n   */\n  CAN_PLAY: 'canplay',\n  /**\n   * Fires when the browser can play through the audio/video without stopping for buffering\n   */\n  CAN_PLAY_THROUGH: 'canplaythrough',\n  /**\n   * Fires when the duration of the audio/video is changed\n   */\n  DURATION_CHANGE: 'durationchange',\n  /**\n   * Fires when the current playlist is empty\n   */\n  EMPTIED: 'emptied',\n  /**\n   * Fires when the current playlist is ended\n   */\n  ENDED: 'ended',\n  /**\n   * Fires when an error occurred during the loading of an audio/video\n   */\n  ERROR: 'error',\n  /**\n   * Fires when the browser has loaded the current frame of the audio/video\n   */\n  LOADED_DATA: 'loadeddata',\n  /**\n   * Fires when the browser has loaded meta data for the audio/video\n   */\n  LOADED_METADATA: 'loadedmetadata',\n  /**\n   * Fires when the browser starts looking for the audio/video\n   */\n  LOAD_START: 'loadstart',\n  /**\n   * Fires when the audio/video has been paused\n   */\n  PAUSE: 'pause',\n  /**\n   * Fires when the audio/video has been started or is no longer paused\n   */\n  PLAY: 'play',\n  /**\n   * Fires when the audio/video is playing after having been paused or stopped for buffering\n   */\n  PLAYING: 'playing',\n  /**\n   * Fires when the browser is downloading the audio/video\n   */\n  PROGRESS: 'progress',\n  /**\n   * Fires when the playing speed of the audio/video is changed\n   */\n  RATE_CHANGE: 'ratechange',\n  /**\n   * Fires when the user is finished moving/skipping to a new position in the audio/video\n   */\n  SEEKED: 'seeked',\n  /**\n   * Fires when the user starts moving/skipping to a new position in the audio/video\n   */\n  SEEKING: 'seeking',\n  /**\n   * Fires when the browser is trying to get media data, but data is not available\n   */\n  STALLED: 'stalled',\n  /**\n   * Fires when the browser is intentionally not getting media data\n   */\n  SUSPEND: 'suspend',\n  /**\n   * Fires when the current playback position has changed\n   */\n  TIME_UPDATE: 'timeupdate',\n  /**\n   * Fires when the volume has been changed\n   */\n  VOLUME_CHANGE: 'volumechange',\n  /**\n   * Fires when the video stops because it needs to buffer the next frame\n   */\n  WAITING: 'waiting'\n};\n\n\nvar CUSTOM_EVENTS = {\n  /**\n   * Fires when the active video track has been changed\n   */\n  VIDEO_TRACK_CHANGED: 'videotrackchanged',\n  /**\n   * Fires when the active audio track has been changed\n   */\n  AUDIO_TRACK_CHANGED: 'audiotrackchanged',\n  /**\n   * Fires when the active text track has been changed\n   */\n  TEXT_TRACK_CHANGED: 'texttrackchanged',\n  /**\n   * Fires when the player tracks have been changed\n   */\n  TRACKS_CHANGED: 'trackschanged',\n  /**\n   * Fires when the player state has been changed\n   */\n  PLAYER_STATE_CHANGED: 'playerstatechanged',\n  /**\n   * Fires on the first play\n   */\n  FIRST_PLAY: 'firstplay',\n  /**\n   * Fires when the player has selected the source to play\n   */\n  SOURCE_SELECTED: 'sourceselected'\n};\n\nvar PLAYER_EVENTS = (0, _util.merge)([HTML5_EVENTS, CUSTOM_EVENTS]);\n\nexports.PLAYER_EVENTS = PLAYER_EVENTS;\nexports.HTML5_EVENTS = HTML5_EVENTS;\nexports.CUSTOM_EVENTS = CUSTOM_EVENTS;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _eventManager = __webpack_require__(6);\n\nvar _eventManager2 = _interopRequireDefault(_eventManager);\n\nvar _fakeEvent = __webpack_require__(2);\n\nvar _fakeEvent2 = _interopRequireDefault(_fakeEvent);\n\nvar _fakeEventTarget = __webpack_require__(9);\n\nvar _fakeEventTarget2 = _interopRequireDefault(_fakeEventTarget);\n\nvar _events = __webpack_require__(7);\n\nvar _stateTypes = __webpack_require__(16);\n\nvar _stateTypes2 = _interopRequireDefault(_stateTypes);\n\nvar _util = __webpack_require__(11);\n\nvar _logger = __webpack_require__(1);\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nvar _html = __webpack_require__(19);\n\nvar _html2 = _interopRequireDefault(_html);\n\nvar _pluginManager = __webpack_require__(15);\n\nvar _pluginManager2 = _interopRequireDefault(_pluginManager);\n\nvar _stateManager = __webpack_require__(22);\n\nvar _stateManager2 = _interopRequireDefault(_stateManager);\n\nvar _trackTypes = __webpack_require__(24);\n\nvar _trackTypes2 = _interopRequireDefault(_trackTypes);\n\nvar _track = __webpack_require__(0);\n\nvar _track2 = _interopRequireDefault(_track);\n\nvar _videoTrack = __webpack_require__(5);\n\nvar _videoTrack2 = _interopRequireDefault(_videoTrack);\n\nvar _audioTrack = __webpack_require__(3);\n\nvar _audioTrack2 = _interopRequireDefault(_audioTrack);\n\nvar _textTrack = __webpack_require__(4);\n\nvar _textTrack2 = _interopRequireDefault(_textTrack);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * The HTML5 player class.\n * @classdesc\n */\nvar Player = function (_FakeEventTarget) {\n  _inherits(Player, _FakeEventTarget);\n\n  /**\n   * @param {Object} config - The configuration for the player instance.\n   * @constructor\n   */\n\n  /**\n   * The player ready promise\n   * @type {Promise<*>}\n   * @private\n   */\n\n  /**\n   * The state manager of the player.\n   * @type {StateManager}\n   * @private\n   */\n\n  /**\n   * The runtime configuration of the player.\n   * @type {Object}\n   * @private\n   */\n\n  /**\n   * The plugin manager of the player.\n   * @type {PluginManager}\n   * @private\n   */\n  function Player(config) {\n    _classCallCheck(this, Player);\n\n    var _this = _possibleConstructorReturn(this, (Player.__proto__ || Object.getPrototypeOf(Player)).call(this));\n\n    _this._tracks = [];\n    _this._firstPlay = true;\n    _this._logger = _logger2.default.getLogger('Player');\n    _this._stateManager = new _stateManager2.default(_this);\n    _this._pluginManager = new _pluginManager2.default();\n    _this._eventManager = new _eventManager2.default();\n    _this._readyPromise = new Promise(function (resolve, reject) {\n      _this._eventManager.listen(_this, _events.CUSTOM_EVENTS.TRACKS_CHANGED, function () {\n        resolve();\n      });\n      _this._eventManager.listen(_this, _events.HTML5_EVENTS.ERROR, reject);\n    });\n    _this.configure(config);\n    return _this;\n  }\n\n  /**\n   * Configures the player according to given configuration.\n   * @param {Object} config - The configuration for the player instance.\n   * @returns {void}\n   */\n\n  /**\n   * Whether the play is the first or not\n   * @type {boolean}\n   * @private\n   */\n\n  /**\n   * The tracks of the player.\n   * @type {Array<Track>}\n   * @private\n   */\n\n  /**\n   * The playback engine.\n   * @type {IEngine}\n   * @private\n   */\n\n  /**\n   * The event manager of the player.\n   * @type {EventManager}\n   * @private\n   */\n\n  /**\n   * The player class logger.\n   * @type {any}\n   * @private\n   */\n\n\n  _createClass(Player, [{\n    key: 'configure',\n    value: function configure(config) {\n      this._config = (0, _util.merge)([this._config, config || Player._defaultConfig()]);\n      this._loadPlugins(this._config);\n      this._selectEngine(this._config);\n      this._attachMedia();\n    }\n\n    /**\n     * Destroys the player.\n     * @returns {void}\n     * @public\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._engine.destroy();\n      this._eventManager.destroy();\n      this._pluginManager.destroy();\n      this._stateManager.destroy();\n      this._config = {};\n      this._tracks = [];\n      this._readyPromise = null;\n      this._firstPlay = true;\n    }\n\n    /**\n     * @returns {Object} - The default configuration of the player.\n     * @private\n     * @static\n     */\n\n  }, {\n    key: '_loadPlugins',\n\n\n    /**\n     *\n     * @param {Object} config - The configuration of the player instance.\n     * @private\n     * @returns {void}\n     */\n    value: function _loadPlugins(config) {\n      var plugins = config.plugins;\n      for (var name in plugins) {\n        this._pluginManager.load(name, this, plugins[name]);\n      }\n    }\n\n    /**\n     * Select the engine to create based on the given configured sources.\n     * @param {Object} config - The configuration of the player instance.\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_selectEngine',\n    value: function _selectEngine(config) {\n      if (config && config.sources) {\n        var sources = config.sources;\n        for (var i = 0; i < sources.length; i++) {\n          if (_html2.default.canPlayType(sources[i].mimetype)) {\n            this.dispatchEvent(new _fakeEvent2.default(_events.CUSTOM_EVENTS.SOURCE_SELECTED, { selectedSource: sources[i] }));\n            this._loadEngine(sources[i], config);\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * Loads the selected engine.\n     * @param {Source} source - The selected source object.\n     * @param {Object} config - The configuration of the player instance.\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_loadEngine',\n    value: function _loadEngine(source, config) {\n      this._engine = new _html2.default(source, config);\n      if (config.preload === \"auto\") {\n        this.load();\n      }\n    }\n\n    /**\n     * Listen to all HTML5 defined events and trigger them on the player\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_attachMedia',\n    value: function _attachMedia() {\n      var _this2 = this;\n\n      if (this._engine) {\n        for (var playerEvent in _events.HTML5_EVENTS) {\n          this._eventManager.listen(this._engine, _events.HTML5_EVENTS[playerEvent], function (event) {\n            return _this2.dispatchEvent(event);\n          });\n        }\n        this._eventManager.listen(this._engine, _events.CUSTOM_EVENTS.VIDEO_TRACK_CHANGED, function (event) {\n          _this2._markActiveTrack(event.payload.selectedVideoTrack);\n          return _this2.dispatchEvent(event);\n        });\n        this._eventManager.listen(this._engine, _events.CUSTOM_EVENTS.AUDIO_TRACK_CHANGED, function (event) {\n          _this2._markActiveTrack(event.payload.selectedAudioTrack);\n          return _this2.dispatchEvent(event);\n        });\n        this._eventManager.listen(this._engine, _events.CUSTOM_EVENTS.TEXT_TRACK_CHANGED, function (event) {\n          _this2._markActiveTrack(event.payload.selectedTextTrack);\n          return _this2.dispatchEvent(event);\n        });\n        this._eventManager.listen(this, _events.HTML5_EVENTS.PLAY, this._onPlay.bind(this));\n      }\n    }\n\n    /**\n     * Returns the tracks according to the filter. if no filter given returns the all tracks.\n     * @function getTracks\n     * @param {string} [type] - a tracks filter, should be 'video', 'audio' or 'text'.\n     * @returns {Array<Track>} - The parsed tracks.\n     * @public\n     */\n\n  }, {\n    key: 'getTracks',\n    value: function getTracks(type) {\n      return this._getTracksByType(type);\n    }\n\n    /**\n     * Returns the tracks according to the filter. if no filter given returns the all tracks.\n     * @function _getTracksByType\n     * @param {string} [type] - a tracks filter, should be 'video', 'audio' or 'text'.\n     * @returns {Array<Track>} - The parsed tracks.\n     * @private\n     */\n\n  }, {\n    key: '_getTracksByType',\n    value: function _getTracksByType(type) {\n      return !type ? this._tracks : this._tracks.filter(function (track) {\n        if (type === _trackTypes2.default.VIDEO) {\n          return track instanceof _videoTrack2.default;\n        } else if (type === _trackTypes2.default.AUDIO) {\n          return track instanceof _audioTrack2.default;\n        } else if (type === _trackTypes2.default.TEXT) {\n          return track instanceof _textTrack2.default;\n        } else {\n          return true;\n        }\n      });\n    }\n\n    /**\n     * Select a track\n     * @function selectTrack\n     * @param {Track} track - the track to select\n     * @returns {void}\n     * @public\n     */\n\n  }, {\n    key: 'selectTrack',\n    value: function selectTrack(track) {\n      if (this._engine) {\n        if (track instanceof _videoTrack2.default) {\n          this._engine.selectVideoTrack(track);\n        } else if (track instanceof _audioTrack2.default) {\n          this._engine.selectAudioTrack(track);\n        } else if (track instanceof _textTrack2.default) {\n          this._engine.selectTextTrack(track);\n        }\n      }\n    }\n\n    /**\n     * Hide the text track\n     * @function hideTextTrack\n     * @returns {void}\n     * @public\n     */\n\n  }, {\n    key: 'hideTextTrack',\n    value: function hideTextTrack() {\n      if (this._engine) {\n        this._engine.hideTextTrack();\n        this._getTracksByType(_trackTypes2.default.TEXT).map(function (track) {\n          return track.active = false;\n        });\n      }\n    }\n\n    /**\n     * Enables adaptive bitrate switching.\n     * @function enableAdaptiveBitrate\n     * @returns {void}\n     * @public\n     */\n\n  }, {\n    key: 'enableAdaptiveBitrate',\n    value: function enableAdaptiveBitrate() {\n      if (this._engine) {\n        this._engine.enableAdaptiveBitrate();\n      }\n    }\n\n    /**\n     * Mark the selected track as active\n     * @function _markActiveTrack\n     * @param {Track} track - the track to mark\n     * @returns {void}\n     * @private\n     */\n\n  }, {\n    key: '_markActiveTrack',\n    value: function _markActiveTrack(track) {\n      var type = void 0;\n      if (track instanceof _videoTrack2.default) {\n        type = _trackTypes2.default.VIDEO;\n      } else if (track instanceof _audioTrack2.default) {\n        type = _trackTypes2.default.AUDIO;\n      } else if (track instanceof _textTrack2.default) {\n        type = _trackTypes2.default.TEXT;\n      }\n      if (type) {\n        var tracks = this.getTracks(type);\n        for (var i = 0; i < tracks.length; i++) {\n          tracks[i].active = track.index === i;\n        }\n      }\n    }\n\n    /**\n     * @function _onPlay\n     * @return {void}\n     * @private\n     */\n\n  }, {\n    key: '_onPlay',\n    value: function _onPlay() {\n      if (this._firstPlay) {\n        this._firstPlay = false;\n        this.dispatchEvent(new _fakeEvent2.default(_events.CUSTOM_EVENTS.FIRST_PLAY));\n      }\n    }\n\n    /**\n     * Get the player config.\n     * @returns {Object} - The player configuration.\n     * @public\n     */\n\n  }, {\n    key: 'ready',\n\n\n    //  <editor-fold desc=\"Playback Interface\">\n    /**\n     * The player readiness\n     * @public\n     * @returns {Promise<*>} - The ready promise\n     */\n    value: function ready() {\n      return this._readyPromise ? this._readyPromise : Promise.resolve();\n    }\n\n    /**\n     * Load media\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      var _this3 = this;\n\n      if (this._engine) {\n        this._engine.load().then(function (data) {\n          _this3._tracks = data.tracks;\n          _this3.dispatchEvent(new _fakeEvent2.default(_events.CUSTOM_EVENTS.TRACKS_CHANGED, { tracks: _this3._tracks }));\n        }).catch(function (error) {\n          _this3.dispatchEvent(new _fakeEvent2.default(_events.HTML5_EVENTS.ERROR, error));\n        });\n      }\n    }\n\n    /**\n     * Start/resume playback.\n     * @returns {void}\n     * @public\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      var _this4 = this;\n\n      if (this._engine) {\n        if (this._engine.src) {\n          this._engine.play();\n        } else {\n          this.load();\n          this.ready().then(function () {\n            _this4._engine.play();\n          });\n        }\n      }\n    }\n\n    /**\n     * Pause playback.\n     * @returns {void}\n     * @public\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this._engine) {\n        return this._engine.pause();\n      }\n    }\n\n    /**\n     * Set the current time in seconds.\n     * @param {Number} to - The number to set in seconds.\n     * @public\n     */\n\n  }, {\n    key: 'buffered',\n    value: function buffered() {}\n\n    /**\n     * Set player muted state.\n     * @param {boolean} mute - The mute value.\n     * @returns {void}\n     * @public\n     */\n\n  }, {\n    key: 'config',\n    get: function get() {\n      return this._config;\n    }\n\n    /**\n     * Set player session id\n     * @param {string} sessionId - the player session id to set\n     * @returns {void}\n     * @public\n     */\n\n  }, {\n    key: 'sessionId',\n    set: function set(sessionId) {\n      this._config.session = this._config.session || {};\n      this._config.session.id = sessionId;\n    }\n  }, {\n    key: 'currentTime',\n    set: function set(to) {\n      if (this._engine) {\n        if ((0, _util.isNumber)(to)) {\n          var boundedTo = to;\n          if (to < 0) {\n            boundedTo = 0;\n          }\n          if (boundedTo > this._engine.duration) {\n            boundedTo = this._engine.duration;\n          }\n          this._engine.currentTime = boundedTo;\n        }\n      }\n    }\n\n    /**\n     * Get the current time in seconds.\n     * @returns {?Number} - The playback current time.\n     * @public\n     */\n    ,\n    get: function get() {\n      if (this._engine) {\n        return this._engine.currentTime;\n      }\n    }\n\n    /**\n     * Get the duration in seconds.\n     * @returns {?Number} - The playback duration.\n     * @public\n     */\n\n  }, {\n    key: 'duration',\n    get: function get() {\n      if (this._engine) {\n        return this._engine.duration;\n      }\n    }\n\n    /**\n     * Set playback volume.\n     * @param {Number} vol - The volume to set.\n     * @returns {void}\n     * @public\n     */\n\n  }, {\n    key: 'volume',\n    set: function set(vol) {\n      if (this._engine) {\n        if ((0, _util.isFloat)(vol)) {\n          var boundedVol = vol;\n          if (boundedVol < 0) {\n            boundedVol = 0;\n          }\n          if (boundedVol > 1) {\n            boundedVol = 1;\n          }\n          this._engine.volume = boundedVol;\n        }\n      }\n    }\n\n    /**\n     * Get playback volume.\n     * @returns {?Number} - The playback volume.\n     * @public\n     */\n    ,\n    get: function get() {\n      if (this._engine) {\n        return this._engine.volume;\n      }\n    }\n\n    // </editor-fold>\n\n    // <editor-fold desc=\"State\">\n    /**\n     * Get paused state.\n     * @returns {?boolean} - Whether the video is paused or not.\n     * @public\n     */\n\n  }, {\n    key: 'paused',\n    get: function get() {\n      if (this._engine) {\n        return this._engine.paused;\n      }\n    }\n\n    /**\n     * Get seeking state.\n     * @returns {?boolean} - Whether the video is seeking or not.\n     * @public\n     */\n\n  }, {\n    key: 'seeking',\n    get: function get() {\n      if (this._engine) {\n        return this._engine.seeking;\n      }\n    }\n  }, {\n    key: 'muted',\n    set: function set(mute) {\n      if (this._engine) {\n        this._engine.muted = mute;\n      }\n    }\n\n    /**\n     * Get player muted state.\n     * @returns {?boolean} - Whether the video is muted or not.\n     * @public\n     */\n    ,\n    get: function get() {\n      if (this._engine) {\n        return this._engine.muted;\n      }\n    }\n\n    /**\n     * Get the player source.\n     * @returns {?string} - The current source of the player.\n     * @public\n     */\n\n  }, {\n    key: 'src',\n    get: function get() {\n      if (this._engine) {\n        return this._engine.src;\n      }\n    }\n\n    /**\n     * Get the player events.\n     * @returns {Object} - The events of the player.\n     * @public\n     */\n\n  }, {\n    key: 'Event',\n    get: function get() {\n      return _events.PLAYER_EVENTS;\n    }\n\n    /**\n     * Get the player states.\n     * @returns {Object} - The states of the player.\n     * @public\n     */\n\n  }, {\n    key: 'State',\n    get: function get() {\n      return _stateTypes2.default;\n    }\n\n    /**\n     * Get the player tracks types.\n     * @returns {Object} - The tracks types of the player.\n     * @public\n     */\n\n  }, {\n    key: 'Track',\n    get: function get() {\n      return _trackTypes2.default;\n    }\n\n    // </editor-fold>\n\n  }], [{\n    key: '_defaultConfig',\n    value: function _defaultConfig() {\n      return {};\n    }\n  }]);\n\n  return Player;\n}(_fakeEventTarget2.default);\n\nexports.default = Player;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _fakeEvent = __webpack_require__(2);\n\nvar _fakeEvent2 = _interopRequireDefault(_fakeEvent);\n\nvar _multiMap = __webpack_require__(17);\n\nvar _multiMap2 = _interopRequireDefault(_multiMap);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * A work-alike for EventTarget.  Only DOM elements may be true EventTargets,\n * but this can be used as a base class to provide event dispatch to non-DOM\n * classes.  Only FakeEvents should be dispatched.\n *\n * @struct\n * @constructor\n * @implements {EventTarget}\n * @export\n */\nvar FakeEventTarget = function () {\n  function FakeEventTarget() {\n    _classCallCheck(this, FakeEventTarget);\n\n    /**\n     * @private {!MultiMap.<FakeEventTarget.ListenerType>}\n     */\n    this._listeners = new _multiMap2.default();\n\n    /**\n     * The target of all dispatched events.  Defaults to |this|.\n     * @type {EventTarget}\n     */\n    this.dispatchTarget = this;\n  }\n\n  /**\n   * Add an event listener to this object.\n   *\n   * @param {string} type The event type to listen for.\n   * @param {FakeEventTarget.ListenerType} listener The callback or\n   *   listener object to invoke.\n   * @param {boolean=} opt_capturing Ignored.  FakeEventTargets do not have\n   *   parents, so events neither capture nor bubble.\n   * @override\n   * @export\n   */\n\n\n  _createClass(FakeEventTarget, [{\n    key: 'addEventListener',\n    value: function addEventListener(type, listener) {\n      this._listeners.push(type, listener);\n    }\n\n    /**\n     * Remove an event listener from this object.\n     *\n     * @param {string} type The event type for which you wish to remove a listener.\n     * @param {FakeEventTarget.ListenerType} listener The callback or\n     *   listener object to remove.\n     * @param {boolean=} opt_capturing Ignored.  FakeEventTargets do not have\n     *   parents, so events neither capture nor bubble.\n     * @override\n     * @export\n     */\n\n  }, {\n    key: 'removeEventListener',\n    value: function removeEventListener(type, listener) {\n      this._listeners.remove(type, listener);\n    }\n\n    /**\n     * Dispatch an event from this object.\n     *\n     * @param {!Event} event The event to be dispatched from this object.\n     * @return {boolean} True if the default action was prevented.\n     * @override\n     * @export\n     */\n\n  }, {\n    key: 'dispatchEvent',\n    value: function dispatchEvent(event) {\n      // In many browsers, it is complex to overwrite properties of actual Events.\n      // Here we expect only to dispatch FakeEvents, which are simpler.\n      //goog.asserts.assert(event instanceof FakeEvent,\n      //    'FakeEventTarget can only dispatch FakeEvents!');\n\n      var list = this._listeners.get(event.type) || [];\n\n      for (var i = 0; i < list.length; ++i) {\n        // Do this every time, since events can be re-dispatched from handlers.\n        event.target = this.dispatchTarget;\n        event.currentTarget = this.dispatchTarget;\n\n        var listener = list[i];\n        try {\n          if (listener.handleEvent) {\n            listener.handleEvent(event);\n          } else {\n            listener.call(this, event);\n          }\n        } catch (exception) {\n          // Exceptions during event handlers should not affect the caller,\n          // but should appear on the console as uncaught, according to MDN:\n          // http://goo.gl/N6Ff27\n          // TODO: add log\n        }\n\n        if (event.stopped) {\n          break;\n        }\n      }\n\n      return event.defaultPrevented;\n    }\n  }]);\n\n  return FakeEventTarget;\n}();\n\n/**\n * These are the listener types defined in the closure extern for EventTarget.\n * @typedef {EventListener|function(!Event):(boolean|undefined)}\n */\n\n\nexports.default = FakeEventTarget;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PlayerError = function () {\n  function PlayerError(error, param) {\n    _classCallCheck(this, PlayerError);\n\n    this.name = error.name;\n    this.message = error.message(param);\n  }\n\n  _createClass(PlayerError, [{\n    key: \"getError\",\n    value: function getError() {\n      return {\n        name: this.name,\n        message: this.message\n      };\n    }\n  }]);\n\n  return PlayerError;\n}();\n\nPlayerError.TYPE = {\n  NOT_REGISTERED_PLUGIN: {\n    name: \"PluginNotRegisteredException\",\n    message: function message(name) {\n      return \"Cannot load \" + name + \" plugin. Name not found in the registry\";\n    }\n  },\n  NOT_VALID_HANDLER: {\n    name: \"PluginHandlerIsNotValidException\",\n    message: function message() {\n      return \"To activate plugin you must provide a class derived from BasePlugin\";\n    }\n  },\n  NOT_IMPLEMENTED_METHOD: {\n    name: \"NotImplementedException\",\n    message: function message(method) {\n      return method + \" method not implemented\";\n    }\n  }\n};\nexports.default = PlayerError;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * @param {number} n - A certain number\n * @returns {boolean} - If the input is a number\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction isNumber(n) {\n  return Number(n) === n;\n}\n\n/**\n * @param {number} n - A certain number\n * @returns {boolean} - If the input is an integer\n */\nfunction isInt(n) {\n  return isNumber(n) && n % 1 === 0;\n}\n\n/**\n * @param {number} n - A certain number\n * @returns {boolean} - If the input is a float\n */\nfunction isFloat(n) {\n  return isNumber(n) && n % 1 !== 0;\n}\n\n/**\n * @param {Array<Object>} objects - The objects to merge\n * @returns {Object} - The merged object.\n */\nfunction merge(objects) {\n  var target = {};\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = objects[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var obj = _step.value;\n\n      Object.assign(target, obj);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return target;\n}\n\nexports.isNumber = isNumber;\nexports.isInt = isInt;\nexports.isFloat = isFloat;\nexports.merge = merge;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _fakeEvent = __webpack_require__(2);\n\nvar _fakeEvent2 = _interopRequireDefault(_fakeEvent);\n\nvar _fakeEventTarget = __webpack_require__(9);\n\nvar _fakeEventTarget2 = _interopRequireDefault(_fakeEventTarget);\n\nvar _playerError = __webpack_require__(10);\n\nvar _playerError2 = _interopRequireDefault(_playerError);\n\nvar _events = __webpack_require__(7);\n\nvar _logger = __webpack_require__(1);\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nvar _track = __webpack_require__(0);\n\nvar _track2 = _interopRequireDefault(_track);\n\nvar _videoTrack = __webpack_require__(5);\n\nvar _videoTrack2 = _interopRequireDefault(_videoTrack);\n\nvar _audioTrack = __webpack_require__(3);\n\nvar _audioTrack2 = _interopRequireDefault(_audioTrack);\n\nvar _textTrack = __webpack_require__(4);\n\nvar _textTrack2 = _interopRequireDefault(_textTrack);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n/* eslint-disable no-unused-vars */\n\n\nvar BaseMediaSourceAdapter = function (_FakeEventTarget) {\n  _inherits(BaseMediaSourceAdapter, _FakeEventTarget);\n\n  _createClass(BaseMediaSourceAdapter, null, [{\n    key: 'isSupported',\n\n\n    /**\n     * Checks if the media source adapter is supported.\n     * @function isSupported\n     * @returns {boolean} - Whether the media source adapter is supported.\n     * @static\n     */\n\n\n    /**\n     * The adapter config.\n     * @member {Object} _config\n     * @private\n     */\n\n\n    /**\n     * The source object.\n     * @member {Source} _sourceObj\n     * @private\n     */\n\n\n    /**\n     * The dom video element.\n     * @member {HTMLVideoElement} _videoElement\n     * @private\n     */\n\n    /**\n     * Passing the custom events to the actual media source adapter.\n     * @static\n     */\n    value: function isSupported() {\n      return true;\n    }\n\n    /**\n     * Factory method to create media source adapter.\n     * @function createAdapter\n     * @param {HTMLVideoElement} videoElement - The video element that the media source adapter work with.\n     * @param {Object} source - The source Object.\n     * @param {Object} config - The media source adapter configuration.\n     * @returns {IMediaSourceAdapter} - New instance of the run time media source adapter.\n     * @static\n     */\n\n\n    /**\n     * Passing the getLogger function to the actual media source adapter.\n     * @type {Function}\n     * @static\n     */\n\n  }, {\n    key: 'createAdapter',\n    value: function createAdapter(videoElement, source, config) {\n      return new this(videoElement, source, config);\n    }\n\n    /**\n     * @constructor\n     * @param {HTMLVideoElement} videoElement - The video element which bind to media source adapter.\n     * @param {Source} source - The source object.\n     * @param {Object} config - The media source adapter configuration.\n     */\n\n  }]);\n\n  function BaseMediaSourceAdapter(videoElement, source, config) {\n    _classCallCheck(this, BaseMediaSourceAdapter);\n\n    var _this = _possibleConstructorReturn(this, (BaseMediaSourceAdapter.__proto__ || Object.getPrototypeOf(BaseMediaSourceAdapter)).call(this));\n\n    _this._videoElement = videoElement;\n    _this._sourceObj = source;\n    _this._config = config;\n    return _this;\n  }\n\n  /**\n   * Destroys the media source adapter.\n   * @function destroy\n   * @returns {void}\n   */\n\n\n  _createClass(BaseMediaSourceAdapter, [{\n    key: 'destroy',\n    value: function destroy() {\n      this._sourceObj = null;\n      this._config = null;\n    }\n\n    /**\n     * Triggers the appropriate track changed event.\n     * @param {Track} track - The selected track.\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_onTrackChanged',\n    value: function _onTrackChanged(track) {\n      if (track instanceof _videoTrack2.default) {\n        this._trigger(BaseMediaSourceAdapter.CustomEvents.VIDEO_TRACK_CHANGED, { selectedVideoTrack: track });\n      } else if (track instanceof _audioTrack2.default) {\n        this._trigger(BaseMediaSourceAdapter.CustomEvents.AUDIO_TRACK_CHANGED, { selectedAudioTrack: track });\n      } else if (track instanceof _textTrack2.default) {\n        this._trigger(BaseMediaSourceAdapter.CustomEvents.TEXT_TRACK_CHANGED, { selectedTextTrack: track });\n      }\n    }\n\n    /**\n     * Dispatch an adapter event forward.\n     * @param {string} name - The name of the event.\n     * @param {Object} payload - The event payload.\n     * @returns {void}\n     */\n\n  }, {\n    key: '_trigger',\n    value: function _trigger(name, payload) {\n      this.dispatchEvent(new _fakeEvent2.default(name, payload));\n    }\n\n    /** Must implemented methods by the derived media source adapter **/\n\n  }, {\n    key: 'load',\n    value: function load() {\n      throw new _playerError2.default(_playerError2.default.TYPE.NOT_IMPLEMENTED_METHOD, 'load').getError();\n    }\n  }, {\n    key: 'selectVideoTrack',\n    value: function selectVideoTrack(videoTrack) {\n      throw new _playerError2.default(_playerError2.default.TYPE.NOT_IMPLEMENTED_METHOD, 'selectVideoTrack').getError();\n    }\n  }, {\n    key: 'selectAudioTrack',\n    value: function selectAudioTrack(audioTrack) {\n      throw new _playerError2.default(_playerError2.default.TYPE.NOT_IMPLEMENTED_METHOD, 'selectAudioTrack').getError();\n    }\n  }, {\n    key: 'selectTextTrack',\n    value: function selectTextTrack(textTrack) {\n      throw new _playerError2.default(_playerError2.default.TYPE.NOT_IMPLEMENTED_METHOD, 'selectTextTrack').getError();\n    }\n  }, {\n    key: 'hideTextTrack',\n    value: function hideTextTrack() {\n      throw new _playerError2.default(_playerError2.default.TYPE.NOT_IMPLEMENTED_METHOD, 'hideTextTrack').getError();\n    }\n  }, {\n    key: 'enableAdaptiveBitrate',\n    value: function enableAdaptiveBitrate() {\n      throw new _playerError2.default(_playerError2.default.TYPE.NOT_IMPLEMENTED_METHOD, 'enableAdaptiveBitrate').getError();\n    }\n  }, {\n    key: 'src',\n    get: function get() {\n      throw new _playerError2.default(_playerError2.default.TYPE.NOT_IMPLEMENTED_METHOD, 'get src').getError();\n    }\n  }], [{\n    key: 'canPlayType',\n    value: function canPlayType(mimeType) {\n      throw new _playerError2.default(_playerError2.default.TYPE.NOT_IMPLEMENTED_METHOD, 'static canPlayType').getError();\n    }\n  }]);\n\n  return BaseMediaSourceAdapter;\n}(_fakeEventTarget2.default);\n\nBaseMediaSourceAdapter.CustomEvents = _events.CUSTOM_EVENTS;\nBaseMediaSourceAdapter.getLogger = _logger2.default.getLogger;\nexports.default = BaseMediaSourceAdapter;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.registerMediaSourceAdapter = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _nativeAdapter = __webpack_require__(20);\n\nvar _nativeAdapter2 = _interopRequireDefault(_nativeAdapter);\n\nvar _logger = __webpack_require__(1);\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Media source provider\n * @classdesc\n */\nvar MediaSourceProvider = function () {\n  function MediaSourceProvider() {\n    _classCallCheck(this, MediaSourceProvider);\n  }\n\n  _createClass(MediaSourceProvider, null, [{\n    key: 'register',\n\n\n    /**\n     * Add a media source adapter to the registry\n     * @function register\n     * @param {IMediaSourceAdapter} mediaSourceAdapter - The media source adapter to register\n     * @static\n     * @returns {void}\n     */\n\n    /**\n     * The media source adapter registry\n     * @member {Array<IMediaSourceAdapter>} _mediaSourceAdapters\n     * @static\n     * @private\n     */\n    value: function register(mediaSourceAdapter) {\n      if (mediaSourceAdapter) {\n        if (!MediaSourceProvider._mediaSourceAdapters.includes(mediaSourceAdapter)) {\n          MediaSourceProvider._logger.debug('Adapter <' + mediaSourceAdapter.id + '> has been registered successfully');\n          MediaSourceProvider._mediaSourceAdapters.push(mediaSourceAdapter);\n        } else {\n          MediaSourceProvider._logger.debug('Adapter <' + mediaSourceAdapter.id + '> is already registered, do not register again');\n        }\n      }\n    }\n\n    /**\n     * Remove a media source adapter from the registry\n     * @function unRegister\n     * @param {IMediaSourceAdapter} mediaSourceAdapter - The media source adapter to unRegister\n     * @static\n     * @returns {void}\n     */\n\n    /**\n     * The selected adapter for playback\n     * @type {null|IMediaSourceAdapter}\n     * @static\n     * @private\n     */\n\n    /**\n     * The logger of the media source provider\n     * @member {any} _logger\n     * @static\n     * @private\n     */\n\n  }, {\n    key: 'unRegister',\n    value: function unRegister(mediaSourceAdapter) {\n      var index = MediaSourceProvider._mediaSourceAdapters.indexOf(mediaSourceAdapter);\n      if (index > -1) {\n        MediaSourceProvider._logger.debug('Unregistered <' + mediaSourceAdapter.id + '> adapter');\n        MediaSourceProvider._mediaSourceAdapters.splice(index, 1);\n      }\n    }\n\n    /**\n     * Checks if one of the registered media source adapters can play a given mime type\n     * @function canPlayType\n     * @param {string} mimeType - The mime type to check\n     * @static\n     * @returns {boolean} - If one of the adapters can play the specific mime type\n     */\n\n  }, {\n    key: 'canPlayType',\n    value: function canPlayType(mimeType) {\n      var mediaSourceAdapters = MediaSourceProvider._mediaSourceAdapters;\n      for (var i = 0; i < mediaSourceAdapters.length; i++) {\n        if (mediaSourceAdapters[i].canPlayType(mimeType)) {\n          MediaSourceProvider._selectedAdapter = mediaSourceAdapters[i];\n          MediaSourceProvider._logger.debug('Selected adapter is <' + MediaSourceProvider._selectedAdapter.id + '>');\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * Get the appropriate media source adapter to the video source\n     * @function getMediaSourceAdapter\n     * @param {HTMLVideoElement} videoElement - The video element which requires adapter for a given mimeType\n     * @param {Source} source - The selected source object\n     * @param {Object} config - The player configuration\n     * @returns {IMediaSourceAdapter|null} - The selected media source adapter, or null if such doesn't exists\n     * @static\n     */\n\n  }, {\n    key: 'getMediaSourceAdapter',\n    value: function getMediaSourceAdapter(videoElement, source, config) {\n      if (videoElement && source && config) {\n        if (!MediaSourceProvider._selectedAdapter) {\n          MediaSourceProvider.canPlayType(source.mimetype);\n        }\n        return MediaSourceProvider._selectedAdapter ? MediaSourceProvider._selectedAdapter.createAdapter(videoElement, source, config.engines) : null;\n      }\n      return null;\n    }\n  }]);\n\n  return MediaSourceProvider;\n}();\n\nMediaSourceProvider._logger = _logger2.default.getLogger('MediaSourceProvider');\nMediaSourceProvider._mediaSourceAdapters = [_nativeAdapter2.default];\nMediaSourceProvider._selectedAdapter = null;\nexports.default = MediaSourceProvider;\n\n\nvar registerMediaSourceAdapter = MediaSourceProvider.register;\nexports.registerMediaSourceAdapter = registerMediaSourceAdapter;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _player = __webpack_require__(8);\n\nvar _player2 = _interopRequireDefault(_player);\n\nvar _logger = __webpack_require__(1);\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nvar _util = __webpack_require__(11);\n\nvar _eventManager = __webpack_require__(6);\n\nvar _eventManager2 = _interopRequireDefault(_eventManager);\n\nvar _playerError = __webpack_require__(10);\n\nvar _playerError2 = _interopRequireDefault(_playerError);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/** The BasePlugin responsible to implement the plugin interface.\n * Contains several default implementations.\n * Other plugins should extend this class.\n * @classdesc\n */\nvar BasePlugin = function () {\n  _createClass(BasePlugin, null, [{\n    key: 'createPlugin',\n\n\n    /**\n     * Factory method to create the actual plugin.\n     * @param {string} name - The plugin name\n     * @param {Player} player - The player reference\n     * @param {Object} config - The plugin configuration\n     * @returns {BasePlugin} - New runtime plugin instance\n     * @static\n     * @public\n     */\n\n    /**\n     * The event manager of the plugin.\n     * @member\n     */\n\n    /**\n     * The logger of the plugin.\n     * @member\n     */\n\n    /**\n     * The runtime configuration of the plugin.\n     * @member\n     */\n    value: function createPlugin(name, player) {\n      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      return new this(name, player, config);\n    }\n\n    /**\n     * Returns under what conditions the plugin is valid.\n     * Plugin must implement this method.\n     * @returns {boolean} - Whether the plugin is valid and can be initiated. Default implementation is true\n     * @static\n     * @public\n     * @abstract\n     */\n\n    /**\n     * The default configuration of the plugin.\n     * Inherited plugins should override this property.\n     * @type {Object}\n     * @static\n     * @member\n     */\n\n    /**\n     * Reference to the actual player.\n     * @member\n     */\n\n    /**\n     * The name of the plugin.\n     * @member\n     */\n\n  }, {\n    key: 'isValid',\n    value: function isValid() {\n      throw new _playerError2.default(_playerError2.default.TYPE.NOT_IMPLEMENTED_METHOD, 'isValid()').getError();\n    }\n\n    /**\n     * constructor\n     * @param {string} name - The plugin name\n     * @param {Player} player - The player reference\n     * @param {Object} config - The plugin configuration\n     * @constructor\n     * @private\n     */\n\n  }]);\n\n  function BasePlugin(name, player, config) {\n    _classCallCheck(this, BasePlugin);\n\n    this.name = name;\n    this.player = player;\n    this.eventManager = new _eventManager2.default();\n    this.logger = _logger2.default.getLogger(this.name);\n    this.config = (0, _util.merge)([this.constructor.defaultConfig, config]);\n  }\n\n  /**\n   * Getter for the configuration of the plugin.\n   * @param {string} attr - The key in the plugin configuration (optional).\n   * @returns {*} - If attribute is provided, returns its value. Else, Returns the config of the plugin.\n   * @public\n   */\n\n\n  _createClass(BasePlugin, [{\n    key: 'getConfig',\n    value: function getConfig(attr) {\n      if (attr) {\n        return this.config[attr];\n      }\n      return this.config;\n    }\n\n    /**\n     * Updates the config of the plugin.\n     * @param {Object} update - The updated configuration.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'updateConfig',\n    value: function updateConfig(update) {\n      this.config = (0, _util.merge)([this.config, update]);\n    }\n\n    /**\n     * Runs the destroy logic of the plugin.\n     * plugin must implement this method.\n     * @public\n     * @abstract\n     * @returns {void}\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      throw new _playerError2.default(_playerError2.default.TYPE.NOT_IMPLEMENTED_METHOD, 'destroy()').getError();\n    }\n\n    /**\n     * Getter for the plugin's name.\n     * @returns {string} - The name of the plugin.\n     * @public\n     */\n\n  }, {\n    key: 'getName',\n    value: function getName() {\n      return this.name;\n    }\n  }]);\n\n  return BasePlugin;\n}();\n\nBasePlugin.defaultConfig = {};\nexports.default = BasePlugin;\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.registerPlugin = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _basePlugin = __webpack_require__(14);\n\nvar _basePlugin2 = _interopRequireDefault(_basePlugin);\n\nvar _playerError = __webpack_require__(10);\n\nvar _playerError2 = _interopRequireDefault(_playerError);\n\nvar _player = __webpack_require__(8);\n\nvar _player2 = _interopRequireDefault(_player);\n\nvar _logger = __webpack_require__(1);\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * The logger of the PluginManager class.\n * @private\n * @const\n */\nvar logger = _logger2.default.getLogger(\"PluginManager\");\n\n/** The PluginManager responsible for register plugins definitions and store plugins instances.\n * @classdesc\n */\n\nvar PluginManager = function () {\n  function PluginManager() {\n    _classCallCheck(this, PluginManager);\n\n    this._plugins = new Map();\n  }\n  /**\n   * The registry of the plugins.\n   * Maps plugin's name to his class.\n   * @type {Map}\n   * @static\n   * @private\n   */\n\n  /**\n   * The active plugins in the player.\n   * Maps plugin's name to his instance.\n   * @type {Map}\n   * @private\n   */\n\n\n  _createClass(PluginManager, [{\n    key: 'load',\n\n\n    /**\n     * Creates and store new instance of the plugin in case isValid() of the plugin returns true.\n     * @param {string} name - The plugin name\n     * @param {Player} player - The player reference\n     * @param {Object} [config={}] - The plugin configuration\n     * @returns {boolean} - Whether the plugin load was successful\n     * @public\n     */\n    value: function load(name, player) {\n      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (!PluginManager._registry.has(name)) {\n        throw new _playerError2.default(_playerError2.default.TYPE.NOT_REGISTERED_PLUGIN, name).getError();\n      }\n      var pluginClass = PluginManager._registry.get(name);\n      if (pluginClass != null && pluginClass.isValid()) {\n        this._plugins.set(name, pluginClass.createPlugin(name, player, config));\n        logger.debug('Plugin <' + name + '> has been loaded');\n        return true;\n      }\n      logger.debug('Plugin <' + name + '> isn\\'t loaded, isValid()=false');\n      return false;\n    }\n\n    /**\n     * Iterates over all the plugins and calls private _destroy.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._plugins.forEach(this._destroy.bind(this));\n    }\n\n    /**\n     * Calls destroy() method of the plugin's impl.\n     * @param {BasePlugin} plugin - The plugin instance\n     * @param {string} name - The plugin name\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_destroy',\n    value: function _destroy(plugin, name) {\n      plugin.destroy();\n      this._plugins.delete(name);\n    }\n\n    /**\n     * Returns the plugin's instance.\n     * @param {string} name - The plugin name\n     * @returns {BasePlugin} - The plugin instance\n     * @public\n     */\n\n  }, {\n    key: 'get',\n    value: function get(name) {\n      return this._plugins.get(name);\n    }\n  }], [{\n    key: 'register',\n\n\n    /**\n     * Writes the plugin in the registry.\n     * Maps: plugin name -> plugin class.\n     * @param {string} name - The plugin name\n     * @param {Function} handler - The plugin class\n     * @returns {boolean} - If the registration request succeeded\n     * @static\n     * @public\n     */\n    value: function register(name, handler) {\n      if (typeof handler !== 'function' || handler.prototype instanceof _basePlugin2.default === false) {\n        throw new _playerError2.default(_playerError2.default.TYPE.NOT_VALID_HANDLER).getError();\n      }\n      if (!PluginManager._registry.has(name)) {\n        PluginManager._registry.set(name, handler);\n        logger.debug('Plugin <' + name + '> has been registered successfully');\n        return true;\n      }\n      logger.debug('Plugin <' + name + '> is already registered, do not register again');\n      return false;\n    }\n\n    /**\n     * Removes the plugin from the registry.\n     * @param {string} name - The plugin name\n     * @static\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'unRegister',\n    value: function unRegister(name) {\n      if (PluginManager._registry.has(name)) {\n        PluginManager._registry.delete(name);\n        logger.debug('Unregistered <' + name + '> plugin.');\n      }\n    }\n  }]);\n\n  return PluginManager;\n}();\n\n/**\n * Export the register method.\n * @type {function}\n * @constant\n */\n\n\nPluginManager._registry = new Map();\nexports.default = PluginManager;\nvar registerPlugin = PluginManager.register;\nexports.registerPlugin = registerPlugin;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar PLAYER_STATE_TYPES = {\n  IDLE: \"idle\",\n  LOADING: \"loading\",\n  PLAYING: \"playing\",\n  PAUSED: \"paused\",\n  BUFFERING: \"buffering\"\n};\n\nexports.default = PLAYER_STATE_TYPES;\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * A simple multimap template.\n * @constructor\n * @struct\n * @template T\n */\nvar MultiMap = function () {\n  function MultiMap() {\n    _classCallCheck(this, MultiMap);\n\n    /** @private {!Object.<string, !Array.<T>>} */\n    this._map = new Map();\n  }\n\n  /**\n   * Add a key, value pair to the map.\n   * @param {string} key -\n   * @param {T} value  -\n   * @returns {void}\n   */\n\n\n  _createClass(MultiMap, [{\n    key: \"push\",\n    value: function push(key, value) {\n      if (this._map.has(key)) {\n        var list = this._map.get(key);\n        if (Array.isArray(list)) {\n          list.push(value);\n          this._map.set(key, list);\n        }\n      } else {\n        this._map.set(key, [value]);\n      }\n    }\n\n    /**\n     * Set an array of values for the key, overwriting any previous data.\n     * @param {string} key -\n     * @param {!Array.<T>} values -\n     * @returns {void}\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(key, values) {\n      this._map.set(key, values);\n    }\n\n    /**\n     * Check for a key.\n     * @param {string} key -\n     * @return {boolean} true if the key exists.\n     */\n\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      return this._map.has(key);\n    }\n\n    /**\n     * Get a list of values by key.\n     * @param {string} key -\n     * @return {Array.<T>} or null if no suZch key exists.\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      var list = this._map.get(key);\n      // slice() clones the list so that it and the map can each be modified\n      // without affecting the other.\n      return list ? list.slice() : [];\n    }\n\n    /**\n     * Get a list of all values.\n     * @returns {!Array.<T>} -\n     */\n\n  }, {\n    key: \"getAll\",\n    value: function getAll() {\n      var list = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this._map.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var value = _step.value;\n\n          list = list.concat(value);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return list;\n    }\n\n    /**\n     * Remove a specific value, if it exists.\n     * @param {string} key -\n     * @param {T} value -\n     * @returns {void}\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(key, value) {\n      if (!this._map.has(key)) return;\n      var list = this._map.get(key);\n      if (Array.isArray(list)) {\n        for (var i = 0; i < list.length; ++i) {\n          if (list[i] == value) {\n            list.splice(i, 1);\n            --i;\n          }\n        }\n      }\n    }\n\n    /**\n     * Get all keys from the multimap.\n     * @return {!Array.<string>}\n     */\n    // eslint-disable-next-line no-undef\n\n  }, {\n    key: \"keys\",\n    value: function keys() {\n      return this._map.keys();\n    }\n\n    /**\n     * Clear all keys and values from the multimap.\n     * @returns {void}\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._map.clear();\n    }\n  }]);\n\n  return MultiMap;\n}();\n\nexports.default = MultiMap;\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"name\": \"playkit-js\",\n\t\"version\": \"0.2.0\",\n\t\"main\": \"dist/playkit.js\",\n\t\"scripts\": {\n\t\t\"clean\": \"rm -rf ./dist\",\n\t\t\"prebuild\": \"npm run clean\",\n\t\t\"build:prod\": \"NODE_ENV=production webpack\",\n\t\t\"build\": \"webpack\",\n\t\t\"dev\": \"webpack --progress --colors --watch\",\n\t\t\"test\": \"NODE_ENV=test karma start --color\",\n\t\t\"test:chrome\": \"NODE_ENV=test karma start --color --browsers Chrome\",\n\t\t\"test:chrome:dots\": \"NODE_ENV=test karma start --color --browsers Chrome --reporters dots\",\n\t\t\"test:firefox\": \"NODE_ENV=test karma start --color --browsers Firefox\",\n\t\t\"test:safari\": \"NODE_ENV=test karma start --color --browsers Safari\",\n\t\t\"test:watch\": \"NODE_ENV=test karma start --color --auto-watch\",\n\t\t\"start\": \"webpack-dev-server\",\n\t\t\"release\": \"npm run build:prod && npm run commit:dist && standard-version\",\n\t\t\"publish\": \"git push --follow-tags --no-verify origin develop\",\n\t\t\"eslint\": \"eslint . --color\",\n\t\t\"flow\": \"flow check\",\n\t\t\"eslint:flow:test\": \"npm run eslint && npm run flow && npm run test\",\n\t\t\"commit:dist\": \"git add --all dist && (git commit -m 'chore: update dist' || exit 0)\",\n\t\t\"prepush-msg:build\": \"echo '\\nRunning build before push...\\n' && exit 0\",\n\t\t\"prepush-msg:dist\": \"echo '\\nAdding dist files to a seperate commit...\\n' && exit 0\",\n\t\t\"prepush-msg:done\": \"echo '\\nPre push tasks are done.\\n' && exit 0\"\n\t},\n\t\"pre-push\": [\n\t\t\"prepush-msg:build\",\n\t\t\"prebuild\",\n\t\t\"build\",\n\t\t\"build:prod\",\n\t\t\"prepush-msg:dist\",\n\t\t\"commit:dist\",\n\t\t\"prepush-msg:done\"\n\t],\n\t\"devDependencies\": {\n\t\t\"babel-cli\": \"^6.18.0\",\n\t\t\"babel-core\": \"^6.18.2\",\n\t\t\"babel-eslint\": \"^7.1.1\",\n\t\t\"babel-loader\": \"^6.2.7\",\n\t\t\"babel-plugin-istanbul\": \"^4.0.0\",\n\t\t\"babel-plugin-transform-class-properties\": \"^6.22.0\",\n\t\t\"babel-plugin-transform-flow-strip-types\": \"^6.22.0\",\n\t\t\"babel-preset-es2015\": \"^6.18.0\",\n\t\t\"babel-register\": \"^6.23.0\",\n\t\t\"chai\": \"^3.5.0\",\n\t\t\"cross-env\": \"^3.1.4\",\n\t\t\"eslint\": \"^3.10.0\",\n\t\t\"eslint-loader\": \"^1.6.1\",\n\t\t\"eslint-plugin-flowtype\": \"^2.30.0\",\n\t\t\"eslint-plugin-import\": \"^2.2.0\",\n\t\t\"eslint-plugin-mocha-no-only\": \"^0.0.5\",\n\t\t\"flow-bin\": \"latest\",\n\t\t\"istanbul\": \"^0.4.5\",\n\t\t\"karma\": \"^1.5.0\",\n\t\t\"karma-chai\": \"^0.1.0\",\n\t\t\"karma-chrome-launcher\": \"^2.0.0\",\n\t\t\"karma-cli\": \"^1.0.1\",\n\t\t\"karma-coverage\": \"^1.1.1\",\n\t\t\"karma-firefox-launcher\": \"^1.0.1\",\n\t\t\"karma-ie-launcher\": \"^1.0.0\",\n\t\t\"karma-mocha\": \"^1.3.0\",\n\t\t\"karma-safari-launcher\": \"^1.0.0\",\n\t\t\"karma-sourcemap-loader\": \"^0.3.7\",\n\t\t\"karma-webpack\": \"^2.0.2\",\n\t\t\"mocha\": \"^3.2.0\",\n\t\t\"mocha-cli\": \"^1.0.1\",\n\t\t\"pre-push\": \"^0.1.1\",\n\t\t\"sinon\": \"^2.0.0\",\n\t\t\"sinon-chai\": \"^2.8.0\",\n\t\t\"standard-version\": \"^4.0.0\",\n\t\t\"uglifyjs-webpack-plugin\": \"^0.4.3\",\n\t\t\"webpack\": \"latest\",\n\t\t\"webpack-dev-server\": \"latest\"\n\t},\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"https://github.com/kaltura/playkit-js\"\n\t},\n\t\"keywords\": [\n\t\t\"kaltura\",\n\t\t\"player\",\n\t\t\"html5 player\"\n\t],\n\t\"license\": \"AGPLV3\",\n\t\"bugs\": {\n\t\t\"url\": \"https://github.com/kaltura/playkit-js/issues\"\n\t},\n\t\"homepage\": \"https://github.com/kaltura/playkit-js\",\n\t\"dependencies\": {\n\t\t\"js-logger\": \"^1.3.0\"\n\t}\n};\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _fakeEventTarget = __webpack_require__(9);\n\nvar _fakeEventTarget2 = _interopRequireDefault(_fakeEventTarget);\n\nvar _fakeEvent = __webpack_require__(2);\n\nvar _fakeEvent2 = _interopRequireDefault(_fakeEvent);\n\nvar _eventManager = __webpack_require__(6);\n\nvar _eventManager2 = _interopRequireDefault(_eventManager);\n\nvar _events = __webpack_require__(7);\n\nvar _mediaSourceProvider = __webpack_require__(13);\n\nvar _mediaSourceProvider2 = _interopRequireDefault(_mediaSourceProvider);\n\nvar _videoTrack = __webpack_require__(5);\n\nvar _videoTrack2 = _interopRequireDefault(_videoTrack);\n\nvar _audioTrack = __webpack_require__(3);\n\nvar _audioTrack2 = _interopRequireDefault(_audioTrack);\n\nvar _textTrack = __webpack_require__(4);\n\nvar _textTrack2 = _interopRequireDefault(_textTrack);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Html5 = function (_FakeEventTarget) {\n  _inherits(Html5, _FakeEventTarget);\n\n  _createClass(Html5, null, [{\n    key: 'canPlayType',\n\n\n    /**\n     * Checks if the engine can play a given mime type.\n     * @param {string} mimeType - The mime type to check.\n     * @returns {boolean} - Whether the engine can play the mime type.\n     */\n\n    /**\n     * The selected media source adapter of the engine.\n     * @type {IMediaSourceAdapter}\n     * @private\n     */\n\n    /**\n     * The video element.\n     * @type {HTMLVideoElement}\n     * @private\n     */\n    value: function canPlayType(mimeType) {\n      return _mediaSourceProvider2.default.canPlayType(mimeType);\n    }\n\n    /**\n     * @constructor\n     * @param {Source} source - The selected source object.\n     * @param {Object} config - The player configuration.\n     */\n\n\n    /**\n     * @type {string} - The engine name.\n     */\n\n    /**\n     * The event manager of the engine.\n     * @type {EventManager}\n     * @private\n     */\n\n  }]);\n\n  function Html5(source, config) {\n    _classCallCheck(this, Html5);\n\n    var _this = _possibleConstructorReturn(this, (Html5.__proto__ || Object.getPrototypeOf(Html5)).call(this));\n\n    _this._createVideoElement();\n    _this._eventManager = new _eventManager2.default();\n    _this._loadMediaSourceAdapter(source, config);\n    _this.attach();\n    return _this;\n  }\n\n  /**\n   * Destroys the engine.\n   * @public\n   * @returns {void}\n   */\n\n\n  _createClass(Html5, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.detach();\n      if (this._mediaSourceAdapter) {\n        this._mediaSourceAdapter.destroy();\n      }\n      if (this._el) {\n        this.pause();\n        this._el.removeAttribute('src');\n        if (this._el.parentNode) {\n          this._el.parentNode.removeChild(this._el);\n        }\n      }\n      this._eventManager.destroy();\n    }\n\n    /**\n     * Listen to the video element events and triggers them from the engine.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'attach',\n    value: function attach() {\n      var _this2 = this;\n\n      var _loop = function _loop(playerEvent) {\n        _this2._eventManager.listen(_this2._el, _events.HTML5_EVENTS[playerEvent], function () {\n          _this2.dispatchEvent(new _fakeEvent2.default(_events.HTML5_EVENTS[playerEvent]));\n        });\n      };\n\n      for (var playerEvent in _events.HTML5_EVENTS) {\n        _loop(playerEvent);\n      }\n      if (this._mediaSourceAdapter) {\n        // listen and dispatch adaptive bitrate changed event\n        this._eventManager.listen(this._mediaSourceAdapter, _events.CUSTOM_EVENTS.VIDEO_TRACK_CHANGED, function (event) {\n          _this2.dispatchEvent(event);\n        });\n        this._eventManager.listen(this._mediaSourceAdapter, _events.CUSTOM_EVENTS.AUDIO_TRACK_CHANGED, function (event) {\n          return _this2.dispatchEvent(event);\n        });\n        this._eventManager.listen(this._mediaSourceAdapter, _events.CUSTOM_EVENTS.TEXT_TRACK_CHANGED, function (event) {\n          return _this2.dispatchEvent(event);\n        });\n      }\n    }\n\n    /**\n     * Remove the listeners of the video element events.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'detach',\n    value: function detach() {\n      for (var playerEvent in _events.HTML5_EVENTS) {\n        this._eventManager.unlisten(this._el, _events.HTML5_EVENTS[playerEvent]);\n      }\n      if (this._mediaSourceAdapter) {\n        // unlisten to adaptive bitrate changed\n        this._eventManager.unlisten(this._mediaSourceAdapter, _events.CUSTOM_EVENTS.VIDEO_TRACK_CHANGED);\n        this._eventManager.unlisten(this._mediaSourceAdapter, _events.CUSTOM_EVENTS.AUDIO_TRACK_CHANGED);\n        this._eventManager.unlisten(this._mediaSourceAdapter, _events.CUSTOM_EVENTS.TEXT_TRACK_CHANGED);\n      }\n    }\n\n    /**\n     * @returns {HTMLVideoElement} - The video element.\n     * @public\n     */\n\n  }, {\n    key: 'getVideoElement',\n    value: function getVideoElement() {\n      return this._el;\n    }\n\n    /**\n     * Creates a video element dom object.\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_createVideoElement',\n    value: function _createVideoElement() {\n      this._el = document.createElement(\"video\");\n      //Set attributes\n      this._el.style.width = \"640px\";\n      this._el.style.height = \"360px\";\n      this._el.style.backgroundColor = \"black\";\n      this._el.controls = true;\n      if (document && document.body) {\n        document.body.appendChild(this._el);\n      }\n    }\n\n    /**\n     * Loads the appropriate media source extension adapter.\n     * @param {Source} source - The selected source object.\n     * @param {Object} config - The media source extension configuration.\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_loadMediaSourceAdapter',\n    value: function _loadMediaSourceAdapter(source, config) {\n      this._mediaSourceAdapter = _mediaSourceProvider2.default.getMediaSourceAdapter(this.getVideoElement(), source, config);\n    }\n\n    /**\n     * Select a new video track.\n     * @param {VideoTrack} videoTrack - The video track object to set.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'selectVideoTrack',\n    value: function selectVideoTrack(videoTrack) {\n      if (this._mediaSourceAdapter) {\n        this._mediaSourceAdapter.selectVideoTrack(videoTrack);\n      }\n    }\n\n    /**\n     * Select a new audio track.\n     * @param {AudioTrack} audioTrack - The video track object to set.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'selectAudioTrack',\n    value: function selectAudioTrack(audioTrack) {\n      if (this._mediaSourceAdapter) {\n        this._mediaSourceAdapter.selectAudioTrack(audioTrack);\n      }\n    }\n\n    /**\n     * Select a new text track.\n     * @param {TextTrack} textTrack - The text track object to set.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'selectTextTrack',\n    value: function selectTextTrack(textTrack) {\n      if (this._mediaSourceAdapter) {\n        this._mediaSourceAdapter.selectTextTrack(textTrack);\n      }\n    }\n\n    /**\n     * Hide the text track\n     * @function hideTextTrack\n     * @returns {void}\n     * @public\n     */\n\n  }, {\n    key: 'hideTextTrack',\n    value: function hideTextTrack() {\n      if (this._mediaSourceAdapter) {\n        this._mediaSourceAdapter.hideTextTrack();\n      }\n    }\n\n    /**\n     * Enables adaptive bitrate switching according to the media source extension logic.\n     * @function enableAdaptiveBitrate\n     * @returns {void}\n     * @public\n     */\n\n  }, {\n    key: 'enableAdaptiveBitrate',\n    value: function enableAdaptiveBitrate() {\n      if (this._mediaSourceAdapter) {\n        this._mediaSourceAdapter.enableAdaptiveBitrate();\n      }\n    }\n\n    /**\n     * Set a source.\n     * @param {string} source - Source to set.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'play',\n\n\n    //playback interface\n    /**\n     * Start/resume playback.\n     * @public\n     * @returns {void}\n     */\n    value: function play() {\n      return this._el.play();\n    }\n\n    /**\n     * Pause playback.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      return this._el.pause();\n    }\n\n    /**\n     * Load media.\n     * @public\n     * @returns {Promise<Object>} - The loaded data\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      return this._mediaSourceAdapter ? this._mediaSourceAdapter.load() : Promise.resolve({});\n    }\n\n    /**\n     * Get the current time in seconds.\n     * @returns {Number} - The current playback time.\n     * @public\n     */\n\n  }, {\n    key: 'ready',\n    value: function ready() {}\n\n    /**\n     * Get paused state.\n     * @returns {boolean} - The paused value of the video element.\n     * @public\n     */\n\n  }, {\n    key: 'src',\n    set: function set(source) {\n      this._el.src = source;\n    }\n\n    /**\n     * Get the source url.\n     * @returns {string} - The source url.\n     * @public\n     */\n    ,\n    get: function get() {\n      if (this._mediaSourceAdapter) {\n        return this._mediaSourceAdapter.src;\n      }\n      return \"\";\n    }\n  }, {\n    key: 'currentTime',\n    get: function get() {\n      return this._el.currentTime;\n    }\n\n    /**\n     * Set the current time in seconds.\n     * @param {Number} to - The number to set in seconds.\n     * @public\n     * @returns {void}\n     */\n    ,\n    set: function set(to) {\n      this._el.currentTime = to;\n    }\n\n    /**\n     * Get the duration in seconds.\n     * @returns {Number} - The playback duration.\n     * @public\n     */\n\n  }, {\n    key: 'duration',\n    get: function get() {\n      return this._el.duration;\n    }\n\n    /**\n     * Set playback volume.\n     * @param {Number} vol - The volume to set.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'volume',\n    set: function set(vol) {\n      this._el.volume = vol;\n    }\n\n    /**\n     * Get playback volume.\n     * @returns {Number} - The volume value of the video element.\n     * @public\n     */\n    ,\n    get: function get() {\n      return this._el.volume;\n    }\n  }, {\n    key: 'paused',\n    get: function get() {\n      return this._el.paused;\n    }\n\n    /**\n     * Get seeking state.\n     * @returns {boolean} - The seeking value of the video element.\n     * @public\n     */\n\n  }, {\n    key: 'seeking',\n    get: function get() {\n      return this._el.seeking;\n    }\n\n    /**\n     * Get the first seekable range (part) of the video in seconds.\n     * @returns {TimeRanges} - First seekable range (part) of the video in seconds.\n     * @public\n     */\n\n  }, {\n    key: 'seekable',\n    get: function get() {\n      return this._el.seekable;\n    }\n\n    /**\n     * Get the first played range (part) of the video in seconds.\n     * @returns {TimeRanges} - First played range (part) of the video in seconds.\n     * @public\n     */\n\n  }, {\n    key: 'played',\n    get: function get() {\n      return this._el.played;\n    }\n\n    /**\n     * Get the first buffered range (part) of the video in seconds.\n     * @returns {TimeRanges} - First buffered range (part) of the video in seconds.\n     * @public\n     */\n\n  }, {\n    key: 'buffered',\n    get: function get() {\n      return this._el.buffered;\n    }\n\n    /**\n     * Set player muted state.\n     * @param {boolean} mute - The new mute value.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'muted',\n    set: function set(mute) {\n      this._el.muted = mute;\n    }\n\n    /**\n     * Get player muted state.\n     * @returns {boolean} - The muted value of the video element.\n     * @public\n     */\n    ,\n    get: function get() {\n      return this._el.muted;\n    }\n\n    /**\n     * Get the default mute value.\n     * @returns {boolean} - The defaultMuted of the video element.\n     * @public\n     */\n\n  }, {\n    key: 'defaultMuted',\n    get: function get() {\n      return this._el.defaultMuted;\n    }\n\n    /**\n     * Sets an image to be shown while the video is downloading, or until the user hits the play button.\n     * @param {string} poster - The image url to be shown.\n     * @returns {void}\n     * @public\n     */\n\n  }, {\n    key: 'poster',\n    set: function set(poster) {\n      this._el.poster = poster;\n    }\n\n    /**\n     * Gets an image to be shown while the video is downloading, or until the user hits the play button.\n     * @returns {poster} - The image url.\n     * @public\n     */\n    ,\n    get: function get() {\n      return this._el.poster;\n    }\n\n    /**\n     * Specifies if and how the author thinks that the video should be loaded when the page loads.\n     * @param {string} preload - The preload value.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'preload',\n    set: function set(preload) {\n      this._el.preload = preload;\n    }\n\n    /**\n     * Gets the preload value of the video element.\n     * @returns {string} - The preload value.\n     * @public\n     */\n    ,\n    get: function get() {\n      return this._el.preload;\n    }\n\n    /**\n     * Set if the video will automatically start playing as soon as it can do so without stopping.\n     * @param {boolean} autoplay - The autoplay value.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'autoplay',\n    set: function set(autoplay) {\n      this._el.autoplay = autoplay;\n    }\n\n    /**\n     * Gets the autoplay value of the video element.\n     * @returns {boolean} - The autoplay value.\n     * @public\n     */\n    ,\n    get: function get() {\n      return this._el.autoplay;\n    }\n\n    /**\n     * Set to specifies that the video will start over again, every time it is finished.\n     * @param {boolean} loop - the loop value.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'loop',\n    set: function set(loop) {\n      this._el.loop = loop;\n    }\n\n    /**\n     * Gets the loop value of the video element.\n     * @returns {boolean} - The loop value.\n     * @public\n     */\n    ,\n    get: function get() {\n      return this._el.loop;\n    }\n\n    /**\n     * Set to specifies that video controls should be displayed.\n     * @param {boolean} controls - the controls value.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'controls',\n    set: function set(controls) {\n      this._el.controls = controls;\n    }\n\n    /**\n     * Gets the controls value of the video element.\n     * @returns {boolean} - The controls value.\n     * @public\n     */\n    ,\n    get: function get() {\n      return this._el.controls;\n    }\n\n    /**\n     * Sets the current playback speed of the audio/video.\n     * @param {Number} playbackRate - The playback speed value.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'playbackRate',\n    set: function set(playbackRate) {\n      this._el.playbackRate = playbackRate;\n    }\n\n    /**\n     * Gets the current playback speed of the audio/video.\n     * @returns {Number} - The current playback speed value.\n     * @public\n     */\n    ,\n    get: function get() {\n      return this._el.playbackRate;\n    }\n\n    /**\n     * Sets the default playback speed of the audio/video.\n     * @param {Number} defaultPlaybackRate - The default playback speed value.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'defaultPlaybackRate',\n    set: function set(defaultPlaybackRate) {\n      this._el.defaultPlaybackRate = defaultPlaybackRate;\n    }\n\n    /**\n     * Gets the default playback speed of the audio/video.\n     * @returns {Number} - The default playback speed value.\n     * @public\n     */\n    ,\n    get: function get() {\n      return this._el.defaultPlaybackRate;\n    }\n\n    /**\n     * The ended property returns whether the playback of the audio/video has ended.\n     * @returns {boolean} - The ended value.\n     * @public\n     */\n\n  }, {\n    key: 'ended',\n    get: function get() {\n      return this._el.ended;\n    }\n\n    /**\n     * The error property returns a MediaError object.\n     * @returns {MediaError} - The MediaError object has a code property containing the error state of the audio/video.\n     * @public\n     */\n\n  }, {\n    key: 'error',\n    get: function get() {\n      return this._el.error;\n    }\n\n    /**\n     * @returns {Number} - The current network state (activity) of the audio/video.\n     * @public\n     */\n\n  }, {\n    key: 'networkState',\n    get: function get() {\n      return this._el.networkState;\n    }\n\n    /**\n     * Indicates if the audio/video is ready to play or not.\n     * @returns {Number} - The current ready state of the audio/video.\n     * 0 = HAVE_NOTHING - no information whether or not the audio/video is ready.\n     * 1 = HAVE_METADATA - metadata for the audio/video is ready.\n     * 2 = HAVE_CURRENT_DATA - data for the current playback position is available, but not enough data to play next frame/millisecond.\n     * 3 = HAVE_FUTURE_DATA - data for the current and at least the next frame is available.\n     * 4 = HAVE_ENOUGH_DATA - enough data available to start playing.\n     */\n\n  }, {\n    key: 'readyState',\n    get: function get() {\n      return this._el.readyState;\n    }\n\n    /**\n     * @returns {Number} - The height of the video player, in pixels.\n     * @public\n     */\n\n  }, {\n    key: 'videoHeight',\n    get: function get() {\n      return this._el.videoHeight;\n    }\n\n    /**\n     * @returns {Number} - The width of the video player, in pixels.\n     * @public\n     */\n\n  }, {\n    key: 'videoWidth',\n    get: function get() {\n      return this._el.videoWidth;\n    }\n\n    /**\n     * Test video element to check if html5 engine is supported.\n     */\n\n  }], [{\n    key: 'isSupported',\n\n\n    /**\n     * Checks if the html5 engine is supported.\n     * @returns {boolean} - The isSupported result.\n     * @static\n     * @public\n     */\n    value: function isSupported() {\n      try {\n        Html5.TEST_VID = document.createElement('video');\n        Html5.TEST_VID.volume = 0.5;\n      } catch (e) {\n        return false;\n      }\n      return !!Html5.TEST_VID.canPlayType;\n    }\n  }]);\n\n  return Html5;\n}(_fakeEventTarget2.default);\n\nHtml5.EngineName = \"html5\";\nexports.default = Html5;\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _eventManager = __webpack_require__(6);\n\nvar _eventManager2 = _interopRequireDefault(_eventManager);\n\nvar _events = __webpack_require__(7);\n\nvar _track = __webpack_require__(0);\n\nvar _track2 = _interopRequireDefault(_track);\n\nvar _videoTrack = __webpack_require__(5);\n\nvar _videoTrack2 = _interopRequireDefault(_videoTrack);\n\nvar _audioTrack = __webpack_require__(3);\n\nvar _audioTrack2 = _interopRequireDefault(_audioTrack);\n\nvar _textTrack = __webpack_require__(4);\n\nvar _textTrack2 = _interopRequireDefault(_textTrack);\n\nvar _baseMediaSourceAdapter = __webpack_require__(12);\n\nvar _baseMediaSourceAdapter2 = _interopRequireDefault(_baseMediaSourceAdapter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * An illustration of media source extension for progressive download\n * @classdesc\n * @implements {IMediaSourceAdapter}\n */\nvar NativeAdapter = function (_BaseMediaSourceAdapt) {\n  _inherits(NativeAdapter, _BaseMediaSourceAdapt);\n\n  _createClass(NativeAdapter, null, [{\n    key: 'canPlayType',\n\n\n    /**\n     * Checks if NativeAdapter can play a given mime type.\n     * @function canPlayType\n     * @param {string} mimeType - The mime type to check\n     * @returns {boolean} - Whether the native adapter can play a specific mime type\n     * @static\n     */\n\n    /**\n     * The event manager of the class.\n     * @member {EventManager} - _eventManager\n     * @type {EventManager}\n     * @private\n     */\n\n    /**\n     * The load promise\n     * @member {Promise<Object>} - _loadPromise\n     * @type {Promise<Object>}\n     * @private\n     */\n\n    /**\n     * The id of the Adapter\n     * @member {string} id\n     * @static\n     * @public\n     */\n    value: function canPlayType(mimeType) {\n      var canPlayType = typeof mimeType === 'string' ? !!document.createElement(\"video\").canPlayType(mimeType.toLowerCase()) : false;\n      NativeAdapter._logger.debug('canPlayType result for mimeType:' + mimeType + ' is ' + canPlayType.toString());\n      return canPlayType;\n    }\n\n    /**\n     * @constructor\n     * @param {HTMLVideoElement} videoElement - The video element which bind to NativeAdapter\n     * @param {Source} source - The source object\n     * @param {Object} config - The media source adapter configuration\n     */\n\n\n    /**\n     * The adapter logger\n     * @member {any} _logger\n     * @private\n     * @static\n     */\n\n  }]);\n\n  function NativeAdapter(videoElement, source, config) {\n    _classCallCheck(this, NativeAdapter);\n\n    NativeAdapter._logger.debug('Creating adapter');\n\n    var _this = _possibleConstructorReturn(this, (NativeAdapter.__proto__ || Object.getPrototypeOf(NativeAdapter)).call(this, videoElement, source, config));\n\n    _this._eventManager = new _eventManager2.default();\n    return _this;\n  }\n\n  /**\n   * Load the video source\n   * @function load\n   * @returns {Promise<Object>} - The loaded data\n   */\n\n\n  _createClass(NativeAdapter, [{\n    key: 'load',\n    value: function load() {\n      var _this2 = this;\n\n      if (!this._loadPromise) {\n        this._loadPromise = new Promise(function (resolve, reject) {\n          // We're using 'loadeddata' event for native hls (on 'loadedmetadata' native hls doesn't have tracks yet).\n          _this2._eventManager.listen(_this2._videoElement, _events.HTML5_EVENTS.LOADED_DATA, function () {\n            _this2._eventManager.unlisten(_this2._videoElement, _events.HTML5_EVENTS.LOADED_DATA);\n            var data = { tracks: _this2._getParsedTracks() };\n            NativeAdapter._logger.debug('The source has been loaded successfully');\n            resolve(data);\n          });\n          _this2._eventManager.listen(_this2._videoElement, _events.HTML5_EVENTS.ERROR, function (error) {\n            _this2._eventManager.unlisten(_this2._videoElement, _events.HTML5_EVENTS.ERROR);\n            NativeAdapter._logger.error(error);\n            reject(error);\n          });\n          if (_this2._sourceObj && _this2._sourceObj.url) {\n            _this2._videoElement.src = _this2._sourceObj.url;\n          }\n        });\n      }\n      return this._loadPromise;\n    }\n\n    /**\n     * Destroys the native adapter.\n     * @function destroy\n     * @returns {void}\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      NativeAdapter._logger.debug('destroy');\n      _get(NativeAdapter.prototype.__proto__ || Object.getPrototypeOf(NativeAdapter.prototype), 'destroy', this).call(this);\n      this._eventManager.destroy();\n      this._loadPromise = null;\n    }\n\n    /**\n     * Get the parsed tracks\n     * @function _getParsedTracks\n     * @returns {Array<Track>} - The parsed tracks\n     * @private\n     */\n\n  }, {\n    key: '_getParsedTracks',\n    value: function _getParsedTracks() {\n      var videoTracks = this._getParsedVideoTracks();\n      var audioTracks = this._getParsedAudioTracks();\n      var textTracks = this._getParsedTextTracks();\n      return videoTracks.concat(audioTracks).concat(textTracks);\n    }\n\n    /**\n     * Get the parsed video tracks\n     * @function _getParsedVideoTracks\n     * @returns {Array<Track>} - The parsed video tracks\n     * @private\n     */\n\n  }, {\n    key: '_getParsedVideoTracks',\n    value: function _getParsedVideoTracks() {\n      var videoTracks = this._videoElement.videoTracks;\n      var parsedTracks = [];\n      if (videoTracks) {\n        for (var i = 0; i < videoTracks.length; i++) {\n          var settings = {\n            id: videoTracks[i].id,\n            active: videoTracks[i].selected,\n            label: videoTracks[i].label,\n            language: videoTracks[i].language,\n            index: i\n          };\n          parsedTracks.push(new _videoTrack2.default(settings));\n        }\n      }\n      return parsedTracks;\n    }\n\n    /**\n     * Get the parsed audio tracks\n     * @function _getParsedAudioTracks\n     * @returns {Array<Track>} - The parsed audio tracks\n     * @private\n     */\n\n  }, {\n    key: '_getParsedAudioTracks',\n    value: function _getParsedAudioTracks() {\n      var audioTracks = this._videoElement.audioTracks;\n      var parsedTracks = [];\n      if (audioTracks) {\n        for (var i = 0; i < audioTracks.length; i++) {\n          var settings = {\n            id: audioTracks[i].id,\n            active: audioTracks[i].enabled,\n            label: audioTracks[i].label,\n            language: audioTracks[i].language,\n            index: i\n          };\n          parsedTracks.push(new _audioTrack2.default(settings));\n        }\n      }\n      return parsedTracks;\n    }\n\n    /**\n     * Get the parsed text tracks\n     * @function _getParsedTextTracks\n     * @returns {Array<Track>} - The parsed text tracks\n     * @private\n     */\n\n  }, {\n    key: '_getParsedTextTracks',\n    value: function _getParsedTextTracks() {\n      var textTracks = this._videoElement.textTracks;\n      var parsedTracks = [];\n      if (textTracks) {\n        for (var i = 0; i < textTracks.length; i++) {\n          var settings = {\n            kind: textTracks[i].kind,\n            active: textTracks[i].mode === 'showing',\n            label: textTracks[i].label,\n            language: textTracks[i].language,\n            index: i\n          };\n          parsedTracks.push(new _textTrack2.default(settings));\n        }\n      }\n      return parsedTracks;\n    }\n\n    /**\n     * Select a video track\n     * @function selectVideoTrack\n     * @param {VideoTrack} videoTrack - the track to select\n     * @returns {void}\n     * @public\n     */\n\n  }, {\n    key: 'selectVideoTrack',\n    value: function selectVideoTrack(videoTrack) {\n      var videoTracks = this._videoElement.videoTracks;\n      if (videoTrack instanceof _videoTrack2.default && videoTracks && videoTracks[videoTrack.index]) {\n        this._disableVideoTracks();\n        videoTracks[videoTrack.index].selected = true;\n        this._onTrackChanged(videoTrack);\n      }\n    }\n\n    /**\n     * Select an audio track\n     * @function selectAudioTrack\n     * @param {AudioTrack} audioTrack - the  audio track to select\n     * @returns {void}\n     * @public\n     */\n\n  }, {\n    key: 'selectAudioTrack',\n    value: function selectAudioTrack(audioTrack) {\n      var audioTracks = this._videoElement.audioTracks;\n      if (audioTrack instanceof _audioTrack2.default && audioTracks && audioTracks[audioTrack.index]) {\n        this._disableAudioTracks();\n        audioTracks[audioTrack.index].enabled = true;\n        this._onTrackChanged(audioTrack);\n      }\n    }\n\n    /**\n     * Select a text track\n     * @function selectTextTrack\n     * @param {TextTrack} textTrack - the track to select\n     * @returns {void}\n     * @public\n     */\n\n  }, {\n    key: 'selectTextTrack',\n    value: function selectTextTrack(textTrack) {\n      var textTracks = this._videoElement.textTracks;\n      if (textTrack instanceof _textTrack2.default && (textTrack.kind === 'subtitles' || textTrack.kind === 'captions') && textTracks && textTracks[textTrack.index]) {\n        this._disableTextTracks();\n        textTracks[textTrack.index].mode = 'showing';\n        this._onTrackChanged(textTrack);\n      }\n    }\n\n    /**\n     * Hide the text track\n     * @function hideTextTrack\n     * @returns {void}\n     * @public\n     */\n\n  }, {\n    key: 'hideTextTrack',\n    value: function hideTextTrack() {\n      this._disableTextTracks();\n    }\n\n    /**\n     * Enables adaptive bitrate\n     * @function enableAdaptiveBitrate\n     * @returns {void}\n     * @public\n     */\n\n  }, {\n    key: 'enableAdaptiveBitrate',\n    value: function enableAdaptiveBitrate() {\n      NativeAdapter._logger.debug('Enabling adaptive bitrate not supported');\n    }\n\n    /**\n     * Disables all the existing video tracks.\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_disableVideoTracks',\n    value: function _disableVideoTracks() {\n      var videoTracks = this._videoElement.videoTracks;\n      if (videoTracks) {\n        for (var i = 0; i < videoTracks.length; i++) {\n          videoTracks[i].selected = false;\n        }\n      }\n    }\n\n    /**\n     * Disables all the existing audio tracks.\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_disableAudioTracks',\n    value: function _disableAudioTracks() {\n      var audioTracks = this._videoElement.audioTracks;\n      if (audioTracks) {\n        for (var i = 0; i < audioTracks.length; i++) {\n          audioTracks[i].enabled = false;\n        }\n      }\n    }\n\n    /**\n     * Disables all the existing text tracks.\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_disableTextTracks',\n    value: function _disableTextTracks() {\n      var textTracks = this._videoElement.textTracks;\n      if (textTracks) {\n        for (var i = 0; i < textTracks.length; i++) {\n          textTracks[i].mode = 'disabled';\n        }\n      }\n    }\n\n    /**\n     * Getter for the src that the adapter plays on the video element.\n     * @public\n     * @returns {string} - The src url.\n     */\n\n  }, {\n    key: 'src',\n    get: function get() {\n      return this._videoElement.src;\n    }\n  }]);\n\n  return NativeAdapter;\n}(_baseMediaSourceAdapter2.default);\n\nNativeAdapter.id = 'NativeAdapter';\nNativeAdapter._logger = _baseMediaSourceAdapter2.default.getLogger(NativeAdapter.id);\nexports.default = NativeAdapter;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VERSION = exports.TextTrack = exports.AudioTrack = exports.VideoTrack = exports.Track = exports.BasePlugin = exports.registerPlugin = exports.BaseMediaSourceAdapter = exports.registerMediaSourceAdapter = undefined;\nexports.playkit = playkit;\n\nvar _player = __webpack_require__(8);\n\nvar _player2 = _interopRequireDefault(_player);\n\nvar _logger = __webpack_require__(1);\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nvar _package = __webpack_require__(18);\n\nvar packageData = _interopRequireWildcard(_package);\n\nvar _baseMediaSourceAdapter = __webpack_require__(12);\n\nvar _baseMediaSourceAdapter2 = _interopRequireDefault(_baseMediaSourceAdapter);\n\nvar _mediaSourceProvider = __webpack_require__(13);\n\nvar _pluginManager = __webpack_require__(15);\n\nvar _basePlugin = __webpack_require__(14);\n\nvar _basePlugin2 = _interopRequireDefault(_basePlugin);\n\nvar _track = __webpack_require__(0);\n\nvar _track2 = _interopRequireDefault(_track);\n\nvar _videoTrack = __webpack_require__(5);\n\nvar _videoTrack2 = _interopRequireDefault(_videoTrack);\n\nvar _audioTrack = __webpack_require__(3);\n\nvar _audioTrack2 = _interopRequireDefault(_audioTrack);\n\nvar _textTrack = __webpack_require__(4);\n\nvar _textTrack2 = _interopRequireDefault(_textTrack);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Playkit version\nvar VERSION = packageData.version;\n\n\n_logger2.default.getLogger().log(\"%c Playkit \" + VERSION, \"color: yellow; font-size: large\");\n_logger2.default.getLogger().log(\"%c For more details see https://github.com/kaltura/playkit-js\", \"color: yellow;\");\n\n/**\n * @param {Object} config - The configuration of the player\n * @returns {Player} - The player instance\n */\nfunction playkit() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  return new _player2.default(config);\n}\n\n// Export the media source adapters necessary utils\nexports.registerMediaSourceAdapter = _mediaSourceProvider.registerMediaSourceAdapter;\nexports.BaseMediaSourceAdapter = _baseMediaSourceAdapter2.default;\n\n// Export the plugin framework\n\nexports.registerPlugin = _pluginManager.registerPlugin;\nexports.BasePlugin = _basePlugin2.default;\n\n// Export the tracks classes\n\nexports.Track = _track2.default;\nexports.VideoTrack = _videoTrack2.default;\nexports.AudioTrack = _audioTrack2.default;\nexports.TextTrack = _textTrack2.default;\n\n//export version\n\nexports.VERSION = VERSION;\nexports.default = playkit;\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _player = __webpack_require__(8);\n\nvar _player2 = _interopRequireDefault(_player);\n\nvar _eventManager = __webpack_require__(6);\n\nvar _eventManager2 = _interopRequireDefault(_eventManager);\n\nvar _state = __webpack_require__(23);\n\nvar _state2 = _interopRequireDefault(_state);\n\nvar _stateTypes = __webpack_require__(16);\n\nvar _stateTypes2 = _interopRequireDefault(_stateTypes);\n\nvar _events = __webpack_require__(7);\n\nvar _fakeEvent = __webpack_require__(2);\n\nvar _fakeEvent2 = _interopRequireDefault(_fakeEvent);\n\nvar _logger = __webpack_require__(1);\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * This class responsible to manage all the state machine of the player.\n * @classdesc\n */\n\n\n/**\n * Define a transition object.\n */\nvar StateManager = function () {\n\n  /**\n   * @constructor\n   * @param {Player} player - Reference to the player.\n   */\n\n  /**\n   * Holds the state history of the player.\n   * @member\n   * @type {Array<State>}\n   * @private\n   */\n\n  /**\n   * Holds the current state of the player.\n   * @member\n   * @type {State}\n   * @private\n   */\n\n  /**\n   * Reference to the actual player.\n   * @member\n   * @type {Player}\n   * @private\n   */\n  function StateManager(player) {\n    var _this = this,\n        _PlayerStates$IDLE,\n        _PlayerStates$LOADING,\n        _PlayerStates$PAUSED,\n        _PlayerStates$PLAYING,\n        _PlayerStates$BUFFERI,\n        _transitions;\n\n    _classCallCheck(this, StateManager);\n\n    this._transitions = (_transitions = {}, _defineProperty(_transitions, _stateTypes2.default.IDLE, (_PlayerStates$IDLE = {}, _defineProperty(_PlayerStates$IDLE, _events.HTML5_EVENTS.LOAD_START, function () {\n      _this._updateState(_stateTypes2.default.LOADING);\n      _this._dispatchEvent();\n    }), _defineProperty(_PlayerStates$IDLE, _events.HTML5_EVENTS.PLAY, function () {\n      _this._updateState(_stateTypes2.default.BUFFERING);\n      _this._dispatchEvent();\n    }), _PlayerStates$IDLE)), _defineProperty(_transitions, _stateTypes2.default.LOADING, (_PlayerStates$LOADING = {}, _defineProperty(_PlayerStates$LOADING, _events.HTML5_EVENTS.LOADED_METADATA, function () {\n      if (_this._player.config.autoPlay) {\n        _this._updateState(_stateTypes2.default.PLAYING);\n      } else {\n        _this._updateState(_stateTypes2.default.PAUSED);\n      }\n      _this._dispatchEvent();\n    }), _defineProperty(_PlayerStates$LOADING, _events.HTML5_EVENTS.ERROR, function () {\n      _this._updateState(_stateTypes2.default.IDLE);\n      _this._dispatchEvent();\n    }), _PlayerStates$LOADING)), _defineProperty(_transitions, _stateTypes2.default.PAUSED, (_PlayerStates$PAUSED = {}, _defineProperty(_PlayerStates$PAUSED, _events.HTML5_EVENTS.PLAY, function () {\n      _this._updateState(_stateTypes2.default.PLAYING);\n      _this._dispatchEvent();\n    }), _defineProperty(_PlayerStates$PAUSED, _events.HTML5_EVENTS.PLAYING, function () {\n      _this._updateState(_stateTypes2.default.PLAYING);\n      _this._dispatchEvent();\n    }), _defineProperty(_PlayerStates$PAUSED, _events.HTML5_EVENTS.ENDED, function () {\n      _this._updateState(_stateTypes2.default.IDLE);\n      _this._dispatchEvent();\n    }), _PlayerStates$PAUSED)), _defineProperty(_transitions, _stateTypes2.default.PLAYING, (_PlayerStates$PLAYING = {}, _defineProperty(_PlayerStates$PLAYING, _events.HTML5_EVENTS.PAUSE, function () {\n      _this._updateState(_stateTypes2.default.PAUSED);\n      _this._dispatchEvent();\n    }), _defineProperty(_PlayerStates$PLAYING, _events.HTML5_EVENTS.WAITING, function () {\n      _this._updateState(_stateTypes2.default.BUFFERING);\n      _this._dispatchEvent();\n    }), _defineProperty(_PlayerStates$PLAYING, _events.HTML5_EVENTS.ENDED, function () {\n      _this._updateState(_stateTypes2.default.IDLE);\n      _this._dispatchEvent();\n    }), _defineProperty(_PlayerStates$PLAYING, _events.HTML5_EVENTS.ERROR, function () {\n      _this._updateState(_stateTypes2.default.IDLE);\n      _this._dispatchEvent();\n    }), _PlayerStates$PLAYING)), _defineProperty(_transitions, _stateTypes2.default.BUFFERING, (_PlayerStates$BUFFERI = {}, _defineProperty(_PlayerStates$BUFFERI, _events.HTML5_EVENTS.PLAYING, function () {\n      _this._updateState(_stateTypes2.default.PLAYING);\n      _this._dispatchEvent();\n    }), _defineProperty(_PlayerStates$BUFFERI, _events.HTML5_EVENTS.PAUSE, function () {\n      _this._updateState(_stateTypes2.default.PAUSED);\n      _this._dispatchEvent();\n    }), _PlayerStates$BUFFERI)), _transitions);\n\n    this._player = player;\n    this._logger = _logger2.default.getLogger(\"StateManager\");\n    this._eventManager = new _eventManager2.default();\n    this._history = [];\n    this._prevState = null;\n    this._curState = new _state2.default(_stateTypes2.default.IDLE);\n    this._attachListeners();\n  }\n\n  /**\n   * Register to all necessary events which impacts on the player state.\n   * @private\n   * @returns {void}\n   */\n\n  /**\n   * The possible transitions from one state to another.\n   * @type {Array<Transition>}\n   * @private\n   */\n\n  /**\n   * Holds the previous state of the player.\n   * @member\n   * @type {State | null}\n   * @private\n   */\n\n  /**\n   * The event manager of the class.\n   * @member\n   * @type {EventManager}\n   * @private\n   */\n\n  /**\n   * The logger of the class.\n   * @member\n   * @type {any}\n   * @private\n   */\n\n\n  _createClass(StateManager, [{\n    key: '_attachListeners',\n    value: function _attachListeners() {\n      this._eventManager.listen(this._player, _events.HTML5_EVENTS.ERROR, this._doTransition.bind(this));\n      this._eventManager.listen(this._player, _events.HTML5_EVENTS.ENDED, this._doTransition.bind(this));\n      this._eventManager.listen(this._player, _events.HTML5_EVENTS.PLAY, this._doTransition.bind(this));\n      this._eventManager.listen(this._player, _events.HTML5_EVENTS.LOAD_START, this._doTransition.bind(this));\n      this._eventManager.listen(this._player, _events.HTML5_EVENTS.PLAYING, this._doTransition.bind(this));\n      this._eventManager.listen(this._player, _events.HTML5_EVENTS.LOADED_METADATA, this._doTransition.bind(this));\n      this._eventManager.listen(this._player, _events.HTML5_EVENTS.PAUSE, this._doTransition.bind(this));\n      this._eventManager.listen(this._player, _events.HTML5_EVENTS.WAITING, this._doTransition.bind(this));\n    }\n\n    /**\n     * Performs a state transition depends on the event which occurs in the player system.\n     * @param {FakeEvent} event - The event occurs in the player system.\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_doTransition',\n    value: function _doTransition(event) {\n      this._logger.debug('Do transition request', event);\n      var transition = this._transitions[this._curState.type];\n      if (typeof transition[event.type] === 'function') {\n        transition[event.type]();\n      }\n    }\n\n    /**\n     * Updates the player's state.\n     * @param {string} type - The type of the new state.\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_updateState',\n    value: function _updateState(type) {\n      if (this._curState.type !== type) {\n        this._curState.duration = Date.now() / 1000;\n        this._history.push(this._curState);\n        this._prevState = this._curState;\n        this._curState = new _state2.default(type);\n        this._logger.debug('Switch player state: from ' + this._prevState.type + ' to ' + this._curState.type);\n      }\n    }\n\n    /**\n     * Fires the playerStateChanged event after state has been changed.\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_dispatchEvent',\n    value: function _dispatchEvent() {\n      var event = new _fakeEvent2.default(_events.CUSTOM_EVENTS.PLAYER_STATE_CHANGED, {\n        'oldState': this._prevState,\n        'newState': this._curState\n      });\n      this._player.dispatchEvent(event);\n    }\n\n    /**\n     * Destroys the state manager.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._history = [];\n      this._eventManager.destroy();\n    }\n\n    /**\n     * Getter to the current state of the player.\n     * @public\n     * @returns {State} - The current state object\n     */\n\n  }, {\n    key: 'currentState',\n    get: function get() {\n      return this._curState;\n    }\n\n    /**\n     * Getter to the previous state of the player.\n     * @public\n     * @returns {State|null} - The previous state object, or null if such doesn't exists\n     */\n\n  }, {\n    key: 'previousState',\n    get: function get() {\n      return this._prevState;\n    }\n\n    /**\n     * Getter to the state history of the player.\n     * @public\n     * @returns {Array.<State>} - The full states history objects\n     */\n\n  }, {\n    key: 'history',\n    get: function get() {\n      return this._history;\n    }\n  }]);\n\n  return StateManager;\n}();\n\nexports.default = StateManager;\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * This class describes a player state.\n * @classdesc\n */\nvar State = function () {\n\n  /**\n   * @constructor\n   * @param {string} type - The type of the state.\n   */\n\n  /**\n   * The duration that the player was in this state.\n   * @member\n   * @type {number}\n   * @private\n   */\n  function State(type) {\n    _classCallCheck(this, State);\n\n    this.type = type;\n    this._duration = 0;\n    this._timestamp = Date.now() / 1000;\n  }\n\n  /**\n   * Getter for the duration of the state.\n   * @returns {number} - The duration of the state\n   */\n\n  /**\n   * The timestamp that this state started.\n   * @member\n   * @type {number}\n   * @private\n   */\n\n  /**\n   * The type of the state.\n   * Can be one of those describes in states.js\n   * @member\n   * @type {string}\n   * @public\n   */\n\n\n  _createClass(State, [{\n    key: \"duration\",\n    get: function get() {\n      return this._duration;\n    }\n\n    /**\n     * Setter for the duration of the state.\n     * @param {number} endTime - The timestamp of the next state.\n     */\n    ,\n    set: function set(endTime) {\n      this._duration = endTime - this._timestamp;\n    }\n  }]);\n\n  return State;\n}();\n\nexports.default = State;\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar TRACK_TYPES = {\n  VIDEO: \"video\",\n  AUDIO: \"audio\",\n  TEXT: \"text\"\n};\n\nexports.default = TRACK_TYPES;\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\r\n * js-logger - http://github.com/jonnyreeves/js-logger\r\n * Jonny Reeves, http://jonnyreeves.co.uk/\r\n * js-logger may be freely distributed under the MIT license.\r\n */\r\n(function (global) {\r\n\t\"use strict\";\r\n\r\n\t// Top level module for the global, static logger instance.\r\n\tvar Logger = { };\r\n\r\n\t// For those that are at home that are keeping score.\r\n\tLogger.VERSION = \"1.3.0\";\r\n\r\n\t// Function which handles all incoming log messages.\r\n\tvar logHandler;\r\n\r\n\t// Map of ContextualLogger instances by name; used by Logger.get() to return the same named instance.\r\n\tvar contextualLoggersByNameMap = {};\r\n\r\n\t// Polyfill for ES5's Function.bind.\r\n\tvar bind = function(scope, func) {\r\n\t\treturn function() {\r\n\t\t\treturn func.apply(scope, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\t// Super exciting object merger-matron 9000 adding another 100 bytes to your download.\r\n\tvar merge = function () {\r\n\t\tvar args = arguments, target = args[0], key, i;\r\n\t\tfor (i = 1; i < args.length; i++) {\r\n\t\t\tfor (key in args[i]) {\r\n\t\t\t\tif (!(key in target) && args[i].hasOwnProperty(key)) {\r\n\t\t\t\t\ttarget[key] = args[i][key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\t// Helper to define a logging level object; helps with optimisation.\r\n\tvar defineLogLevel = function(value, name) {\r\n\t\treturn { value: value, name: name };\r\n\t};\r\n\r\n\t// Predefined logging levels.\r\n\tLogger.DEBUG = defineLogLevel(1, 'DEBUG');\r\n\tLogger.INFO = defineLogLevel(2, 'INFO');\r\n\tLogger.TIME = defineLogLevel(3, 'TIME');\r\n\tLogger.WARN = defineLogLevel(4, 'WARN');\r\n\tLogger.ERROR = defineLogLevel(8, 'ERROR');\r\n\tLogger.OFF = defineLogLevel(99, 'OFF');\r\n\r\n\t// Inner class which performs the bulk of the work; ContextualLogger instances can be configured independently\r\n\t// of each other.\r\n\tvar ContextualLogger = function(defaultContext) {\r\n\t\tthis.context = defaultContext;\r\n\t\tthis.setLevel(defaultContext.filterLevel);\r\n\t\tthis.log = this.info;  // Convenience alias.\r\n\t};\r\n\r\n\tContextualLogger.prototype = {\r\n\t\t// Changes the current logging level for the logging instance.\r\n\t\tsetLevel: function (newLevel) {\r\n\t\t\t// Ensure the supplied Level object looks valid.\r\n\t\t\tif (newLevel && \"value\" in newLevel) {\r\n\t\t\t\tthis.context.filterLevel = newLevel;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Is the logger configured to output messages at the supplied level?\r\n\t\tenabledFor: function (lvl) {\r\n\t\t\tvar filterLevel = this.context.filterLevel;\r\n\t\t\treturn lvl.value >= filterLevel.value;\r\n\t\t},\r\n\r\n\t\tdebug: function () {\r\n\t\t\tthis.invoke(Logger.DEBUG, arguments);\r\n\t\t},\r\n\r\n\t\tinfo: function () {\r\n\t\t\tthis.invoke(Logger.INFO, arguments);\r\n\t\t},\r\n\r\n\t\twarn: function () {\r\n\t\t\tthis.invoke(Logger.WARN, arguments);\r\n\t\t},\r\n\r\n\t\terror: function () {\r\n\t\t\tthis.invoke(Logger.ERROR, arguments);\r\n\t\t},\r\n\r\n\t\ttime: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'start' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttimeEnd: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'end' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Invokes the logger callback if it's not being filtered.\r\n\t\tinvoke: function (level, msgArgs) {\r\n\t\t\tif (logHandler && this.enabledFor(level)) {\r\n\t\t\t\tlogHandler(msgArgs, merge({ level: level }, this.context));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Protected instance which all calls to the to level `Logger` module will be routed through.\r\n\tvar globalLogger = new ContextualLogger({ filterLevel: Logger.OFF });\r\n\r\n\t// Configure the global Logger instance.\r\n\t(function() {\r\n\t\t// Shortcut for optimisers.\r\n\t\tvar L = Logger;\r\n\r\n\t\tL.enabledFor = bind(globalLogger, globalLogger.enabledFor);\r\n\t\tL.debug = bind(globalLogger, globalLogger.debug);\r\n\t\tL.time = bind(globalLogger, globalLogger.time);\r\n\t\tL.timeEnd = bind(globalLogger, globalLogger.timeEnd);\r\n\t\tL.info = bind(globalLogger, globalLogger.info);\r\n\t\tL.warn = bind(globalLogger, globalLogger.warn);\r\n\t\tL.error = bind(globalLogger, globalLogger.error);\r\n\r\n\t\t// Don't forget the convenience alias!\r\n\t\tL.log = L.info;\r\n\t}());\r\n\r\n\t// Set the global logging handler.  The supplied function should expect two arguments, the first being an arguments\r\n\t// object with the supplied log messages and the second being a context object which contains a hash of stateful\r\n\t// parameters which the logging function can consume.\r\n\tLogger.setHandler = function (func) {\r\n\t\tlogHandler = func;\r\n\t};\r\n\r\n\t// Sets the global logging filter level which applies to *all* previously registered, and future Logger instances.\r\n\t// (note that named loggers (retrieved via `Logger.get`) can be configured independently if required).\r\n\tLogger.setLevel = function(level) {\r\n\t\t// Set the globalLogger's level.\r\n\t\tglobalLogger.setLevel(level);\r\n\r\n\t\t// Apply this level to all registered contextual loggers.\r\n\t\tfor (var key in contextualLoggersByNameMap) {\r\n\t\t\tif (contextualLoggersByNameMap.hasOwnProperty(key)) {\r\n\t\t\t\tcontextualLoggersByNameMap[key].setLevel(level);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Retrieve a ContextualLogger instance.  Note that named loggers automatically inherit the global logger's level,\r\n\t// default context and log handler.\r\n\tLogger.get = function (name) {\r\n\t\t// All logger instances are cached so they can be configured ahead of use.\r\n\t\treturn contextualLoggersByNameMap[name] ||\r\n\t\t\t(contextualLoggersByNameMap[name] = new ContextualLogger(merge({ name: name }, globalLogger.context)));\r\n\t};\r\n\r\n\t// CreateDefaultHandler returns a handler function which can be passed to `Logger.setHandler()` which will\r\n\t// write to the window's console object (if present); the optional options object can be used to customise the\r\n\t// formatter used to format each log message.\r\n\tLogger.createDefaultHandler = function (options) {\r\n\t\toptions = options || {};\r\n\r\n\t\toptions.formatter = options.formatter || function defaultMessageFormatter(messages, context) {\r\n\t\t\t// Prepend the logger's name to the log message for easy identification.\r\n\t\t\tif (context.name) {\r\n\t\t\t\tmessages.unshift(\"[\" + context.name + \"]\");\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Map of timestamps by timer labels used to track `#time` and `#timeEnd()` invocations in environments\r\n\t\t// that don't offer a native console method.\r\n\t\tvar timerStartTimeByLabelMap = {};\r\n\r\n\t\t// Support for IE8+ (and other, slightly more sane environments)\r\n\t\tvar invokeConsoleMethod = function (hdlr, messages) {\r\n\t\t\tFunction.prototype.apply.call(hdlr, console, messages);\r\n\t\t};\r\n\r\n\t\t// Check for the presence of a logger.\r\n\t\tif (typeof console === \"undefined\") {\r\n\t\t\treturn function () { /* no console */ };\r\n\t\t}\r\n\r\n\t\treturn function(messages, context) {\r\n\t\t\t// Convert arguments object to Array.\r\n\t\t\tmessages = Array.prototype.slice.call(messages);\r\n\r\n\t\t\tvar hdlr = console.log;\r\n\t\t\tvar timerLabel;\r\n\r\n\t\t\tif (context.level === Logger.TIME) {\r\n\t\t\t\ttimerLabel = (context.name ? '[' + context.name + '] ' : '') + messages[0];\r\n\r\n\t\t\t\tif (messages[1] === 'start') {\r\n\t\t\t\t\tif (console.time) {\r\n\t\t\t\t\t\tconsole.time(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttimerStartTimeByLabelMap[timerLabel] = new Date().getTime();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (console.timeEnd) {\r\n\t\t\t\t\t\tconsole.timeEnd(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinvokeConsoleMethod(hdlr, [ timerLabel + ': ' +\r\n\t\t\t\t\t\t\t(new Date().getTime() - timerStartTimeByLabelMap[timerLabel]) + 'ms' ]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Delegate through to custom warn/error loggers if present on the console.\r\n\t\t\t\tif (context.level === Logger.WARN && console.warn) {\r\n\t\t\t\t\thdlr = console.warn;\r\n\t\t\t\t} else if (context.level === Logger.ERROR && console.error) {\r\n\t\t\t\t\thdlr = console.error;\r\n\t\t\t\t} else if (context.level === Logger.INFO && console.info) {\r\n\t\t\t\t\thdlr = console.info;\r\n\t\t\t\t}\r\n\r\n\t\t\t\toptions.formatter(messages, context);\r\n\t\t\t\tinvokeConsoleMethod(hdlr, messages);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t// Configure and example a Default implementation which writes to the `window.console` (if present).  The\r\n\t// `options` hash can be used to configure the default logLevel and provide a custom message formatter.\r\n\tLogger.useDefaults = function(options) {\r\n\t\tLogger.setLevel(options && options.defaultLevel || Logger.DEBUG);\r\n\t\tLogger.setHandler(Logger.createDefaultHandler(options));\r\n\t};\r\n\r\n\t// Export to popular environments boilerplate.\r\n\tif (true) {\r\n\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (Logger),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t}\r\n\telse if (typeof module !== 'undefined' && module.exports) {\r\n\t\tmodule.exports = Logger;\r\n\t}\r\n\telse {\r\n\t\tLogger._prevLogger = global.Logger;\r\n\r\n\t\tLogger.noConflict = function () {\r\n\t\t\tglobal.Logger = Logger._prevLogger;\r\n\t\t\treturn Logger;\r\n\t\t};\r\n\r\n\t\tglobal.Logger = Logger;\r\n\t}\r\n}(this));\r\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// playkit.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ec358df201a16dc49892","//@flow\n\n/**\n * General track representation of the player.\n * @classdesc\n */\nexport default class Track {\n  /**\n   * The id of the track.\n   * @member\n   * @type {string}\n   * @private\n   */\n  _id: ?string;\n  /**\n   * The active mode of the track.\n   * @member\n   * @type {boolean}\n   * @private\n   */\n  _active: boolean;\n  /**\n   * The label of the track.\n   * @member\n   * @type {string}\n   * @private\n   */\n  _label: string;\n  /**\n   * The language of the track.\n   * @member\n   * @type {string}\n   * @private\n   */\n  _language: string;\n  /**\n   * The index of the track.\n   * @member\n   * @type {number}\n   * @private\n   */\n  _index: number;\n\n  /**\n   * Getter for the track id.\n   * @public\n   * @returns {?string} - The track id.\n   */\n  get id(): ?string {\n    return this._id;\n  }\n\n  /**\n   * Getter for the active mode of the track.\n   * @public\n   * @returns {boolean} - The active mode of the track.\n   */\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * Setter for the active mode of the track.\n   * @public\n   * @param {boolean} value - Whether the track is active or not.\n   */\n  set active(value: boolean) {\n    this._active = value;\n  }\n\n  /**\n   * Getter for the label of the track.\n   * @public\n   * @returns {string} - The label of the track.\n   */\n  get label(): string {\n    return this._label;\n  }\n\n  /**\n   * Getter for the language of the track.\n   * @public\n   * @returns {string} - The language of the track.\n   */\n  get language(): string {\n    return this._language;\n  }\n\n  /**\n   * Getter for the index of the track.\n   * @public\n   * @returns {number} - The index of the track.\n   */\n  get index(): number {\n    return this._index;\n  }\n\n  /**\n   * @constructor\n   * @param {Object} settings - The track settings object.\n   */\n  constructor(settings: Object = {}) {\n    this._id = settings.id;\n    this._active = settings.active;\n    this._label = settings.label;\n    this._language = settings.language;\n    this._index = settings.index;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./track/track.js","//@flow\nimport * as JsLogger from 'js-logger';\n\nconst LOG_LEVEL: { [level: string]: Object } = {\n  \"DEBUG\": JsLogger.DEBUG,\n  \"INFO\": JsLogger.INFO,\n  \"TIME\": JsLogger.TIME,\n  \"WARN\": JsLogger.WARN,\n  \"ERROR\": JsLogger.ERROR,\n  \"OFF\": JsLogger.OFF\n};\n\nclass LoggerFactory {\n  constructor(options?: Object) {\n    JsLogger.useDefaults(options || {});\n  }\n\n  getLogger(name?: string) {\n    if (!name) {\n      return JsLogger;\n    }\n    return JsLogger.get(name);\n  }\n}\n\nconst lf = new LoggerFactory({defaultLevel: JsLogger.DEBUG});\n\nexport default lf;\nexport {LOG_LEVEL};\n\n\n\n// WEBPACK FOOTER //\n// ./utils/logger.js","//@flow\n/**\n * Create an Event work-alike object based on the dictionary.\n * The event should contain all of the same properties from the dict.\n * @param {string} type -\n * @param {Object=} opt_dict -\n * @constructor\n * @extends {Event}\n */\nclass FakeEvent {\n  /** @const {boolean} */\n  bubbles: boolean;\n\n  /** @const {boolean} */\n  cancelable: boolean;\n\n  /** @const {boolean} */\n  defaultPrevented: boolean;\n\n  /**\n   * According to MDN, Chrome uses high-res timers instead of epoch time.\n   * Follow suit so that timeStamps on FakeEvents use the same base as\n   * on native Events.\n   * @const {number}\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Event/timeStamp\n   */\n  timeStamp: number | Date;\n\n  /** @const {string} */\n  type: string;\n\n  /** @const {boolean} */\n  isTrusted: boolean;\n\n  /** @type {EventTarget} */\n  currentTarget: any;\n\n  /** @type {EventTarget} */\n  target: any;\n\n  /**\n   * Non-standard property read by FakeEventTarget to stop processing listeners.\n   * @type {boolean}\n   */\n  stopped: boolean;\n\n  payload: any;\n\n  constructor(type: string, payload: any) {\n    // These Properties below cannot be set by dict.  They are all provided for\n    // compatibility with native events.\n\n    /** @const {boolean} */\n    this.bubbles = false;\n\n    /** @const {boolean} */\n    this.cancelable = false;\n\n    /** @const {boolean} */\n    this.defaultPrevented = false;\n\n    /**\n     * According to MDN, Chrome uses high-res timers instead of epoch time.\n     * Follow suit so that timeStamps on FakeEvents use the same base as\n     * on native Events.\n     * @const {number}\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Event/timeStamp\n     */\n    this.timeStamp = window.performance ? window.performance.now() : Date.now();\n\n    /** @const {string} */\n    this.type = type;\n\n    /** @const {boolean} */\n    this.isTrusted = false;\n\n    /** @type {EventTarget} */\n    this.currentTarget = null;\n\n    /** @type {EventTarget} */\n    this.target = null;\n\n\n    /**\n     * Non-standard property read by FakeEventTarget to stop processing listeners.\n     * @type {boolean}\n     */\n    this.stopped = false;\n\n    this.payload = payload;\n  }\n\n  /**\n   * Does nothing, since FakeEvents have no default.  Provided for compatibility\n   * with native Events.\n   * @override\n   */\n  preventDefault() {\n  }\n\n  /**\n   * Stops processing event listeners for this event.  Provided for compatibility\n   * with native Events.\n   * @override\n   */\n  stopImmediatePropagation() {\n    this.stopped = true;\n  }\n\n  /**\n   * Does nothing, since FakeEvents do not bubble.  Provided for compatibility\n   * with native Events.\n   * @override\n   */\n  stopPropagation() {\n  }\n}\n\nexport default FakeEvent;\n\n\n\n// WEBPACK FOOTER //\n// ./event/fake-event.js","//@flow\nimport Track from './track'\n\n/**\n * Audio track representation of the player.\n * @classdesc\n */\nexport default class AudioTrack extends Track {}\n\n\n\n// WEBPACK FOOTER //\n// ./track/audio-track.js","//@flow\nimport Track from './track'\n\n/**\n * Text track representation of the player.\n * @classdesc\n */\nexport default class TextTrack extends Track {\n  /**\n   * The kind of the text track:\n   * subtitles/captions/metadata.\n   * @member\n   * @type {string}\n   * @private\n   */\n  _kind: string;\n\n  /**\n   * Getter for the kind of the text track.\n   * @public\n   * @returns {string} - The kind of the text track.\n   */\n  get kind(): string {\n    return this._kind;\n  }\n\n  /**\n   * @constructor\n   * @param {Object} settings - The track settings object.\n   */\n  constructor(settings: Object = {}) {\n    super(settings);\n    this._kind = settings.kind;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./track/text-track.js","//@flow\nimport Track from './track'\n\n/**\n * Video track representation of the player.\n * @classdesc\n */\nexport default class VideoTrack extends Track {\n  /**\n   * The kind of the text track:\n   * subtitles/captions/metadata.\n   * @member\n   * @type {string}\n   * @private\n   */\n  _bandwidth: string;\n\n  /**\n   * Getter for the kind of the text track.\n   * @public\n   * @returns {string} - The kind of the text track.\n   */\n  get bandwidth(): string {\n    return this._bandwidth;\n  }\n\n  /**\n   * @constructor\n   * @param {Object} settings - The track settings object.\n   */\n  constructor(settings: Object = {}) {\n    super(settings);\n    this._bandwidth = settings.bandwidth;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./track/video-track.js","//@flow\nimport MultiMap from '../utils/multi-map'\nimport FakeEvent from './fake-event'\n\n/**\n * Creates a new EventManager. An EventManager maintains a collection of \"event\n * bindings\" between event targets and event listeners.\n *\n * @struct\n * @constructor\n * @implements {IDestroyable}\n */\nclass EventManager {\n  _bindingMap: MultiMap<Binding_> | null;\n\n  constructor() {\n    /**\n     * Maps an event type to an array of event bindings.\n     * @private {MultiMap.<!EventManager.Binding_>}\n     */\n    this._bindingMap = new MultiMap();\n  }\n\n  /**\n   * Detaches all event listeners.\n   * @override\n   */\n  destroy() {\n    this.removeAll();\n    this._bindingMap = null;\n    return Promise.resolve();\n  }\n\n\n  /**\n   * Attaches an event listener to an event target.\n   * @param {EventTarget} target The event target.\n   * @param {string} type The event type.\n   * @param {EventManager.ListenerType} listener The event listener.\n   * @returns {void}\n   */\n  listen(target: any, type: string, listener: ListenerType): void {\n    let binding = new Binding_(target, type, listener);\n    if (this._bindingMap) {\n      this._bindingMap.push(type, binding);\n    }\n  }\n\n\n  /**\n   * Detaches an event listener from an event target.\n   * @param {EventTarget} target The event target.\n   * @param {string} type The event type.\n   * @returns {void}\n   */\n  unlisten(target: any, type: string): void {\n    if (this._bindingMap) {\n      let list = this._bindingMap.get(type);\n\n      for (let i = 0; i < list.length; ++i) {\n        let binding = list[i];\n\n        if (binding.target == target) {\n          binding.unlisten();\n          if (this._bindingMap) {\n            this._bindingMap.remove(type, binding);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Detaches all event listeners from all targets.\n   * @returns {void}\n   */\n  removeAll(): void {\n    if (this._bindingMap) {\n      let listeners = this._bindingMap.getAll();\n\n      for (let listener of listeners) {\n        listener.unlisten();\n      }\n      if (this._bindingMap) {\n        this._bindingMap.clear();\n      }\n    }\n  }\n}\n\n/**\n * @typedef {function(!Event)}\n */\ntype ListenerType = (event: FakeEvent) => any;\n\n/**\n * Creates a new Binding_ and attaches the event listener to the event target.\n * @param {EventTarget} target The event target.\n * @param {string} type The event type.\n * @param {EventManager.ListenerType} listener The event listener.\n * @constructor\n * @private\n */\nclass Binding_ {\n  target: any;\n  type: string;\n  listener: ?ListenerType;\n\n  constructor(target, type, listener) {\n    /** @type {EventTarget} */\n    this.target = target;\n\n    /** @type {string} */\n    this.type = type;\n\n    /** @type {?EventManager.ListenerType} */\n    this.listener = listener;\n\n    this.target.addEventListener(type, listener, false);\n  }\n\n\n  /**\n   * Detaches the event listener from the event target. This does nothing if the\n   * event listener is already detached.\n   * @returns {void}\n   */\n  unlisten(): void {\n    if (!this.target)\n      return;\n\n    this.target.removeEventListener(this.type, this.listener, false);\n\n    this.target = null;\n    this.listener = null;\n  }\n}\n\nexport default EventManager;\n\n\n\n// WEBPACK FOOTER //\n// ./event/event-manager.js","//@flow\nimport {merge} from '../utils/util'\n\nconst HTML5_EVENTS: { [event: string]: string } = {\n  /**\n   * Fires when the loading of an audio/video is aborted\n   */\n  ABORT: 'abort',\n  /**\n   * Fires when the browser can start playing the audio/video\n   */\n  CAN_PLAY: 'canplay',\n  /**\n   * Fires when the browser can play through the audio/video without stopping for buffering\n   */\n  CAN_PLAY_THROUGH: 'canplaythrough',\n  /**\n   * Fires when the duration of the audio/video is changed\n   */\n  DURATION_CHANGE: 'durationchange',\n  /**\n   * Fires when the current playlist is empty\n   */\n  EMPTIED: 'emptied',\n  /**\n   * Fires when the current playlist is ended\n   */\n  ENDED: 'ended',\n  /**\n   * Fires when an error occurred during the loading of an audio/video\n   */\n  ERROR: 'error',\n  /**\n   * Fires when the browser has loaded the current frame of the audio/video\n   */\n  LOADED_DATA: 'loadeddata',\n  /**\n   * Fires when the browser has loaded meta data for the audio/video\n   */\n  LOADED_METADATA: 'loadedmetadata',\n  /**\n   * Fires when the browser starts looking for the audio/video\n   */\n  LOAD_START: 'loadstart',\n  /**\n   * Fires when the audio/video has been paused\n   */\n  PAUSE: 'pause',\n  /**\n   * Fires when the audio/video has been started or is no longer paused\n   */\n  PLAY: 'play',\n  /**\n   * Fires when the audio/video is playing after having been paused or stopped for buffering\n   */\n  PLAYING: 'playing',\n  /**\n   * Fires when the browser is downloading the audio/video\n   */\n  PROGRESS: 'progress',\n  /**\n   * Fires when the playing speed of the audio/video is changed\n   */\n  RATE_CHANGE: 'ratechange',\n  /**\n   * Fires when the user is finished moving/skipping to a new position in the audio/video\n   */\n  SEEKED: 'seeked',\n  /**\n   * Fires when the user starts moving/skipping to a new position in the audio/video\n   */\n  SEEKING: 'seeking',\n  /**\n   * Fires when the browser is trying to get media data, but data is not available\n   */\n  STALLED: 'stalled',\n  /**\n   * Fires when the browser is intentionally not getting media data\n   */\n  SUSPEND: 'suspend',\n  /**\n   * Fires when the current playback position has changed\n   */\n  TIME_UPDATE: 'timeupdate',\n  /**\n   * Fires when the volume has been changed\n   */\n  VOLUME_CHANGE: 'volumechange',\n  /**\n   * Fires when the video stops because it needs to buffer the next frame\n   */\n  WAITING: 'waiting',\n};\n\nconst CUSTOM_EVENTS: { [event: string]: string } = {\n  /**\n   * Fires when the active video track has been changed\n   */\n  VIDEO_TRACK_CHANGED: 'videotrackchanged',\n  /**\n   * Fires when the active audio track has been changed\n   */\n  AUDIO_TRACK_CHANGED: 'audiotrackchanged',\n  /**\n   * Fires when the active text track has been changed\n   */\n  TEXT_TRACK_CHANGED: 'texttrackchanged',\n  /**\n   * Fires when the player tracks have been changed\n   */\n  TRACKS_CHANGED: 'trackschanged',\n  /**\n   * Fires when the player state has been changed\n   */\n  PLAYER_STATE_CHANGED: 'playerstatechanged',\n  /**\n   * Fires on the first play\n   */\n  FIRST_PLAY: 'firstplay',\n  /**\n   * Fires when the player has selected the source to play\n   */\n  SOURCE_SELECTED: 'sourceselected'\n};\n\nconst PLAYER_EVENTS: { [event: string]: string } = merge([HTML5_EVENTS, CUSTOM_EVENTS]);\n\nexport {PLAYER_EVENTS, HTML5_EVENTS, CUSTOM_EVENTS};\n\n\n\n// WEBPACK FOOTER //\n// ./event/events.js","//@flow\nimport EventManager from './event/event-manager'\nimport FakeEvent from './event/fake-event'\nimport FakeEventTarget from './event/fake-event-target'\nimport {PLAYER_EVENTS as PlayerEvents, HTML5_EVENTS as Html5Events, CUSTOM_EVENTS as CustomEvents} from './event/events'\nimport PlayerStates from './state/state-types'\nimport {isNumber, isFloat, merge} from './utils/util'\nimport LoggerFactory from './utils/logger'\nimport Html5 from './engines/html5/html5'\nimport PluginManager from './plugin/plugin-manager'\nimport StateManager from './state/state-manager'\nimport TrackTypes from './track/track-types'\nimport Track from './track/track'\nimport VideoTrack from './track/video-track'\nimport AudioTrack from './track/audio-track'\nimport TextTrack from './track/text-track'\n\n/**\n * The HTML5 player class.\n * @classdesc\n */\nclass Player extends FakeEventTarget {\n  /**\n   * The player class logger.\n   * @type {any}\n   * @private\n   */\n  _logger: any;\n  /**\n   * The plugin manager of the player.\n   * @type {PluginManager}\n   * @private\n   */\n  _pluginManager: PluginManager;\n  /**\n   * The event manager of the player.\n   * @type {EventManager}\n   * @private\n   */\n  _eventManager: EventManager;\n  /**\n   * The runtime configuration of the player.\n   * @type {Object}\n   * @private\n   */\n  _config: Object;\n  /**\n   * The playback engine.\n   * @type {IEngine}\n   * @private\n   */\n  _engine: IEngine;\n  /**\n   * The state manager of the player.\n   * @type {StateManager}\n   * @private\n   */\n  _stateManager: StateManager;\n  /**\n   * The tracks of the player.\n   * @type {Array<Track>}\n   * @private\n   */\n  _tracks: Array<Track>;\n  /**\n   * The player ready promise\n   * @type {Promise<*>}\n   * @private\n   */\n  _readyPromise: ?Promise<*>;\n  /**\n   * Whether the play is the first or not\n   * @type {boolean}\n   * @private\n   */\n  _firstPlay: boolean;\n\n  /**\n   * @param {Object} config - The configuration for the player instance.\n   * @constructor\n   */\n  constructor(config: Object) {\n    super();\n    this._tracks = [];\n    this._firstPlay = true;\n    this._logger = LoggerFactory.getLogger('Player');\n    this._stateManager = new StateManager(this);\n    this._pluginManager = new PluginManager();\n    this._eventManager = new EventManager();\n    this._readyPromise = new Promise((resolve, reject) => {\n      this._eventManager.listen(this, CustomEvents.TRACKS_CHANGED, () => {\n        resolve();\n      });\n      this._eventManager.listen(this, Html5Events.ERROR, reject);\n    });\n    this.configure(config);\n  }\n\n  /**\n   * Configures the player according to given configuration.\n   * @param {Object} config - The configuration for the player instance.\n   * @returns {void}\n   */\n  configure(config: Object): void {\n    this._config = merge([this._config, config || Player._defaultConfig()]);\n    this._loadPlugins(this._config);\n    this._selectEngine(this._config);\n    this._attachMedia();\n  }\n\n  /**\n   * Destroys the player.\n   * @returns {void}\n   * @public\n   */\n  destroy(): void {\n    this._engine.destroy();\n    this._eventManager.destroy();\n    this._pluginManager.destroy();\n    this._stateManager.destroy();\n    this._config = {};\n    this._tracks = [];\n    this._readyPromise = null;\n    this._firstPlay = true;\n  }\n\n  /**\n   * @returns {Object} - The default configuration of the player.\n   * @private\n   * @static\n   */\n  static _defaultConfig(): Object {\n    return {};\n  }\n\n  /**\n   *\n   * @param {Object} config - The configuration of the player instance.\n   * @private\n   * @returns {void}\n   */\n  _loadPlugins(config: Object): void {\n    let plugins = config.plugins;\n    for (let name in plugins) {\n      this._pluginManager.load(name, this, plugins[name]);\n    }\n  }\n\n  /**\n   * Select the engine to create based on the given configured sources.\n   * @param {Object} config - The configuration of the player instance.\n   * @private\n   * @returns {void}\n   */\n  _selectEngine(config: Object): void {\n    if (config && config.sources) {\n      let sources = config.sources;\n      for (let i = 0; i < sources.length; i++) {\n        if (Html5.canPlayType(sources[i].mimetype)) {\n          this.dispatchEvent(new FakeEvent(CustomEvents.SOURCE_SELECTED, {selectedSource: sources[i]}));\n          this._loadEngine(sources[i], config);\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Loads the selected engine.\n   * @param {Source} source - The selected source object.\n   * @param {Object} config - The configuration of the player instance.\n   * @private\n   * @returns {void}\n   */\n  _loadEngine(source: Source, config: Object): void {\n    this._engine = new Html5(source, config);\n    if (config.preload === \"auto\") {\n      this.load();\n    }\n  }\n\n  /**\n   * Listen to all HTML5 defined events and trigger them on the player\n   * @private\n   * @returns {void}\n   */\n  _attachMedia(): void {\n    if (this._engine) {\n      for (let playerEvent in Html5Events) {\n        this._eventManager.listen(this._engine, Html5Events[playerEvent], (event: FakeEvent) => {\n          return this.dispatchEvent(event);\n        });\n      }\n      this._eventManager.listen(this._engine, CustomEvents.VIDEO_TRACK_CHANGED, (event: FakeEvent) => {\n        this._markActiveTrack(event.payload.selectedVideoTrack);\n        return this.dispatchEvent(event);\n      });\n      this._eventManager.listen(this._engine, CustomEvents.AUDIO_TRACK_CHANGED, (event: FakeEvent) => {\n        this._markActiveTrack(event.payload.selectedAudioTrack);\n        return this.dispatchEvent(event);\n      });\n      this._eventManager.listen(this._engine, CustomEvents.TEXT_TRACK_CHANGED, (event: FakeEvent) => {\n        this._markActiveTrack(event.payload.selectedTextTrack);\n        return this.dispatchEvent(event);\n      });\n      this._eventManager.listen(this, Html5Events.PLAY, this._onPlay.bind(this));\n    }\n  }\n\n  /**\n   * Returns the tracks according to the filter. if no filter given returns the all tracks.\n   * @function getTracks\n   * @param {string} [type] - a tracks filter, should be 'video', 'audio' or 'text'.\n   * @returns {Array<Track>} - The parsed tracks.\n   * @public\n   */\n  getTracks(type?: string): Array<Track> {\n    return this._getTracksByType(type);\n  }\n\n  /**\n   * Returns the tracks according to the filter. if no filter given returns the all tracks.\n   * @function _getTracksByType\n   * @param {string} [type] - a tracks filter, should be 'video', 'audio' or 'text'.\n   * @returns {Array<Track>} - The parsed tracks.\n   * @private\n   */\n  _getTracksByType(type?: string): Array<Track> {\n    return !type ? this._tracks : this._tracks.filter((track: Track) => {\n      if (type === TrackTypes.VIDEO) {\n        return track instanceof VideoTrack;\n      } else if (type === TrackTypes.AUDIO) {\n        return track instanceof AudioTrack;\n      } else if (type === TrackTypes.TEXT) {\n        return track instanceof TextTrack;\n      } else {\n        return true;\n      }\n    });\n  }\n\n  /**\n   * Select a track\n   * @function selectTrack\n   * @param {Track} track - the track to select\n   * @returns {void}\n   * @public\n   */\n  selectTrack(track: Track): void {\n    if (this._engine) {\n      if (track instanceof VideoTrack) {\n        this._engine.selectVideoTrack(track);\n      } else if (track instanceof AudioTrack) {\n        this._engine.selectAudioTrack(track);\n      } else if (track instanceof TextTrack) {\n        this._engine.selectTextTrack(track);\n      }\n    }\n  }\n\n  /**\n   * Hide the text track\n   * @function hideTextTrack\n   * @returns {void}\n   * @public\n   */\n  hideTextTrack(): void {\n    if (this._engine) {\n      this._engine.hideTextTrack();\n      this._getTracksByType(TrackTypes.TEXT).map(track => track.active = false);\n    }\n  }\n\n  /**\n   * Enables adaptive bitrate switching.\n   * @function enableAdaptiveBitrate\n   * @returns {void}\n   * @public\n   */\n  enableAdaptiveBitrate(): void {\n    if (this._engine) {\n      this._engine.enableAdaptiveBitrate();\n    }\n  }\n\n  /**\n   * Mark the selected track as active\n   * @function _markActiveTrack\n   * @param {Track} track - the track to mark\n   * @returns {void}\n   * @private\n   */\n  _markActiveTrack(track: Track) {\n    let type;\n    if (track instanceof VideoTrack) {\n      type = TrackTypes.VIDEO;\n    } else if (track instanceof AudioTrack) {\n      type = TrackTypes.AUDIO;\n    } else if (track instanceof TextTrack) {\n      type = TrackTypes.TEXT;\n    }\n    if (type) {\n      let tracks = this.getTracks(type);\n      for (let i = 0; i < tracks.length; i++) {\n        tracks[i].active = track.index === i;\n      }\n    }\n  }\n\n  /**\n   * @function _onPlay\n   * @return {void}\n   * @private\n   */\n  _onPlay(): void {\n    if (this._firstPlay) {\n      this._firstPlay = false;\n      this.dispatchEvent(new FakeEvent(CustomEvents.FIRST_PLAY));\n    }\n  }\n\n  /**\n   * Get the player config.\n   * @returns {Object} - The player configuration.\n   * @public\n   */\n  get config(): Object {\n    return this._config;\n  }\n\n  /**\n   * Set player session id\n   * @param {string} sessionId - the player session id to set\n   * @returns {void}\n   * @public\n   */\n  set sessionId(sessionId: string): void {\n    this._config.session = this._config.session || {};\n    this._config.session.id = sessionId;\n  }\n\n  //  <editor-fold desc=\"Playback Interface\">\n  /**\n   * The player readiness\n   * @public\n   * @returns {Promise<*>} - The ready promise\n   */\n  ready(): Promise<*> {\n    return this._readyPromise ? this._readyPromise : Promise.resolve();\n  }\n\n  /**\n   * Load media\n   * @public\n   * @returns {void}\n   */\n  load(): void {\n    if (this._engine) {\n      this._engine.load().then((data) => {\n        this._tracks = data.tracks;\n        this.dispatchEvent(new FakeEvent(CustomEvents.TRACKS_CHANGED, {tracks: this._tracks}));\n      }).catch((error) => {\n        this.dispatchEvent(new FakeEvent(Html5Events.ERROR, error));\n      });\n    }\n  }\n\n  /**\n   * Start/resume playback.\n   * @returns {void}\n   * @public\n   */\n  play(): void {\n    if (this._engine) {\n      if (this._engine.src) {\n        this._engine.play();\n      } else {\n        this.load();\n        this.ready().then(() => {\n          this._engine.play();\n        });\n      }\n    }\n  }\n\n  /**\n   * Pause playback.\n   * @returns {void}\n   * @public\n   */\n  pause(): void {\n    if (this._engine) {\n      return this._engine.pause();\n    }\n  }\n\n  /**\n   * Set the current time in seconds.\n   * @param {Number} to - The number to set in seconds.\n   * @public\n   */\n  set currentTime(to: number): void {\n    if (this._engine) {\n      if (isNumber(to)) {\n        let boundedTo = to;\n        if (to < 0) {\n          boundedTo = 0;\n        }\n        if (boundedTo > this._engine.duration) {\n          boundedTo = this._engine.duration;\n        }\n        this._engine.currentTime = boundedTo;\n      }\n    }\n  }\n\n  /**\n   * Get the current time in seconds.\n   * @returns {?Number} - The playback current time.\n   * @public\n   */\n  get currentTime(): ?number {\n    if (this._engine) {\n      return this._engine.currentTime;\n    }\n  }\n\n  /**\n   * Get the duration in seconds.\n   * @returns {?Number} - The playback duration.\n   * @public\n   */\n  get duration(): ?number {\n    if (this._engine) {\n      return this._engine.duration;\n    }\n  }\n\n  /**\n   * Set playback volume.\n   * @param {Number} vol - The volume to set.\n   * @returns {void}\n   * @public\n   */\n  set volume(vol: number): void {\n    if (this._engine) {\n      if (isFloat(vol)) {\n        let boundedVol = vol;\n        if (boundedVol < 0) {\n          boundedVol = 0;\n        }\n        if (boundedVol > 1) {\n          boundedVol = 1;\n        }\n        this._engine.volume = boundedVol;\n      }\n    }\n  }\n\n  /**\n   * Get playback volume.\n   * @returns {?Number} - The playback volume.\n   * @public\n   */\n  get volume(): ?number {\n    if (this._engine) {\n      return this._engine.volume;\n    }\n  }\n\n  // </editor-fold>\n\n  // <editor-fold desc=\"State\">\n  /**\n   * Get paused state.\n   * @returns {?boolean} - Whether the video is paused or not.\n   * @public\n   */\n  get paused(): ?boolean {\n    if (this._engine) {\n      return this._engine.paused;\n    }\n  }\n\n  /**\n   * Get seeking state.\n   * @returns {?boolean} - Whether the video is seeking or not.\n   * @public\n   */\n  get seeking(): ?boolean {\n    if (this._engine) {\n      return this._engine.seeking;\n    }\n  }\n\n  buffered() {\n  }\n\n  /**\n   * Set player muted state.\n   * @param {boolean} mute - The mute value.\n   * @returns {void}\n   * @public\n   */\n  set muted(mute: boolean): void {\n    if (this._engine) {\n      this._engine.muted = mute;\n    }\n  }\n\n  /**\n   * Get player muted state.\n   * @returns {?boolean} - Whether the video is muted or not.\n   * @public\n   */\n  get muted(): ?boolean {\n    if (this._engine) {\n      return this._engine.muted;\n    }\n  }\n\n  /**\n   * Get the player source.\n   * @returns {?string} - The current source of the player.\n   * @public\n   */\n  get src(): ?string {\n    if (this._engine) {\n      return this._engine.src;\n    }\n  }\n\n  /**\n   * Get the player events.\n   * @returns {Object} - The events of the player.\n   * @public\n   */\n  get Event(): { [event: string]: string } {\n    return PlayerEvents;\n  }\n\n  /**\n   * Get the player states.\n   * @returns {Object} - The states of the player.\n   * @public\n   */\n  get State(): { [state: string]: string } {\n    return PlayerStates;\n  }\n\n  /**\n   * Get the player tracks types.\n   * @returns {Object} - The tracks types of the player.\n   * @public\n   */\n  get Track(): { [track: string]: string } {\n    return TrackTypes;\n  }\n\n// </editor-fold>\n}\n\nexport default Player;\n\n\n\n// WEBPACK FOOTER //\n// ./player.js","//@flow\nimport FakeEvent from './fake-event'\nimport MultiMap from '../utils/multi-map'\n\n/**\n * A work-alike for EventTarget.  Only DOM elements may be true EventTargets,\n * but this can be used as a base class to provide event dispatch to non-DOM\n * classes.  Only FakeEvents should be dispatched.\n *\n * @struct\n * @constructor\n * @implements {EventTarget}\n * @export\n */\nclass FakeEventTarget {\n  _listeners: MultiMap<ListenerType>;\n  dispatchTarget: FakeEventTarget;\n\n  constructor() {\n    /**\n     * @private {!MultiMap.<FakeEventTarget.ListenerType>}\n     */\n    this._listeners = new MultiMap();\n\n    /**\n     * The target of all dispatched events.  Defaults to |this|.\n     * @type {EventTarget}\n     */\n    this.dispatchTarget = this;\n  }\n\n  /**\n   * Add an event listener to this object.\n   *\n   * @param {string} type The event type to listen for.\n   * @param {FakeEventTarget.ListenerType} listener The callback or\n   *   listener object to invoke.\n   * @param {boolean=} opt_capturing Ignored.  FakeEventTargets do not have\n   *   parents, so events neither capture nor bubble.\n   * @override\n   * @export\n   */\n  addEventListener(type: string, listener: ListenerType) {\n    this._listeners.push(type, listener);\n  }\n\n  /**\n   * Remove an event listener from this object.\n   *\n   * @param {string} type The event type for which you wish to remove a listener.\n   * @param {FakeEventTarget.ListenerType} listener The callback or\n   *   listener object to remove.\n   * @param {boolean=} opt_capturing Ignored.  FakeEventTargets do not have\n   *   parents, so events neither capture nor bubble.\n   * @override\n   * @export\n   */\n  removeEventListener(type: string, listener: ListenerType) {\n    this._listeners.remove(type, listener);\n  }\n\n  /**\n   * Dispatch an event from this object.\n   *\n   * @param {!Event} event The event to be dispatched from this object.\n   * @return {boolean} True if the default action was prevented.\n   * @override\n   * @export\n   */\n  dispatchEvent(event: FakeEvent) {\n    // In many browsers, it is complex to overwrite properties of actual Events.\n    // Here we expect only to dispatch FakeEvents, which are simpler.\n    //goog.asserts.assert(event instanceof FakeEvent,\n    //    'FakeEventTarget can only dispatch FakeEvents!');\n\n    let list = this._listeners.get(event.type) || [];\n\n    for (let i = 0; i < list.length; ++i) {\n      // Do this every time, since events can be re-dispatched from handlers.\n      event.target = this.dispatchTarget;\n      event.currentTarget = this.dispatchTarget;\n\n      let listener = list[i];\n      try {\n        if (listener.handleEvent) {\n          listener.handleEvent(event);\n        } else {\n          listener.call(this, event);\n        }\n      } catch (exception) {\n        // Exceptions during event handlers should not affect the caller,\n        // but should appear on the console as uncaught, according to MDN:\n        // http://goo.gl/N6Ff27\n        // TODO: add log\n      }\n\n      if (event.stopped) {\n        break;\n      }\n    }\n\n    return event.defaultPrevented;\n  }\n}\n\n/**\n * These are the listener types defined in the closure extern for EventTarget.\n * @typedef {EventListener|function(!Event):(boolean|undefined)}\n */\ndeclare function ListenerType(event: FakeEvent): (boolean | void);\n\nexport default FakeEventTarget;\n\n\n\n// WEBPACK FOOTER //\n// ./event/fake-event-target.js","//@flow\nexport default class PlayerError {\n  static TYPE: {[name: string]: Object} = {\n    NOT_REGISTERED_PLUGIN: {\n      name: \"PluginNotRegisteredException\",\n      message: function (name) {\n        return `Cannot load ${name} plugin. Name not found in the registry`;\n      }\n    },\n    NOT_VALID_HANDLER: {\n      name: \"PluginHandlerIsNotValidException\",\n      message: function () {\n        return \"To activate plugin you must provide a class derived from BasePlugin\";\n      }\n    },\n    NOT_IMPLEMENTED_METHOD: {\n      name: \"NotImplementedException\",\n      message: function (method) {\n        return `${method} method not implemented`;\n      }\n    }\n  };\n\n  name: string;\n  message: string;\n\n  constructor(error: Object, param?: any) {\n    this.name = error.name;\n    this.message = error.message(param);\n  }\n\n  getError() {\n    return {\n      name: this.name,\n      message: this.message\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./utils/player-error.js","//@flow\n\"use strict\";\n\n/**\n * @param {number} n - A certain number\n * @returns {boolean} - If the input is a number\n */\nfunction isNumber(n: number): boolean {\n  return Number(n) === n;\n}\n\n/**\n * @param {number} n - A certain number\n * @returns {boolean} - If the input is an integer\n */\nfunction isInt(n: number): boolean {\n  return isNumber(n) && n % 1 === 0;\n}\n\n/**\n * @param {number} n - A certain number\n * @returns {boolean} - If the input is a float\n */\nfunction isFloat(n: number): boolean {\n  return isNumber(n) && n % 1 !== 0;\n}\n\n/**\n * @param {Array<Object>} objects - The objects to merge\n * @returns {Object} - The merged object.\n */\nfunction merge(objects: Array<Object>): Object {\n  let target = {};\n  for (let obj of objects) {\n    Object.assign(target, obj);\n  }\n  return target;\n}\n\nexport {isNumber, isInt, isFloat, merge};\n\n\n\n// WEBPACK FOOTER //\n// ./utils/util.js","//@flow\n/* eslint-disable no-unused-vars */\nimport FakeEvent from '../../../event/fake-event'\nimport FakeEventTarget from '../../../event/fake-event-target'\nimport PlayerError from '../../../utils/player-error'\nimport {CUSTOM_EVENTS} from '../../../event/events'\nimport LoggerFactory from '../../../utils/logger'\nimport Track from '../../../track/track'\nimport VideoTrack from '../../../track/video-track'\nimport AudioTrack from '../../../track/audio-track'\nimport TextTrack from '../../../track/text-track'\n\nexport default class BaseMediaSourceAdapter extends FakeEventTarget implements IMediaSourceAdapter {\n  /**\n   * Passing the custom events to the actual media source adapter.\n   * @static\n   */\n  static CustomEvents: { [event: string]: string } = CUSTOM_EVENTS;\n\n  /**\n   * Passing the getLogger function to the actual media source adapter.\n   * @type {Function}\n   * @static\n   */\n  static getLogger: Function = LoggerFactory.getLogger;\n\n  /**\n   * The adapter config.\n   * @member {Object} _config\n   * @private\n   */\n  _config: ?Object;\n\n  /**\n   * The source object.\n   * @member {Source} _sourceObj\n   * @private\n   */\n  _sourceObj: ?Source;\n\n  /**\n   * The dom video element.\n   * @member {HTMLVideoElement} _videoElement\n   * @private\n   */\n  _videoElement: HTMLVideoElement;\n\n  /**\n   * Checks if the media source adapter is supported.\n   * @function isSupported\n   * @returns {boolean} - Whether the media source adapter is supported.\n   * @static\n   */\n  static isSupported(): boolean {\n    return true;\n  }\n\n  /**\n   * Factory method to create media source adapter.\n   * @function createAdapter\n   * @param {HTMLVideoElement} videoElement - The video element that the media source adapter work with.\n   * @param {Object} source - The source Object.\n   * @param {Object} config - The media source adapter configuration.\n   * @returns {IMediaSourceAdapter} - New instance of the run time media source adapter.\n   * @static\n   */\n  static createAdapter(videoElement: HTMLVideoElement, source: Source, config: Object): IMediaSourceAdapter {\n    return new this(videoElement, source, config);\n  }\n\n  /**\n   * @constructor\n   * @param {HTMLVideoElement} videoElement - The video element which bind to media source adapter.\n   * @param {Source} source - The source object.\n   * @param {Object} config - The media source adapter configuration.\n   */\n  constructor(videoElement: HTMLVideoElement, source: Source, config: Object) {\n    super();\n    this._videoElement = videoElement;\n    this._sourceObj = source;\n    this._config = config;\n  }\n\n  /**\n   * Destroys the media source adapter.\n   * @function destroy\n   * @returns {void}\n   */\n  destroy(): void {\n    this._sourceObj = null;\n    this._config = null;\n  }\n\n  /**\n   * Triggers the appropriate track changed event.\n   * @param {Track} track - The selected track.\n   * @private\n   * @returns {void}\n   */\n  _onTrackChanged(track: Track): void {\n    if (track instanceof VideoTrack) {\n      this._trigger(BaseMediaSourceAdapter.CustomEvents.VIDEO_TRACK_CHANGED, {selectedVideoTrack: track});\n    } else if (track instanceof AudioTrack) {\n      this._trigger(BaseMediaSourceAdapter.CustomEvents.AUDIO_TRACK_CHANGED, {selectedAudioTrack: track});\n    } else if (track instanceof TextTrack) {\n      this._trigger(BaseMediaSourceAdapter.CustomEvents.TEXT_TRACK_CHANGED, {selectedTextTrack: track});\n    }\n  }\n\n  /**\n   * Dispatch an adapter event forward.\n   * @param {string} name - The name of the event.\n   * @param {Object} payload - The event payload.\n   * @returns {void}\n   */\n  _trigger(name: string, payload: Object): void {\n    this.dispatchEvent(new FakeEvent(name, payload));\n  }\n\n  /** Must implemented methods by the derived media source adapter **/\n\n  static canPlayType(mimeType: string): boolean {\n    throw new PlayerError(PlayerError.TYPE.NOT_IMPLEMENTED_METHOD, 'static canPlayType').getError();\n  }\n\n  load(): Promise<Object> {\n    throw new PlayerError(PlayerError.TYPE.NOT_IMPLEMENTED_METHOD, 'load').getError();\n  }\n\n  selectVideoTrack(videoTrack: VideoTrack): void {\n    throw new PlayerError(PlayerError.TYPE.NOT_IMPLEMENTED_METHOD, 'selectVideoTrack').getError();\n  }\n\n  selectAudioTrack(audioTrack: AudioTrack): void {\n    throw new PlayerError(PlayerError.TYPE.NOT_IMPLEMENTED_METHOD, 'selectAudioTrack').getError();\n  }\n\n  selectTextTrack(textTrack: TextTrack): void {\n    throw new PlayerError(PlayerError.TYPE.NOT_IMPLEMENTED_METHOD, 'selectTextTrack').getError();\n  }\n\n  hideTextTrack(): void {\n    throw new PlayerError(PlayerError.TYPE.NOT_IMPLEMENTED_METHOD, 'hideTextTrack').getError();\n  }\n\n  enableAdaptiveBitrate(): void {\n    throw new PlayerError(PlayerError.TYPE.NOT_IMPLEMENTED_METHOD, 'enableAdaptiveBitrate').getError();\n  }\n\n  get src(): string {\n    throw new PlayerError(PlayerError.TYPE.NOT_IMPLEMENTED_METHOD, 'get src').getError();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./engines/html5/media-source/base-media-source-adapter.js","//@flow\nimport NativeAdapter from './adapters/native-adapter'\nimport LoggerFactory from '../../../utils/logger'\n\n/**\n * Media source provider\n * @classdesc\n */\nexport default class MediaSourceProvider {\n  /**\n   * The logger of the media source provider\n   * @member {any} _logger\n   * @static\n   * @private\n   */\n  static _logger: any = LoggerFactory.getLogger('MediaSourceProvider');\n  /**\n   * The media source adapter registry\n   * @member {Array<IMediaSourceAdapter>} _mediaSourceAdapters\n   * @static\n   * @private\n   */\n  static _mediaSourceAdapters: Array<typeof IMediaSourceAdapter> = [NativeAdapter];\n  /**\n   * The selected adapter for playback\n   * @type {null|IMediaSourceAdapter}\n   * @static\n   * @private\n   */\n  static _selectedAdapter: ?(typeof IMediaSourceAdapter) = null;\n\n  /**\n   * Add a media source adapter to the registry\n   * @function register\n   * @param {IMediaSourceAdapter} mediaSourceAdapter - The media source adapter to register\n   * @static\n   * @returns {void}\n   */\n  static register(mediaSourceAdapter: typeof IMediaSourceAdapter): void {\n    if (mediaSourceAdapter) {\n      if (!MediaSourceProvider._mediaSourceAdapters.includes(mediaSourceAdapter)) {\n        MediaSourceProvider._logger.debug(`Adapter <${mediaSourceAdapter.id}> has been registered successfully`);\n        MediaSourceProvider._mediaSourceAdapters.push(mediaSourceAdapter);\n      } else {\n        MediaSourceProvider._logger.debug(`Adapter <${mediaSourceAdapter.id}> is already registered, do not register again`);\n      }\n    }\n  }\n\n  /**\n   * Remove a media source adapter from the registry\n   * @function unRegister\n   * @param {IMediaSourceAdapter} mediaSourceAdapter - The media source adapter to unRegister\n   * @static\n   * @returns {void}\n   */\n  static unRegister(mediaSourceAdapter: typeof IMediaSourceAdapter): void {\n    let index = MediaSourceProvider._mediaSourceAdapters.indexOf(mediaSourceAdapter);\n    if (index > -1) {\n      MediaSourceProvider._logger.debug(`Unregistered <${mediaSourceAdapter.id}> adapter`);\n      MediaSourceProvider._mediaSourceAdapters.splice(index, 1);\n    }\n  }\n\n  /**\n   * Checks if one of the registered media source adapters can play a given mime type\n   * @function canPlayType\n   * @param {string} mimeType - The mime type to check\n   * @static\n   * @returns {boolean} - If one of the adapters can play the specific mime type\n   */\n  static canPlayType(mimeType: string): boolean {\n    let mediaSourceAdapters = MediaSourceProvider._mediaSourceAdapters;\n    for (let i = 0; i < mediaSourceAdapters.length; i++) {\n      if (mediaSourceAdapters[i].canPlayType(mimeType)) {\n        MediaSourceProvider._selectedAdapter = mediaSourceAdapters[i];\n        MediaSourceProvider._logger.debug(`Selected adapter is <${MediaSourceProvider._selectedAdapter.id}>`);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the appropriate media source adapter to the video source\n   * @function getMediaSourceAdapter\n   * @param {HTMLVideoElement} videoElement - The video element which requires adapter for a given mimeType\n   * @param {Source} source - The selected source object\n   * @param {Object} config - The player configuration\n   * @returns {IMediaSourceAdapter|null} - The selected media source adapter, or null if such doesn't exists\n   * @static\n   */\n  static getMediaSourceAdapter(videoElement: HTMLVideoElement, source: Source, config: Object): ?IMediaSourceAdapter {\n    if (videoElement && source && config) {\n      if (!MediaSourceProvider._selectedAdapter) {\n        MediaSourceProvider.canPlayType(source.mimetype);\n      }\n      return MediaSourceProvider._selectedAdapter ? MediaSourceProvider._selectedAdapter.createAdapter(videoElement, source, config.engines) : null;\n    }\n    return null;\n  }\n}\n\nconst registerMediaSourceAdapter = MediaSourceProvider.register;\nexport {registerMediaSourceAdapter};\n\n\n\n\n// WEBPACK FOOTER //\n// ./engines/html5/media-source/media-source-provider.js","//@flow\nimport Player from '../player'\nimport LoggerFactory from '../utils/logger'\nimport {merge} from '../utils/util'\nimport EventManager from '../event/event-manager'\nimport PlayerError from '../utils/player-error'\n\n/** The BasePlugin responsible to implement the plugin interface.\n * Contains several default implementations.\n * Other plugins should extend this class.\n * @classdesc\n */\nexport default class BasePlugin implements IPlugin {\n  /**\n   * The runtime configuration of the plugin.\n   * @member\n   */\n  config: Object;\n  /**\n   * The name of the plugin.\n   * @member\n   */\n  name: string;\n  /**\n   * The logger of the plugin.\n   * @member\n   */\n  logger: any;\n  /**\n   * Reference to the actual player.\n   * @member\n   */\n  player: Player;\n  /**\n   * The event manager of the plugin.\n   * @member\n   */\n  eventManager: EventManager;\n  /**\n   * The default configuration of the plugin.\n   * Inherited plugins should override this property.\n   * @type {Object}\n   * @static\n   * @member\n   */\n  static defaultConfig: Object = {};\n\n  /**\n   * Factory method to create the actual plugin.\n   * @param {string} name - The plugin name\n   * @param {Player} player - The player reference\n   * @param {Object} config - The plugin configuration\n   * @returns {BasePlugin} - New runtime plugin instance\n   * @static\n   * @public\n   */\n  static createPlugin(name: string, player: Player, config: Object = {}): BasePlugin {\n    return new this(name, player, config);\n  }\n\n  /**\n   * Returns under what conditions the plugin is valid.\n   * Plugin must implement this method.\n   * @returns {boolean} - Whether the plugin is valid and can be initiated. Default implementation is true\n   * @static\n   * @public\n   * @abstract\n   */\n  static isValid(): boolean {\n    throw new PlayerError(PlayerError.TYPE.NOT_IMPLEMENTED_METHOD, 'isValid()').getError();\n  }\n\n  /**\n   * constructor\n   * @param {string} name - The plugin name\n   * @param {Player} player - The player reference\n   * @param {Object} config - The plugin configuration\n   * @constructor\n   * @private\n   */\n  constructor(name: string, player: Player, config: Object) {\n    this.name = name;\n    this.player = player;\n    this.eventManager = new EventManager();\n    this.logger = LoggerFactory.getLogger(this.name);\n    this.config = merge([this.constructor.defaultConfig, config]);\n  }\n\n  /**\n   * Getter for the configuration of the plugin.\n   * @param {string} attr - The key in the plugin configuration (optional).\n   * @returns {*} - If attribute is provided, returns its value. Else, Returns the config of the plugin.\n   * @public\n   */\n  getConfig(attr?: string): any {\n    if (attr) {\n      return this.config[attr];\n    }\n    return this.config;\n  }\n\n  /**\n   * Updates the config of the plugin.\n   * @param {Object} update - The updated configuration.\n   * @public\n   * @returns {void}\n   */\n  updateConfig(update: Object): void {\n    this.config = merge([this.config, update]);\n  }\n\n  /**\n   * Runs the destroy logic of the plugin.\n   * plugin must implement this method.\n   * @public\n   * @abstract\n   * @returns {void}\n   */\n  destroy(): void {\n    throw new PlayerError(PlayerError.TYPE.NOT_IMPLEMENTED_METHOD, 'destroy()').getError();\n  }\n\n  /**\n   * Getter for the plugin's name.\n   * @returns {string} - The name of the plugin.\n   * @public\n   */\n  getName(): string {\n    return this.name;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./plugin/base-plugin.js","//@flow\nimport BasePlugin from './base-plugin'\nimport PlayerError from '../utils/player-error'\nimport Player from '../player'\nimport LoggerFactory from '../utils/logger'\n\n/**\n * The logger of the PluginManager class.\n * @private\n * @const\n */\nconst logger = LoggerFactory.getLogger(\"PluginManager\");\n\n/** The PluginManager responsible for register plugins definitions and store plugins instances.\n * @classdesc\n */\nexport default class PluginManager {\n  /**\n   * The registry of the plugins.\n   * Maps plugin's name to his class.\n   * @type {Map}\n   * @static\n   * @private\n   */\n  static _registry: Map<string, Function> = new Map();\n  /**\n   * The active plugins in the player.\n   * Maps plugin's name to his instance.\n   * @type {Map}\n   * @private\n   */\n  _plugins: Map<string, BasePlugin> = new Map();\n\n  /**\n   * Writes the plugin in the registry.\n   * Maps: plugin name -> plugin class.\n   * @param {string} name - The plugin name\n   * @param {Function} handler - The plugin class\n   * @returns {boolean} - If the registration request succeeded\n   * @static\n   * @public\n   */\n  static register(name: string, handler: Function): boolean {\n    if (typeof handler !== 'function' || handler.prototype instanceof BasePlugin === false) {\n      throw new PlayerError(PlayerError.TYPE.NOT_VALID_HANDLER).getError();\n    }\n    if (!PluginManager._registry.has(name)) {\n      PluginManager._registry.set(name, handler);\n      logger.debug(`Plugin <${name}> has been registered successfully`);\n      return true;\n    }\n    logger.debug(`Plugin <${name}> is already registered, do not register again`);\n    return false;\n  }\n\n  /**\n   * Removes the plugin from the registry.\n   * @param {string} name - The plugin name\n   * @static\n   * @public\n   * @returns {void}\n   */\n  static unRegister(name: string): void {\n    if (PluginManager._registry.has(name)) {\n      PluginManager._registry.delete(name);\n      logger.debug(`Unregistered <${name}> plugin.`);\n    }\n  }\n\n  /**\n   * Creates and store new instance of the plugin in case isValid() of the plugin returns true.\n   * @param {string} name - The plugin name\n   * @param {Player} player - The player reference\n   * @param {Object} [config={}] - The plugin configuration\n   * @returns {boolean} - Whether the plugin load was successful\n   * @public\n   */\n  load(name: string, player: Player, config: Object = {}): boolean {\n    if (!PluginManager._registry.has(name)) {\n      throw new PlayerError(PlayerError.TYPE.NOT_REGISTERED_PLUGIN, name).getError();\n    }\n    let pluginClass = PluginManager._registry.get(name);\n    if (pluginClass != null && pluginClass.isValid()) {\n      this._plugins.set(name, pluginClass.createPlugin(name, player, config));\n      logger.debug(`Plugin <${name}> has been loaded`);\n      return true;\n    }\n    logger.debug(`Plugin <${name}> isn\\'t loaded, isValid()=false`);\n    return false;\n  }\n\n  /**\n   * Iterates over all the plugins and calls private _destroy.\n   * @public\n   * @returns {void}\n   */\n  destroy(): void {\n    this._plugins.forEach(this._destroy.bind(this));\n  }\n\n  /**\n   * Calls destroy() method of the plugin's impl.\n   * @param {BasePlugin} plugin - The plugin instance\n   * @param {string} name - The plugin name\n   * @private\n   * @returns {void}\n   */\n  _destroy(plugin: BasePlugin, name: string): void {\n    plugin.destroy();\n    this._plugins.delete(name);\n  }\n\n  /**\n   * Returns the plugin's instance.\n   * @param {string} name - The plugin name\n   * @returns {BasePlugin} - The plugin instance\n   * @public\n   */\n  get(name: string): ?BasePlugin {\n    return this._plugins.get(name);\n  }\n}\n\n/**\n * Export the register method.\n * @type {function}\n * @constant\n */\nconst registerPlugin = PluginManager.register;\nexport {registerPlugin};\n\n\n\n// WEBPACK FOOTER //\n// ./plugin/plugin-manager.js","//@flow\n\n/**\n * The possible player state types.\n * @const\n * @type {{IDLE: string, LOADING: string, PLAYING: string, PAUSED: string, BUFFERING: string}}\n */\nconst PLAYER_STATE_TYPES: { [state: string]: string } = {\n  IDLE: \"idle\",\n  LOADING: \"loading\",\n  PLAYING: \"playing\",\n  PAUSED: \"paused\",\n  BUFFERING: \"buffering\"\n};\n\nexport default PLAYER_STATE_TYPES;\n\n\n\n// WEBPACK FOOTER //\n// ./state/state-types.js","//@flow\n\n/**\n * A simple multimap template.\n * @constructor\n * @struct\n * @template T\n */\nclass MultiMap<T> {\n  _map: Map<string, T[]>;\n\n  constructor() {\n    /** @private {!Object.<string, !Array.<T>>} */\n    this._map = new Map();\n  }\n\n  /**\n   * Add a key, value pair to the map.\n   * @param {string} key -\n   * @param {T} value  -\n   * @returns {void}\n   */\n  push(key: string, value: T): void {\n    if (this._map.has(key)) {\n      let list = this._map.get(key);\n      if (Array.isArray(list)) {\n        list.push(value);\n        this._map.set(key, list);\n      }\n    } else {\n      this._map.set(key, [value]);\n    }\n  }\n\n  /**\n   * Set an array of values for the key, overwriting any previous data.\n   * @param {string} key -\n   * @param {!Array.<T>} values -\n   * @returns {void}\n   */\n  set(key: string, values: T[]): void {\n    this._map.set(key, values);\n  }\n\n  /**\n   * Check for a key.\n   * @param {string} key -\n   * @return {boolean} true if the key exists.\n   */\n  has(key: string): boolean {\n    return this._map.has(key);\n  }\n\n  /**\n   * Get a list of values by key.\n   * @param {string} key -\n   * @return {Array.<T>} or null if no suZch key exists.\n   */\n  get(key: string): Array<T> {\n    let list = this._map.get(key);\n    // slice() clones the list so that it and the map can each be modified\n    // without affecting the other.\n    return list ? list.slice() : [];\n  }\n\n  /**\n   * Get a list of all values.\n   * @returns {!Array.<T>} -\n   */\n  getAll(): T[] {\n    let list: T[] = [];\n    for (var value of this._map.values()) {\n      list = list.concat(value);\n    }\n    return list;\n  }\n\n  /**\n   * Remove a specific value, if it exists.\n   * @param {string} key -\n   * @param {T} value -\n   * @returns {void}\n   */\n  remove(key: string, value: T): void {\n    if (!this._map.has(key)) return;\n    let list = this._map.get(key);\n    if (Array.isArray(list)) {\n      for (let i = 0; i < list.length; ++i) {\n        if (list[i] == value) {\n          list.splice(i, 1);\n          --i;\n        }\n      }\n    }\n  }\n\n  /**\n   * Get all keys from the multimap.\n   * @return {!Array.<string>}\n   */\n  // eslint-disable-next-line no-undef\n  keys(): Iterator<string> {\n    return this._map.keys();\n  }\n\n\n  /**\n   * Clear all keys and values from the multimap.\n   * @returns {void}\n   */\n  clear(): void {\n    this._map.clear();\n  }\n}\n\nexport default MultiMap;\n\n\n\n// WEBPACK FOOTER //\n// ./utils/multi-map.js","module.exports = {\n\t\"name\": \"playkit-js\",\n\t\"version\": \"0.2.0\",\n\t\"main\": \"dist/playkit.js\",\n\t\"scripts\": {\n\t\t\"clean\": \"rm -rf ./dist\",\n\t\t\"prebuild\": \"npm run clean\",\n\t\t\"build:prod\": \"NODE_ENV=production webpack\",\n\t\t\"build\": \"webpack\",\n\t\t\"dev\": \"webpack --progress --colors --watch\",\n\t\t\"test\": \"NODE_ENV=test karma start --color\",\n\t\t\"test:chrome\": \"NODE_ENV=test karma start --color --browsers Chrome\",\n\t\t\"test:chrome:dots\": \"NODE_ENV=test karma start --color --browsers Chrome --reporters dots\",\n\t\t\"test:firefox\": \"NODE_ENV=test karma start --color --browsers Firefox\",\n\t\t\"test:safari\": \"NODE_ENV=test karma start --color --browsers Safari\",\n\t\t\"test:watch\": \"NODE_ENV=test karma start --color --auto-watch\",\n\t\t\"start\": \"webpack-dev-server\",\n\t\t\"release\": \"npm run build:prod && npm run commit:dist && standard-version\",\n\t\t\"publish\": \"git push --follow-tags --no-verify origin develop\",\n\t\t\"eslint\": \"eslint . --color\",\n\t\t\"flow\": \"flow check\",\n\t\t\"eslint:flow:test\": \"npm run eslint && npm run flow && npm run test\",\n\t\t\"commit:dist\": \"git add --all dist && (git commit -m 'chore: update dist' || exit 0)\",\n\t\t\"prepush-msg:build\": \"echo '\\nRunning build before push...\\n' && exit 0\",\n\t\t\"prepush-msg:dist\": \"echo '\\nAdding dist files to a seperate commit...\\n' && exit 0\",\n\t\t\"prepush-msg:done\": \"echo '\\nPre push tasks are done.\\n' && exit 0\"\n\t},\n\t\"pre-push\": [\n\t\t\"prepush-msg:build\",\n\t\t\"prebuild\",\n\t\t\"build\",\n\t\t\"build:prod\",\n\t\t\"prepush-msg:dist\",\n\t\t\"commit:dist\",\n\t\t\"prepush-msg:done\"\n\t],\n\t\"devDependencies\": {\n\t\t\"babel-cli\": \"^6.18.0\",\n\t\t\"babel-core\": \"^6.18.2\",\n\t\t\"babel-eslint\": \"^7.1.1\",\n\t\t\"babel-loader\": \"^6.2.7\",\n\t\t\"babel-plugin-istanbul\": \"^4.0.0\",\n\t\t\"babel-plugin-transform-class-properties\": \"^6.22.0\",\n\t\t\"babel-plugin-transform-flow-strip-types\": \"^6.22.0\",\n\t\t\"babel-preset-es2015\": \"^6.18.0\",\n\t\t\"babel-register\": \"^6.23.0\",\n\t\t\"chai\": \"^3.5.0\",\n\t\t\"cross-env\": \"^3.1.4\",\n\t\t\"eslint\": \"^3.10.0\",\n\t\t\"eslint-loader\": \"^1.6.1\",\n\t\t\"eslint-plugin-flowtype\": \"^2.30.0\",\n\t\t\"eslint-plugin-import\": \"^2.2.0\",\n\t\t\"eslint-plugin-mocha-no-only\": \"^0.0.5\",\n\t\t\"flow-bin\": \"latest\",\n\t\t\"istanbul\": \"^0.4.5\",\n\t\t\"karma\": \"^1.5.0\",\n\t\t\"karma-chai\": \"^0.1.0\",\n\t\t\"karma-chrome-launcher\": \"^2.0.0\",\n\t\t\"karma-cli\": \"^1.0.1\",\n\t\t\"karma-coverage\": \"^1.1.1\",\n\t\t\"karma-firefox-launcher\": \"^1.0.1\",\n\t\t\"karma-ie-launcher\": \"^1.0.0\",\n\t\t\"karma-mocha\": \"^1.3.0\",\n\t\t\"karma-safari-launcher\": \"^1.0.0\",\n\t\t\"karma-sourcemap-loader\": \"^0.3.7\",\n\t\t\"karma-webpack\": \"^2.0.2\",\n\t\t\"mocha\": \"^3.2.0\",\n\t\t\"mocha-cli\": \"^1.0.1\",\n\t\t\"pre-push\": \"^0.1.1\",\n\t\t\"sinon\": \"^2.0.0\",\n\t\t\"sinon-chai\": \"^2.8.0\",\n\t\t\"standard-version\": \"^4.0.0\",\n\t\t\"uglifyjs-webpack-plugin\": \"^0.4.3\",\n\t\t\"webpack\": \"latest\",\n\t\t\"webpack-dev-server\": \"latest\"\n\t},\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"https://github.com/kaltura/playkit-js\"\n\t},\n\t\"keywords\": [\n\t\t\"kaltura\",\n\t\t\"player\",\n\t\t\"html5 player\"\n\t],\n\t\"license\": \"AGPLV3\",\n\t\"bugs\": {\n\t\t\"url\": \"https://github.com/kaltura/playkit-js/issues\"\n\t},\n\t\"homepage\": \"https://github.com/kaltura/playkit-js\",\n\t\"dependencies\": {\n\t\t\"js-logger\": \"^1.3.0\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../package.json\n// module id = 18\n// module chunks = 0","//@flow\nimport FakeEventTarget from '../../event/fake-event-target'\nimport FakeEvent from '../../event/fake-event'\nimport EventManager from '../../event/event-manager'\nimport {HTML5_EVENTS as Html5Events, CUSTOM_EVENTS as CustomEvents} from '../../event/events'\nimport MediaSourceProvider from './media-source/media-source-provider'\nimport VideoTrack from '../../track/video-track'\nimport AudioTrack from '../../track/audio-track'\nimport TextTrack from '../../track/text-track'\n\nexport default class Html5 extends FakeEventTarget implements IEngine {\n  /**\n   * The video element.\n   * @type {HTMLVideoElement}\n   * @private\n   */\n  _el: HTMLVideoElement;\n  /**\n   * The event manager of the engine.\n   * @type {EventManager}\n   * @private\n   */\n  _eventManager: EventManager;\n  /**\n   * The selected media source adapter of the engine.\n   * @type {IMediaSourceAdapter}\n   * @private\n   */\n  _mediaSourceAdapter: ?IMediaSourceAdapter;\n\n  /**\n   * @type {string} - The engine name.\n   */\n  static EngineName: string = \"html5\";\n\n  /**\n   * Checks if the engine can play a given mime type.\n   * @param {string} mimeType - The mime type to check.\n   * @returns {boolean} - Whether the engine can play the mime type.\n   */\n  static canPlayType(mimeType) {\n    return MediaSourceProvider.canPlayType(mimeType);\n  }\n\n  /**\n   * @constructor\n   * @param {Source} source - The selected source object.\n   * @param {Object} config - The player configuration.\n   */\n  constructor(source: Source, config: Object) {\n    super();\n    this._createVideoElement();\n    this._eventManager = new EventManager();\n    this._loadMediaSourceAdapter(source, config);\n    this.attach();\n  }\n\n  /**\n   * Destroys the engine.\n   * @public\n   * @returns {void}\n   */\n  destroy(): void {\n    this.detach();\n    if (this._mediaSourceAdapter) {\n      this._mediaSourceAdapter.destroy();\n    }\n    if (this._el) {\n      this.pause();\n      this._el.removeAttribute('src');\n      if (this._el.parentNode) {\n        this._el.parentNode.removeChild(this._el);\n      }\n    }\n    this._eventManager.destroy();\n  }\n\n  /**\n   * Listen to the video element events and triggers them from the engine.\n   * @public\n   * @returns {void}\n   */\n  attach(): void {\n    for (let playerEvent in Html5Events) {\n      this._eventManager.listen(this._el, Html5Events[playerEvent], () => {\n        this.dispatchEvent(new FakeEvent(Html5Events[playerEvent]));\n      });\n    }\n    if (this._mediaSourceAdapter) { // listen and dispatch adaptive bitrate changed event\n      this._eventManager.listen(this._mediaSourceAdapter, CustomEvents.VIDEO_TRACK_CHANGED, (event: FakeEvent) => {\n        this.dispatchEvent(event);\n      });\n      this._eventManager.listen(this._mediaSourceAdapter, CustomEvents.AUDIO_TRACK_CHANGED, (event: FakeEvent) => {\n        return this.dispatchEvent(event);\n      });\n      this._eventManager.listen(this._mediaSourceAdapter, CustomEvents.TEXT_TRACK_CHANGED, (event: FakeEvent) => {\n        return this.dispatchEvent(event);\n      });\n    }\n  }\n\n  /**\n   * Remove the listeners of the video element events.\n   * @public\n   * @returns {void}\n   */\n  detach(): void {\n    for (let playerEvent in Html5Events) {\n      this._eventManager.unlisten(this._el, Html5Events[playerEvent]);\n    }\n    if (this._mediaSourceAdapter) { // unlisten to adaptive bitrate changed\n      this._eventManager.unlisten(this._mediaSourceAdapter, CustomEvents.VIDEO_TRACK_CHANGED);\n      this._eventManager.unlisten(this._mediaSourceAdapter, CustomEvents.AUDIO_TRACK_CHANGED);\n      this._eventManager.unlisten(this._mediaSourceAdapter, CustomEvents.TEXT_TRACK_CHANGED);\n    }\n  }\n\n  /**\n   * @returns {HTMLVideoElement} - The video element.\n   * @public\n   */\n  getVideoElement(): HTMLVideoElement {\n    return this._el;\n  }\n\n  /**\n   * Creates a video element dom object.\n   * @private\n   * @returns {void}\n   */\n  _createVideoElement(): void {\n    this._el = document.createElement(\"video\");\n    //Set attributes\n    this._el.style.width = \"640px\";\n    this._el.style.height = \"360px\";\n    this._el.style.backgroundColor = \"black\";\n    this._el.controls = true;\n    if (document && document.body) {\n      document.body.appendChild(this._el);\n    }\n  }\n\n  /**\n   * Loads the appropriate media source extension adapter.\n   * @param {Source} source - The selected source object.\n   * @param {Object} config - The media source extension configuration.\n   * @private\n   * @returns {void}\n   */\n  _loadMediaSourceAdapter(source: Source, config: Object): void {\n    this._mediaSourceAdapter = MediaSourceProvider.getMediaSourceAdapter(this.getVideoElement(), source, config);\n  }\n\n  /**\n   * Select a new video track.\n   * @param {VideoTrack} videoTrack - The video track object to set.\n   * @returns {void}\n   */\n  selectVideoTrack(videoTrack: VideoTrack): void {\n    if (this._mediaSourceAdapter) {\n      this._mediaSourceAdapter.selectVideoTrack(videoTrack);\n    }\n  }\n\n  /**\n   * Select a new audio track.\n   * @param {AudioTrack} audioTrack - The video track object to set.\n   * @returns {void}\n   */\n  selectAudioTrack(audioTrack: AudioTrack): void {\n    if (this._mediaSourceAdapter) {\n      this._mediaSourceAdapter.selectAudioTrack(audioTrack);\n    }\n  }\n\n  /**\n   * Select a new text track.\n   * @param {TextTrack} textTrack - The text track object to set.\n   * @returns {void}\n   */\n  selectTextTrack(textTrack: TextTrack): void {\n    if (this._mediaSourceAdapter) {\n      this._mediaSourceAdapter.selectTextTrack(textTrack);\n    }\n  }\n\n  /**\n   * Hide the text track\n   * @function hideTextTrack\n   * @returns {void}\n   * @public\n   */\n  hideTextTrack(): void {\n    if (this._mediaSourceAdapter) {\n      this._mediaSourceAdapter.hideTextTrack();\n    }\n  }\n\n  /**\n   * Enables adaptive bitrate switching according to the media source extension logic.\n   * @function enableAdaptiveBitrate\n   * @returns {void}\n   * @public\n   */\n  enableAdaptiveBitrate(): void {\n    if (this._mediaSourceAdapter) {\n      this._mediaSourceAdapter.enableAdaptiveBitrate();\n    }\n  }\n\n  /**\n   * Set a source.\n   * @param {string} source - Source to set.\n   * @public\n   * @returns {void}\n   */\n  set src(source: string): void {\n    this._el.src = source;\n  }\n\n  /**\n   * Get the source url.\n   * @returns {string} - The source url.\n   * @public\n   */\n  get src(): string {\n    if (this._mediaSourceAdapter) {\n      return this._mediaSourceAdapter.src;\n    }\n    return \"\";\n  }\n\n  //playback interface\n  /**\n   * Start/resume playback.\n   * @public\n   * @returns {void}\n   */\n  play(): void {\n    return this._el.play();\n  }\n\n  /**\n   * Pause playback.\n   * @public\n   * @returns {void}\n   */\n  pause(): void {\n    return this._el.pause();\n  }\n\n  /**\n   * Load media.\n   * @public\n   * @returns {Promise<Object>} - The loaded data\n   */\n  load(): Promise<Object> {\n    return this._mediaSourceAdapter ? this._mediaSourceAdapter.load() : Promise.resolve({});\n  }\n\n  /**\n   * Get the current time in seconds.\n   * @returns {Number} - The current playback time.\n   * @public\n   */\n  get currentTime(): number {\n    return this._el.currentTime;\n  }\n\n  /**\n   * Set the current time in seconds.\n   * @param {Number} to - The number to set in seconds.\n   * @public\n   * @returns {void}\n   */\n  set currentTime(to: number): void {\n    this._el.currentTime = to;\n  }\n\n  /**\n   * Get the duration in seconds.\n   * @returns {Number} - The playback duration.\n   * @public\n   */\n  get duration(): number {\n    return this._el.duration;\n  }\n\n  /**\n   * Set playback volume.\n   * @param {Number} vol - The volume to set.\n   * @public\n   * @returns {void}\n   */\n  set volume(vol: number): void {\n    this._el.volume = vol;\n  }\n\n  /**\n   * Get playback volume.\n   * @returns {Number} - The volume value of the video element.\n   * @public\n   */\n  get volume(): number {\n    return this._el.volume;\n  }\n\n  ready() {\n  }\n\n  /**\n   * Get paused state.\n   * @returns {boolean} - The paused value of the video element.\n   * @public\n   */\n  get paused(): boolean {\n    return this._el.paused;\n  }\n\n  /**\n   * Get seeking state.\n   * @returns {boolean} - The seeking value of the video element.\n   * @public\n   */\n  get seeking(): boolean {\n    return this._el.seeking;\n  }\n\n  /**\n   * Get the first seekable range (part) of the video in seconds.\n   * @returns {TimeRanges} - First seekable range (part) of the video in seconds.\n   * @public\n   */\n  get seekable(): TimeRanges {\n    return this._el.seekable;\n  }\n\n  /**\n   * Get the first played range (part) of the video in seconds.\n   * @returns {TimeRanges} - First played range (part) of the video in seconds.\n   * @public\n   */\n  get played(): TimeRanges {\n    return this._el.played;\n  }\n\n  /**\n   * Get the first buffered range (part) of the video in seconds.\n   * @returns {TimeRanges} - First buffered range (part) of the video in seconds.\n   * @public\n   */\n  get buffered(): TimeRanges {\n    return this._el.buffered;\n  }\n\n  /**\n   * Set player muted state.\n   * @param {boolean} mute - The new mute value.\n   * @public\n   * @returns {void}\n   */\n  set muted(mute: boolean): void {\n    this._el.muted = mute;\n  }\n\n  /**\n   * Get player muted state.\n   * @returns {boolean} - The muted value of the video element.\n   * @public\n   */\n  get muted(): boolean {\n    return this._el.muted;\n  }\n\n  /**\n   * Get the default mute value.\n   * @returns {boolean} - The defaultMuted of the video element.\n   * @public\n   */\n  get defaultMuted(): boolean {\n    return this._el.defaultMuted;\n  }\n\n  /**\n   * Sets an image to be shown while the video is downloading, or until the user hits the play button.\n   * @param {string} poster - The image url to be shown.\n   * @returns {void}\n   * @public\n   */\n  set poster(poster: string): void {\n    this._el.poster = poster;\n  }\n\n  /**\n   * Gets an image to be shown while the video is downloading, or until the user hits the play button.\n   * @returns {poster} - The image url.\n   * @public\n   */\n  get poster(): string {\n    return this._el.poster;\n  }\n\n  /**\n   * Specifies if and how the author thinks that the video should be loaded when the page loads.\n   * @param {string} preload - The preload value.\n   * @public\n   * @returns {void}\n   */\n  set preload(preload: string): void {\n    this._el.preload = preload;\n  }\n\n  /**\n   * Gets the preload value of the video element.\n   * @returns {string} - The preload value.\n   * @public\n   */\n  get preload(): string {\n    return this._el.preload;\n  }\n\n  /**\n   * Set if the video will automatically start playing as soon as it can do so without stopping.\n   * @param {boolean} autoplay - The autoplay value.\n   * @public\n   * @returns {void}\n   */\n  set autoplay(autoplay: boolean): void {\n    this._el.autoplay = autoplay;\n  }\n\n  /**\n   * Gets the autoplay value of the video element.\n   * @returns {boolean} - The autoplay value.\n   * @public\n   */\n  get autoplay(): boolean {\n    return this._el.autoplay;\n  }\n\n  /**\n   * Set to specifies that the video will start over again, every time it is finished.\n   * @param {boolean} loop - the loop value.\n   * @public\n   * @returns {void}\n   */\n  set loop(loop: boolean) {\n    this._el.loop = loop;\n  }\n\n  /**\n   * Gets the loop value of the video element.\n   * @returns {boolean} - The loop value.\n   * @public\n   */\n  get loop(): boolean {\n    return this._el.loop;\n  }\n\n  /**\n   * Set to specifies that video controls should be displayed.\n   * @param {boolean} controls - the controls value.\n   * @public\n   * @returns {void}\n   */\n  set controls(controls: boolean): void {\n    this._el.controls = controls;\n  }\n\n  /**\n   * Gets the controls value of the video element.\n   * @returns {boolean} - The controls value.\n   * @public\n   */\n  get controls(): boolean {\n    return this._el.controls;\n  }\n\n  /**\n   * Sets the current playback speed of the audio/video.\n   * @param {Number} playbackRate - The playback speed value.\n   * @public\n   * @returns {void}\n   */\n  set playbackRate(playbackRate: number): void {\n    this._el.playbackRate = playbackRate;\n  }\n\n  /**\n   * Gets the current playback speed of the audio/video.\n   * @returns {Number} - The current playback speed value.\n   * @public\n   */\n  get playbackRate(): number {\n    return this._el.playbackRate;\n  }\n\n  /**\n   * Sets the default playback speed of the audio/video.\n   * @param {Number} defaultPlaybackRate - The default playback speed value.\n   * @public\n   * @returns {void}\n   */\n  set defaultPlaybackRate(defaultPlaybackRate: number) {\n    this._el.defaultPlaybackRate = defaultPlaybackRate;\n  }\n\n  /**\n   * Gets the default playback speed of the audio/video.\n   * @returns {Number} - The default playback speed value.\n   * @public\n   */\n  get defaultPlaybackRate(): number {\n    return this._el.defaultPlaybackRate;\n  }\n\n  /**\n   * The ended property returns whether the playback of the audio/video has ended.\n   * @returns {boolean} - The ended value.\n   * @public\n   */\n  get ended(): boolean {\n    return this._el.ended;\n  }\n\n  /**\n   * The error property returns a MediaError object.\n   * @returns {MediaError} - The MediaError object has a code property containing the error state of the audio/video.\n   * @public\n   */\n  get error(): ?MediaError {\n    return this._el.error;\n  }\n\n  /**\n   * @returns {Number} - The current network state (activity) of the audio/video.\n   * @public\n   */\n  get networkState(): number {\n    return this._el.networkState;\n  }\n\n  /**\n   * Indicates if the audio/video is ready to play or not.\n   * @returns {Number} - The current ready state of the audio/video.\n   * 0 = HAVE_NOTHING - no information whether or not the audio/video is ready.\n   * 1 = HAVE_METADATA - metadata for the audio/video is ready.\n   * 2 = HAVE_CURRENT_DATA - data for the current playback position is available, but not enough data to play next frame/millisecond.\n   * 3 = HAVE_FUTURE_DATA - data for the current and at least the next frame is available.\n   * 4 = HAVE_ENOUGH_DATA - enough data available to start playing.\n   */\n  get readyState(): number {\n    return this._el.readyState;\n  }\n\n  /**\n   * @returns {Number} - The height of the video player, in pixels.\n   * @public\n   */\n  get videoHeight(): number {\n    return this._el.videoHeight;\n  }\n\n  /**\n   * @returns {Number} - The width of the video player, in pixels.\n   * @public\n   */\n  get videoWidth(): number {\n    return this._el.videoWidth;\n  }\n\n  /**\n   * Test video element to check if html5 engine is supported.\n   */\n  static TEST_VID: HTMLVideoElement;\n\n  /**\n   * Checks if the html5 engine is supported.\n   * @returns {boolean} - The isSupported result.\n   * @static\n   * @public\n   */\n  static isSupported() {\n    try {\n      Html5.TEST_VID = document.createElement('video');\n      Html5.TEST_VID.volume = 0.5;\n    } catch (e) {\n      return false;\n    }\n    return !!Html5.TEST_VID.canPlayType;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./engines/html5/html5.js","//@flow\nimport EventManager from '../../../../event/event-manager'\nimport {HTML5_EVENTS as Html5Events} from '../../../../event/events'\nimport Track from '../../../../track/track'\nimport VideoTrack from '../../../../track/video-track'\nimport AudioTrack from '../../../../track/audio-track'\nimport TextTrack from '../../../../track/text-track'\nimport BaseMediaSourceAdapter from '../base-media-source-adapter'\n\n/**\n * An illustration of media source extension for progressive download\n * @classdesc\n * @implements {IMediaSourceAdapter}\n */\nexport default class NativeAdapter extends BaseMediaSourceAdapter {\n  /**\n   * The id of the Adapter\n   * @member {string} id\n   * @static\n   * @public\n   */\n  static id: string = 'NativeAdapter';\n\n  /**\n   * The adapter logger\n   * @member {any} _logger\n   * @private\n   * @static\n   */\n  static _logger = BaseMediaSourceAdapter.getLogger(NativeAdapter.id);\n  /**\n   * The event manager of the class.\n   * @member {EventManager} - _eventManager\n   * @type {EventManager}\n   * @private\n   */\n  _eventManager: EventManager;\n  /**\n   * The load promise\n   * @member {Promise<Object>} - _loadPromise\n   * @type {Promise<Object>}\n   * @private\n   */\n  _loadPromise: ?Promise<Object>;\n\n  /**\n   * Checks if NativeAdapter can play a given mime type.\n   * @function canPlayType\n   * @param {string} mimeType - The mime type to check\n   * @returns {boolean} - Whether the native adapter can play a specific mime type\n   * @static\n   */\n  static canPlayType(mimeType: string): boolean {\n    let canPlayType = (typeof mimeType === 'string') ? !!(document.createElement(\"video\").canPlayType(mimeType.toLowerCase())) : false;\n    NativeAdapter._logger.debug('canPlayType result for mimeType:' + mimeType + ' is ' + canPlayType.toString());\n    return canPlayType;\n  }\n\n  /**\n   * @constructor\n   * @param {HTMLVideoElement} videoElement - The video element which bind to NativeAdapter\n   * @param {Source} source - The source object\n   * @param {Object} config - The media source adapter configuration\n   */\n  constructor(videoElement: HTMLVideoElement, source: Source, config: Object) {\n    NativeAdapter._logger.debug('Creating adapter');\n    super(videoElement, source, config);\n    this._eventManager = new EventManager();\n  }\n\n  /**\n   * Load the video source\n   * @function load\n   * @returns {Promise<Object>} - The loaded data\n   */\n  load(): Promise<Object> {\n    if (!this._loadPromise) {\n      this._loadPromise = new Promise((resolve, reject) => {\n        // We're using 'loadeddata' event for native hls (on 'loadedmetadata' native hls doesn't have tracks yet).\n        this._eventManager.listen(this._videoElement, Html5Events.LOADED_DATA, () => {\n          this._eventManager.unlisten(this._videoElement, Html5Events.LOADED_DATA);\n          let data = {tracks: this._getParsedTracks()};\n          NativeAdapter._logger.debug('The source has been loaded successfully');\n          resolve(data);\n        });\n        this._eventManager.listen(this._videoElement, Html5Events.ERROR, (error) => {\n          this._eventManager.unlisten(this._videoElement, Html5Events.ERROR);\n          NativeAdapter._logger.error(error);\n          reject(error);\n        });\n        if (this._sourceObj && this._sourceObj.url) {\n          this._videoElement.src = this._sourceObj.url;\n        }\n      });\n    }\n    return this._loadPromise;\n  }\n\n  /**\n   * Destroys the native adapter.\n   * @function destroy\n   * @returns {void}\n   */\n  destroy(): void {\n    NativeAdapter._logger.debug('destroy');\n    super.destroy();\n    this._eventManager.destroy();\n    this._loadPromise = null;\n  }\n\n  /**\n   * Get the parsed tracks\n   * @function _getParsedTracks\n   * @returns {Array<Track>} - The parsed tracks\n   * @private\n   */\n  _getParsedTracks(): Array<Track> {\n    let videoTracks = this._getParsedVideoTracks();\n    let audioTracks = this._getParsedAudioTracks();\n    let textTracks = this._getParsedTextTracks();\n    return videoTracks.concat(audioTracks).concat(textTracks);\n  }\n\n  /**\n   * Get the parsed video tracks\n   * @function _getParsedVideoTracks\n   * @returns {Array<Track>} - The parsed video tracks\n   * @private\n   */\n  _getParsedVideoTracks(): Array<Track> {\n    let videoTracks = this._videoElement.videoTracks;\n    let parsedTracks = [];\n    if (videoTracks) {\n      for (let i = 0; i < videoTracks.length; i++) {\n        let settings = {\n          id: videoTracks[i].id,\n          active: videoTracks[i].selected,\n          label: videoTracks[i].label,\n          language: videoTracks[i].language,\n          index: i\n        };\n        parsedTracks.push(new VideoTrack(settings));\n      }\n    }\n    return parsedTracks;\n  }\n\n  /**\n   * Get the parsed audio tracks\n   * @function _getParsedAudioTracks\n   * @returns {Array<Track>} - The parsed audio tracks\n   * @private\n   */\n  _getParsedAudioTracks(): Array<Track> {\n    let audioTracks = this._videoElement.audioTracks;\n    let parsedTracks = [];\n    if (audioTracks) {\n      for (let i = 0; i < audioTracks.length; i++) {\n        let settings = {\n          id: audioTracks[i].id,\n          active: audioTracks[i].enabled,\n          label: audioTracks[i].label,\n          language: audioTracks[i].language,\n          index: i\n        };\n        parsedTracks.push(new AudioTrack(settings));\n      }\n    }\n    return parsedTracks;\n  }\n\n  /**\n   * Get the parsed text tracks\n   * @function _getParsedTextTracks\n   * @returns {Array<Track>} - The parsed text tracks\n   * @private\n   */\n  _getParsedTextTracks(): Array<Track> {\n    let textTracks = this._videoElement.textTracks;\n    let parsedTracks = [];\n    if (textTracks) {\n      for (let i = 0; i < textTracks.length; i++) {\n        let settings = {\n          kind: textTracks[i].kind,\n          active: textTracks[i].mode === 'showing',\n          label: textTracks[i].label,\n          language: textTracks[i].language,\n          index: i\n        };\n        parsedTracks.push(new TextTrack(settings));\n      }\n    }\n    return parsedTracks;\n  }\n\n  /**\n   * Select a video track\n   * @function selectVideoTrack\n   * @param {VideoTrack} videoTrack - the track to select\n   * @returns {void}\n   * @public\n   */\n  selectVideoTrack(videoTrack: VideoTrack): void {\n    let videoTracks = this._videoElement.videoTracks;\n    if ((videoTrack instanceof VideoTrack) && videoTracks && videoTracks[videoTrack.index]) {\n      this._disableVideoTracks();\n      videoTracks[videoTrack.index].selected = true;\n      this._onTrackChanged(videoTrack);\n    }\n  }\n\n  /**\n   * Select an audio track\n   * @function selectAudioTrack\n   * @param {AudioTrack} audioTrack - the  audio track to select\n   * @returns {void}\n   * @public\n   */\n  selectAudioTrack(audioTrack: AudioTrack): void {\n    let audioTracks = this._videoElement.audioTracks;\n    if ((audioTrack instanceof AudioTrack) && audioTracks && audioTracks[audioTrack.index]) {\n      this._disableAudioTracks();\n      audioTracks[audioTrack.index].enabled = true;\n      this._onTrackChanged(audioTrack);\n    }\n  }\n\n  /**\n   * Select a text track\n   * @function selectTextTrack\n   * @param {TextTrack} textTrack - the track to select\n   * @returns {void}\n   * @public\n   */\n  selectTextTrack(textTrack: TextTrack): void {\n    let textTracks = this._videoElement.textTracks;\n    if ((textTrack instanceof TextTrack) && (textTrack.kind === 'subtitles' || textTrack.kind === 'captions') && textTracks && textTracks[textTrack.index]) {\n      this._disableTextTracks();\n      textTracks[textTrack.index].mode = 'showing';\n      this._onTrackChanged(textTrack);\n    }\n  }\n\n  /**\n   * Hide the text track\n   * @function hideTextTrack\n   * @returns {void}\n   * @public\n   */\n  hideTextTrack(): void {\n    this._disableTextTracks();\n  }\n\n  /**\n   * Enables adaptive bitrate\n   * @function enableAdaptiveBitrate\n   * @returns {void}\n   * @public\n   */\n  enableAdaptiveBitrate(): void {\n    NativeAdapter._logger.debug('Enabling adaptive bitrate not supported');\n  }\n\n  /**\n   * Disables all the existing video tracks.\n   * @private\n   * @returns {void}\n   */\n  _disableVideoTracks(): void {\n    let videoTracks = this._videoElement.videoTracks;\n    if (videoTracks) {\n      for (let i = 0; i < videoTracks.length; i++) {\n        videoTracks[i].selected = false;\n      }\n    }\n  }\n\n  /**\n   * Disables all the existing audio tracks.\n   * @private\n   * @returns {void}\n   */\n  _disableAudioTracks(): void {\n    let audioTracks = this._videoElement.audioTracks;\n    if (audioTracks) {\n      for (let i = 0; i < audioTracks.length; i++) {\n        audioTracks[i].enabled = false;\n      }\n    }\n  }\n\n  /**\n   * Disables all the existing text tracks.\n   * @private\n   * @returns {void}\n   */\n  _disableTextTracks(): void {\n    let textTracks = this._videoElement.textTracks;\n    if (textTracks) {\n      for (let i = 0; i < textTracks.length; i++) {\n        textTracks[i].mode = 'disabled';\n      }\n    }\n  }\n\n  /**\n   * Getter for the src that the adapter plays on the video element.\n   * @public\n   * @returns {string} - The src url.\n   */\n  get src(): string {\n    return this._videoElement.src;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./engines/html5/media-source/adapters/native-adapter.js","//@flow\nimport Player from './player'\nimport LoggerFactory from './utils/logger'\nimport * as packageData from '../package.json'\nimport BaseMediaSourceAdapter from './engines/html5/media-source/base-media-source-adapter'\nimport {registerMediaSourceAdapter} from './engines/html5/media-source/media-source-provider'\nimport {registerPlugin} from './plugin/plugin-manager'\nimport BasePlugin from './plugin/base-plugin'\nimport Track from './track/track'\nimport VideoTrack from './track/video-track'\nimport AudioTrack from './track/audio-track'\nimport TextTrack from './track/text-track'\n\n// Playkit version\nlet VERSION = packageData.version;\n\nLoggerFactory.getLogger().log(\"%c Playkit \" + VERSION, \"color: yellow; font-size: large\");\nLoggerFactory.getLogger().log(\"%c For more details see https://github.com/kaltura/playkit-js\", \"color: yellow;\");\n\n/**\n * @param {Object} config - The configuration of the player\n * @returns {Player} - The player instance\n */\nexport function playkit(config: Object = {}) {\n  return new Player(config);\n}\n\n// Export the media source adapters necessary utils\nexport {registerMediaSourceAdapter, BaseMediaSourceAdapter};\n\n// Export the plugin framework\nexport {registerPlugin, BasePlugin};\n\n// Export the tracks classes\nexport {Track, VideoTrack, AudioTrack, TextTrack};\n\n//export version\nexport {VERSION};\nexport default playkit;\n\n\n\n// WEBPACK FOOTER //\n// ./playkit.js","//@flow\nimport Player from '../player'\nimport EventManager from '../event/event-manager'\nimport State from './state'\nimport PlayerStates from './state-types'\nimport {HTML5_EVENTS as Html5Events, CUSTOM_EVENTS as CustomEvents} from '../event/events'\nimport FakeEvent from '../event/fake-event'\nimport LoggerFactory from '../utils/logger'\n\n/**\n * Define a transition object.\n */\ntype Transition = {\n  [state: string]: {\n    [event: string]: Function\n  }\n}\n\n/**\n * This class responsible to manage all the state machine of the player.\n * @classdesc\n */\nexport default class StateManager {\n  /**\n   * The logger of the class.\n   * @member\n   * @type {any}\n   * @private\n   */\n  _logger: any;\n  /**\n   * Reference to the actual player.\n   * @member\n   * @type {Player}\n   * @private\n   */\n  _player: Player;\n  /**\n   * The event manager of the class.\n   * @member\n   * @type {EventManager}\n   * @private\n   */\n  _eventManager: EventManager;\n  /**\n   * Holds the current state of the player.\n   * @member\n   * @type {State}\n   * @private\n   */\n  _curState: State;\n  /**\n   * Holds the previous state of the player.\n   * @member\n   * @type {State | null}\n   * @private\n   */\n  _prevState: State | null;\n  /**\n   * Holds the state history of the player.\n   * @member\n   * @type {Array<State>}\n   * @private\n   */\n  _history: Array<State>;\n  /**\n   * The possible transitions from one state to another.\n   * @type {Array<Transition>}\n   * @private\n   */\n  _transitions: Transition = {\n    [PlayerStates.IDLE]: {\n      [Html5Events.LOAD_START]: () => {\n        this._updateState(PlayerStates.LOADING);\n        this._dispatchEvent();\n      },\n      [Html5Events.PLAY]: () => {\n        this._updateState(PlayerStates.BUFFERING);\n        this._dispatchEvent();\n      }\n    },\n    [PlayerStates.LOADING]: {\n      [Html5Events.LOADED_METADATA]: () => {\n        if (this._player.config.autoPlay) {\n          this._updateState(PlayerStates.PLAYING);\n        } else {\n          this._updateState(PlayerStates.PAUSED);\n        }\n        this._dispatchEvent();\n      },\n      [Html5Events.ERROR]: () => {\n        this._updateState(PlayerStates.IDLE);\n        this._dispatchEvent();\n      }\n    },\n    [PlayerStates.PAUSED]: {\n      [Html5Events.PLAY]: () => {\n        this._updateState(PlayerStates.PLAYING);\n        this._dispatchEvent();\n      },\n      [Html5Events.PLAYING]: () => {\n        this._updateState(PlayerStates.PLAYING);\n        this._dispatchEvent();\n      },\n      [Html5Events.ENDED]: () => {\n        this._updateState(PlayerStates.IDLE);\n        this._dispatchEvent();\n      }\n    },\n    [PlayerStates.PLAYING]: {\n      [Html5Events.PAUSE]: () => {\n        this._updateState(PlayerStates.PAUSED);\n        this._dispatchEvent();\n      },\n      [Html5Events.WAITING]: () => {\n        this._updateState(PlayerStates.BUFFERING);\n        this._dispatchEvent();\n      },\n      [Html5Events.ENDED]: () => {\n        this._updateState(PlayerStates.IDLE);\n        this._dispatchEvent();\n      },\n      [Html5Events.ERROR]: () => {\n        this._updateState(PlayerStates.IDLE);\n        this._dispatchEvent();\n      }\n    },\n    [PlayerStates.BUFFERING]: {\n      [Html5Events.PLAYING]: () => {\n        this._updateState(PlayerStates.PLAYING);\n        this._dispatchEvent();\n      },\n      [Html5Events.PAUSE]: () => {\n        this._updateState(PlayerStates.PAUSED);\n        this._dispatchEvent();\n      }\n    }\n  };\n\n  /**\n   * @constructor\n   * @param {Player} player - Reference to the player.\n   */\n  constructor(player: Player) {\n    this._player = player;\n    this._logger = LoggerFactory.getLogger(\"StateManager\");\n    this._eventManager = new EventManager();\n    this._history = [];\n    this._prevState = null;\n    this._curState = new State(PlayerStates.IDLE);\n    this._attachListeners();\n  }\n\n  /**\n   * Register to all necessary events which impacts on the player state.\n   * @private\n   * @returns {void}\n   */\n  _attachListeners(): void {\n    this._eventManager.listen(this._player, Html5Events.ERROR, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, Html5Events.ENDED, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, Html5Events.PLAY, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, Html5Events.LOAD_START, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, Html5Events.PLAYING, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, Html5Events.LOADED_METADATA, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, Html5Events.PAUSE, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, Html5Events.WAITING, this._doTransition.bind(this));\n  }\n\n  /**\n   * Performs a state transition depends on the event which occurs in the player system.\n   * @param {FakeEvent} event - The event occurs in the player system.\n   * @private\n   * @returns {void}\n   */\n  _doTransition(event: FakeEvent): void {\n    this._logger.debug('Do transition request', event);\n    let transition = this._transitions[this._curState.type];\n    if (typeof transition[event.type] === 'function') {\n      transition[event.type]();\n    }\n  }\n\n  /**\n   * Updates the player's state.\n   * @param {string} type - The type of the new state.\n   * @private\n   * @returns {void}\n   */\n  _updateState(type: string): void {\n    if (this._curState.type !== type) {\n      this._curState.duration = Date.now() / 1000;\n      this._history.push(this._curState);\n      this._prevState = this._curState;\n      this._curState = new State(type);\n      this._logger.debug(`Switch player state: from ${this._prevState.type} to ${this._curState.type}`)\n    }\n  }\n\n  /**\n   * Fires the playerStateChanged event after state has been changed.\n   * @private\n   * @returns {void}\n   */\n  _dispatchEvent(): void {\n    let event = new FakeEvent(CustomEvents.PLAYER_STATE_CHANGED, {\n      'oldState': this._prevState,\n      'newState': this._curState\n    });\n    this._player.dispatchEvent(event);\n  }\n\n  /**\n   * Destroys the state manager.\n   * @public\n   * @returns {void}\n   */\n  destroy(): void {\n    this._history = [];\n    this._eventManager.destroy();\n  }\n\n  /**\n   * Getter to the current state of the player.\n   * @public\n   * @returns {State} - The current state object\n   */\n  get currentState(): State {\n    return this._curState;\n  }\n\n  /**\n   * Getter to the previous state of the player.\n   * @public\n   * @returns {State|null} - The previous state object, or null if such doesn't exists\n   */\n  get previousState(): State | null {\n    return this._prevState;\n  }\n\n  /**\n   * Getter to the state history of the player.\n   * @public\n   * @returns {Array.<State>} - The full states history objects\n   */\n  get history(): Array<State> {\n    return this._history;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./state/state-manager.js","//@flow\n\n/**\n * This class describes a player state.\n * @classdesc\n */\nexport default class State {\n  /**\n   * The type of the state.\n   * Can be one of those describes in states.js\n   * @member\n   * @type {string}\n   * @public\n   */\n  type: string;\n  /**\n   * The duration that the player was in this state.\n   * @member\n   * @type {number}\n   * @private\n   */\n  _duration: number;\n  /**\n   * The timestamp that this state started.\n   * @member\n   * @type {number}\n   * @private\n   */\n  _timestamp: number;\n\n  /**\n   * @constructor\n   * @param {string} type - The type of the state.\n   */\n  constructor(type: string) {\n    this.type = type;\n    this._duration = 0;\n    this._timestamp = Date.now() / 1000;\n  }\n\n  /**\n   * Getter for the duration of the state.\n   * @returns {number} - The duration of the state\n   */\n  get duration(): number {\n    return this._duration;\n  }\n\n  /**\n   * Setter for the duration of the state.\n   * @param {number} endTime - The timestamp of the next state.\n   */\n  set duration(endTime: number): void {\n    this._duration = endTime - this._timestamp;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./state/state.js","//@flow\nconst TRACK_TYPES: {[track: string]: string} = {\n  VIDEO: \"video\",\n  AUDIO: \"audio\",\n  TEXT: \"text\"\n};\n\nexport default TRACK_TYPES;\n\n\n\n// WEBPACK FOOTER //\n// ./track/track-types.js","/*!\r\n * js-logger - http://github.com/jonnyreeves/js-logger\r\n * Jonny Reeves, http://jonnyreeves.co.uk/\r\n * js-logger may be freely distributed under the MIT license.\r\n */\r\n(function (global) {\r\n\t\"use strict\";\r\n\r\n\t// Top level module for the global, static logger instance.\r\n\tvar Logger = { };\r\n\r\n\t// For those that are at home that are keeping score.\r\n\tLogger.VERSION = \"1.3.0\";\r\n\r\n\t// Function which handles all incoming log messages.\r\n\tvar logHandler;\r\n\r\n\t// Map of ContextualLogger instances by name; used by Logger.get() to return the same named instance.\r\n\tvar contextualLoggersByNameMap = {};\r\n\r\n\t// Polyfill for ES5's Function.bind.\r\n\tvar bind = function(scope, func) {\r\n\t\treturn function() {\r\n\t\t\treturn func.apply(scope, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\t// Super exciting object merger-matron 9000 adding another 100 bytes to your download.\r\n\tvar merge = function () {\r\n\t\tvar args = arguments, target = args[0], key, i;\r\n\t\tfor (i = 1; i < args.length; i++) {\r\n\t\t\tfor (key in args[i]) {\r\n\t\t\t\tif (!(key in target) && args[i].hasOwnProperty(key)) {\r\n\t\t\t\t\ttarget[key] = args[i][key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\t// Helper to define a logging level object; helps with optimisation.\r\n\tvar defineLogLevel = function(value, name) {\r\n\t\treturn { value: value, name: name };\r\n\t};\r\n\r\n\t// Predefined logging levels.\r\n\tLogger.DEBUG = defineLogLevel(1, 'DEBUG');\r\n\tLogger.INFO = defineLogLevel(2, 'INFO');\r\n\tLogger.TIME = defineLogLevel(3, 'TIME');\r\n\tLogger.WARN = defineLogLevel(4, 'WARN');\r\n\tLogger.ERROR = defineLogLevel(8, 'ERROR');\r\n\tLogger.OFF = defineLogLevel(99, 'OFF');\r\n\r\n\t// Inner class which performs the bulk of the work; ContextualLogger instances can be configured independently\r\n\t// of each other.\r\n\tvar ContextualLogger = function(defaultContext) {\r\n\t\tthis.context = defaultContext;\r\n\t\tthis.setLevel(defaultContext.filterLevel);\r\n\t\tthis.log = this.info;  // Convenience alias.\r\n\t};\r\n\r\n\tContextualLogger.prototype = {\r\n\t\t// Changes the current logging level for the logging instance.\r\n\t\tsetLevel: function (newLevel) {\r\n\t\t\t// Ensure the supplied Level object looks valid.\r\n\t\t\tif (newLevel && \"value\" in newLevel) {\r\n\t\t\t\tthis.context.filterLevel = newLevel;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Is the logger configured to output messages at the supplied level?\r\n\t\tenabledFor: function (lvl) {\r\n\t\t\tvar filterLevel = this.context.filterLevel;\r\n\t\t\treturn lvl.value >= filterLevel.value;\r\n\t\t},\r\n\r\n\t\tdebug: function () {\r\n\t\t\tthis.invoke(Logger.DEBUG, arguments);\r\n\t\t},\r\n\r\n\t\tinfo: function () {\r\n\t\t\tthis.invoke(Logger.INFO, arguments);\r\n\t\t},\r\n\r\n\t\twarn: function () {\r\n\t\t\tthis.invoke(Logger.WARN, arguments);\r\n\t\t},\r\n\r\n\t\terror: function () {\r\n\t\t\tthis.invoke(Logger.ERROR, arguments);\r\n\t\t},\r\n\r\n\t\ttime: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'start' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttimeEnd: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'end' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Invokes the logger callback if it's not being filtered.\r\n\t\tinvoke: function (level, msgArgs) {\r\n\t\t\tif (logHandler && this.enabledFor(level)) {\r\n\t\t\t\tlogHandler(msgArgs, merge({ level: level }, this.context));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Protected instance which all calls to the to level `Logger` module will be routed through.\r\n\tvar globalLogger = new ContextualLogger({ filterLevel: Logger.OFF });\r\n\r\n\t// Configure the global Logger instance.\r\n\t(function() {\r\n\t\t// Shortcut for optimisers.\r\n\t\tvar L = Logger;\r\n\r\n\t\tL.enabledFor = bind(globalLogger, globalLogger.enabledFor);\r\n\t\tL.debug = bind(globalLogger, globalLogger.debug);\r\n\t\tL.time = bind(globalLogger, globalLogger.time);\r\n\t\tL.timeEnd = bind(globalLogger, globalLogger.timeEnd);\r\n\t\tL.info = bind(globalLogger, globalLogger.info);\r\n\t\tL.warn = bind(globalLogger, globalLogger.warn);\r\n\t\tL.error = bind(globalLogger, globalLogger.error);\r\n\r\n\t\t// Don't forget the convenience alias!\r\n\t\tL.log = L.info;\r\n\t}());\r\n\r\n\t// Set the global logging handler.  The supplied function should expect two arguments, the first being an arguments\r\n\t// object with the supplied log messages and the second being a context object which contains a hash of stateful\r\n\t// parameters which the logging function can consume.\r\n\tLogger.setHandler = function (func) {\r\n\t\tlogHandler = func;\r\n\t};\r\n\r\n\t// Sets the global logging filter level which applies to *all* previously registered, and future Logger instances.\r\n\t// (note that named loggers (retrieved via `Logger.get`) can be configured independently if required).\r\n\tLogger.setLevel = function(level) {\r\n\t\t// Set the globalLogger's level.\r\n\t\tglobalLogger.setLevel(level);\r\n\r\n\t\t// Apply this level to all registered contextual loggers.\r\n\t\tfor (var key in contextualLoggersByNameMap) {\r\n\t\t\tif (contextualLoggersByNameMap.hasOwnProperty(key)) {\r\n\t\t\t\tcontextualLoggersByNameMap[key].setLevel(level);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Retrieve a ContextualLogger instance.  Note that named loggers automatically inherit the global logger's level,\r\n\t// default context and log handler.\r\n\tLogger.get = function (name) {\r\n\t\t// All logger instances are cached so they can be configured ahead of use.\r\n\t\treturn contextualLoggersByNameMap[name] ||\r\n\t\t\t(contextualLoggersByNameMap[name] = new ContextualLogger(merge({ name: name }, globalLogger.context)));\r\n\t};\r\n\r\n\t// CreateDefaultHandler returns a handler function which can be passed to `Logger.setHandler()` which will\r\n\t// write to the window's console object (if present); the optional options object can be used to customise the\r\n\t// formatter used to format each log message.\r\n\tLogger.createDefaultHandler = function (options) {\r\n\t\toptions = options || {};\r\n\r\n\t\toptions.formatter = options.formatter || function defaultMessageFormatter(messages, context) {\r\n\t\t\t// Prepend the logger's name to the log message for easy identification.\r\n\t\t\tif (context.name) {\r\n\t\t\t\tmessages.unshift(\"[\" + context.name + \"]\");\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Map of timestamps by timer labels used to track `#time` and `#timeEnd()` invocations in environments\r\n\t\t// that don't offer a native console method.\r\n\t\tvar timerStartTimeByLabelMap = {};\r\n\r\n\t\t// Support for IE8+ (and other, slightly more sane environments)\r\n\t\tvar invokeConsoleMethod = function (hdlr, messages) {\r\n\t\t\tFunction.prototype.apply.call(hdlr, console, messages);\r\n\t\t};\r\n\r\n\t\t// Check for the presence of a logger.\r\n\t\tif (typeof console === \"undefined\") {\r\n\t\t\treturn function () { /* no console */ };\r\n\t\t}\r\n\r\n\t\treturn function(messages, context) {\r\n\t\t\t// Convert arguments object to Array.\r\n\t\t\tmessages = Array.prototype.slice.call(messages);\r\n\r\n\t\t\tvar hdlr = console.log;\r\n\t\t\tvar timerLabel;\r\n\r\n\t\t\tif (context.level === Logger.TIME) {\r\n\t\t\t\ttimerLabel = (context.name ? '[' + context.name + '] ' : '') + messages[0];\r\n\r\n\t\t\t\tif (messages[1] === 'start') {\r\n\t\t\t\t\tif (console.time) {\r\n\t\t\t\t\t\tconsole.time(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttimerStartTimeByLabelMap[timerLabel] = new Date().getTime();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (console.timeEnd) {\r\n\t\t\t\t\t\tconsole.timeEnd(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinvokeConsoleMethod(hdlr, [ timerLabel + ': ' +\r\n\t\t\t\t\t\t\t(new Date().getTime() - timerStartTimeByLabelMap[timerLabel]) + 'ms' ]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Delegate through to custom warn/error loggers if present on the console.\r\n\t\t\t\tif (context.level === Logger.WARN && console.warn) {\r\n\t\t\t\t\thdlr = console.warn;\r\n\t\t\t\t} else if (context.level === Logger.ERROR && console.error) {\r\n\t\t\t\t\thdlr = console.error;\r\n\t\t\t\t} else if (context.level === Logger.INFO && console.info) {\r\n\t\t\t\t\thdlr = console.info;\r\n\t\t\t\t}\r\n\r\n\t\t\t\toptions.formatter(messages, context);\r\n\t\t\t\tinvokeConsoleMethod(hdlr, messages);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t// Configure and example a Default implementation which writes to the `window.console` (if present).  The\r\n\t// `options` hash can be used to configure the default logLevel and provide a custom message formatter.\r\n\tLogger.useDefaults = function(options) {\r\n\t\tLogger.setLevel(options && options.defaultLevel || Logger.DEBUG);\r\n\t\tLogger.setHandler(Logger.createDefaultHandler(options));\r\n\t};\r\n\r\n\t// Export to popular environments boilerplate.\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine(Logger);\r\n\t}\r\n\telse if (typeof module !== 'undefined' && module.exports) {\r\n\t\tmodule.exports = Logger;\r\n\t}\r\n\telse {\r\n\t\tLogger._prevLogger = global.Logger;\r\n\r\n\t\tLogger.noConflict = function () {\r\n\t\t\tglobal.Logger = Logger._prevLogger;\r\n\t\t\treturn Logger;\r\n\t\t};\r\n\r\n\t\tglobal.Logger = Logger;\r\n\t}\r\n}(this));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/js-logger/src/logger.js\n// module id = 25\n// module chunks = 0"],"sourceRoot":""}