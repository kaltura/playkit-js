{"version":3,"sources":["webpack:///core/webpack/universalModuleDefinition","webpack:///core/playkit.min.js","webpack:///core/webpack/bootstrap 90d5511d8988c91bb03b","webpack:///core/./track/track.js","webpack:///core/./utils/logger.js","webpack:///core/./event/fake-event.js","webpack:///core/./track/audio-track.js","webpack:///core/./track/text-track.js","webpack:///core/./track/video-track.js","webpack:///core/./event/event-manager.js","webpack:///core/./event/events.js","webpack:///core/./player.js","webpack:///core/./event/fake-event-target.js","webpack:///core/./utils/player-error.js","webpack:///core/./utils/util.js","webpack:///core/./engines/html5/media-source/base-media-source-adapter.js","webpack:///core/./engines/html5/media-source/media-source-provider.js","webpack:///core/./plugin/base-plugin.js","webpack:///core/./plugin/plugin-manager.js","webpack:///core/./state/state-types.js","webpack:///core/./utils/multi-map.js","webpack:///core/../package.json","webpack:///core/./engines/html5/html5.js","webpack:///core/./engines/html5/media-source/adapters/native-adapter.js","webpack:///core/./playkit.js","webpack:///core/./state/state-manager.js","webpack:///core/./state/state.js","webpack:///core/./track/track-types.js","webpack:///core/../~/js-logger/src/logger.js","webpack:///core/./default-config.json"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","Track","settings","arguments","undefined","_id","id","_active","active","_label","label","_language","language","_index","index","set","default","LOG_LEVEL","_jsLogger","JsLogger","obj","newObj","DEBUG","INFO","TIME","WARN","ERROR","OFF","LoggerFactory","options","useDefaults","lf","defaultLevel","FakeEvent","type","payload","bubbles","cancelable","defaultPrevented","timeStamp","window","performance","now","Date","isTrusted","currentTarget","stopped","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_track","_track2","AudioTrack","_Track","getPrototypeOf","apply","TextTrack","_this","_kind","kind","VideoTrack","_bandwidth","bandwidth","_interopRequireDefault","_multiMap","_multiMap2","_fakeEvent","EventManager","_bindingMap","removeAll","Promise","resolve","listener","binding","Binding_","push","list","unlisten","remove","listeners","getAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","clear","addEventListener","removeEventListener","CUSTOM_EVENTS","HTML5_EVENTS","PLAYER_EVENTS","_util","ABORT","CAN_PLAY","CAN_PLAY_THROUGH","DURATION_CHANGE","EMPTIED","ENDED","LOADED_DATA","LOADED_METADATA","LOAD_START","PAUSE","PLAY","PLAYING","PROGRESS","RATE_CHANGE","SEEKED","SEEKING","STALLED","SUSPEND","TIME_UPDATE","VOLUME_CHANGE","WAITING","VIDEO_TRACK_CHANGED","AUDIO_TRACK_CHANGED","TEXT_TRACK_CHANGED","TRACKS_CHANGED","PLAYER_STATE_CHANGED","FIRST_PLAY","SOURCE_SELECTED","merge","registerEngine","_typeof","_eventManager","_eventManager2","_fakeEvent2","_fakeEventTarget","_fakeEventTarget2","_events","_stateTypes","_stateTypes2","_logger","_logger2","_html","_html2","_pluginManager","_pluginManager2","_stateManager","_stateManager2","_trackTypes","_trackTypes2","_videoTrack","_videoTrack2","_audioTrack","_audioTrack2","_textTrack","_textTrack2","_defaultConfig2","_defaultConfig3","Player","_FakeEventTarget","config","_tracks","_firstPlay","_readyPromise","reject","listen","configure","engine","_engines","includes","debug","_config","_defaultConfig","_selectEngine","_attachMedia","_loadPlugins","_handlePlaybackConfig","warn","_engine","destroy","plugins","load","engineSelected","sources","playback","mediaSourceAdapterPriority","_selectEngineByPriority","_selectFirstEngineWhoCanPlay","_this2","_ret","priority","engineId","toLowerCase","mediaSourceAdapterId","mediaSourceAdapter","find","canPlayResult","canPlayType","canPlay","source","_loadEngine","v","dispatchEvent","selectedSource","createEngine","preload","_this3","playerEvent","event","_markActiveTrack","selectedVideoTrack","selectedAudioTrack","selectedTextTrack","_onPlay","bind","muted","autoplay","play","_getTracksByType","filter","track","VIDEO","AUDIO","TEXT","selectVideoTrack","selectAudioTrack","selectTextTrack","enableAdaptiveBitrate","tracks","getTracks","_this4","then","data","catch","error","_this5","src","ready","pause","sessionId","session","to","isNumber","boundedTo","duration","currentTime","vol","isFloat","boundedVol","volume","paused","seeking","mute","getLogger","FakeEventTarget","_listeners","dispatchTarget","handleEvent","exception","PlayerError","param","message","TYPE","NOT_REGISTERED_PLUGIN","NOT_VALID_HANDLER","NOT_IMPLEMENTED_METHOD","method","Number","isInt","objects","assign","_playerError","_playerError2","BaseMediaSourceAdapter","videoElement","_videoElement","_sourceObj","_trigger","CustomEvents","getError","videoTrack","audioTrack","textTrack","mimeType","registerMediaSourceAdapter","_nativeAdapter","_nativeAdapter2","MediaSourceProvider","_mediaSourceAdapters","indexOf","splice","startsWith","mimetype","_selectedAdapter","j","createAdapter","register","_player","BasePlugin","player","eventManager","logger","defaultConfig","attr","update","registerPlugin","_basePlugin","_basePlugin2","PluginManager","_plugins","Map","_registry","has","pluginClass","isValid","createPlugin","forEach","_destroy","plugin","delete","handler","PLAYER_STATE_TYPES","IDLE","LOADING","PAUSED","BUFFERING","MultiMap","_map","Array","isArray","values","slice","concat","keys","version","main","scripts","clean","prebuild","build:prod","build","dev","test","test:chrome","test:chrome:dots","test:firefox","test:safari","test:watch","start","release","publish","eslint","flow","eslint:flow:test","commit:dist","prepush-msg:build","prepush-msg:dist","prepush-msg:done","pre-push","devDependencies","babel-cli","babel-core","babel-eslint","babel-loader","babel-plugin-istanbul","babel-plugin-transform-class-properties","babel-plugin-transform-flow-strip-types","babel-preset-es2015","babel-register","chai","cross-env","eslint-loader","eslint-plugin-flowtype","eslint-plugin-import","eslint-plugin-mocha-no-only","flow-bin","istanbul","karma","karma-chai","karma-chrome-launcher","karma-cli","karma-coverage","karma-firefox-launcher","karma-ie-launcher","karma-mocha","karma-safari-launcher","karma-sourcemap-loader","karma-webpack","mocha","mocha-cli","sinon","sinon-chai","standard-version","uglifyjs-webpack-plugin","webpack","webpack-dev-server","repository","url","keywords","license","bugs","homepage","dependencies","js-logger","_mediaSourceProvider","_mediaSourceProvider2","Html5","_createVideoElement","_loadMediaSourceAdapter","attach","detach","_mediaSourceAdapter","_el","removeAttribute","parentNode","removeChild","document","createElement","style","width","height","backgroundColor","controls","body","appendChild","getMediaSourceAdapter","getVideoElement","seekable","played","buffered","defaultMuted","poster","loop","playbackRate","defaultPlaybackRate","ended","networkState","readyState","videoHeight","videoWidth","TEST_VID","e","_get","receiver","Function","desc","getOwnPropertyDescriptor","parent","_baseMediaSourceAdapter","_baseMediaSourceAdapter2","NativeAdapter","_BaseMediaSourceAdapt","toString","_loadPromise","_getParsedTracks","videoTracks","_getParsedVideoTracks","audioTracks","_getParsedAudioTracks","textTracks","_getParsedTextTracks","parsedTracks","selected","enabled","mode","_disableVideoTracks","_onTrackChanged","_disableAudioTracks","_disableTextTracks","playkit","_player2","VERSION","_package","packageData","log","_defineProperty","_state","_state2","StateManager","_PlayerStates$IDLE","_PlayerStates$LOADING","_PlayerStates$PAUSED","_PlayerStates$PLAYING","_PlayerStates$BUFFERI","_transitions","_updateState","_dispatchEvent","autoPlay","_history","_prevState","_curState","_attachListeners","_doTransition","transition","oldState","newState","State","_duration","_timestamp","endTime","TRACK_TYPES","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","global","Logger","logHandler","contextualLoggersByNameMap","scope","func","args","defineLogLevel","ContextualLogger","defaultContext","context","setLevel","filterLevel","info","newLevel","enabledFor","lvl","invoke","time","timeEnd","level","msgArgs","globalLogger","L","setHandler","createDefaultHandler","formatter","messages","unshift","timerStartTimeByLabelMap","invokeConsoleMethod","hdlr","console","timerLabel","getTime","metadata","textLanguage","audioLanguage"],"mappings":"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","file":"playkit.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Playkit\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Playkit\"] = factory();\n\telse\n\t\troot[\"Playkit\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Playkit\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Playkit\"] = factory();\n\telse\n\t\troot[\"Playkit\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 21);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * General track representation of the player.\n * @classdesc\n */\nvar Track = function () {\n  _createClass(Track, [{\n    key: \"id\",\n\n\n    /**\n     * Getter for the track id.\n     * @public\n     * @returns {?string} - The track id.\n     */\n\n    /**\n     * The language of the track.\n     * @member\n     * @type {string}\n     * @private\n     */\n\n    /**\n     * The active mode of the track.\n     * @member\n     * @type {boolean}\n     * @private\n     */\n    get: function get() {\n      return this._id;\n    }\n\n    /**\n     * Getter for the active mode of the track.\n     * @public\n     * @returns {boolean} - The active mode of the track.\n     */\n\n    /**\n     * The index of the track.\n     * @member\n     * @type {number}\n     * @private\n     */\n\n    /**\n     * The label of the track.\n     * @member\n     * @type {string}\n     * @private\n     */\n\n    /**\n     * The id of the track.\n     * @member\n     * @type {string}\n     * @private\n     */\n\n  }, {\n    key: \"active\",\n    get: function get() {\n      return this._active;\n    }\n\n    /**\n     * Setter for the active mode of the track.\n     * @public\n     * @param {boolean} value - Whether the track is active or not.\n     */\n    ,\n    set: function set(value) {\n      this._active = value;\n    }\n\n    /**\n     * Getter for the label of the track.\n     * @public\n     * @returns {string} - The label of the track.\n     */\n\n  }, {\n    key: \"label\",\n    get: function get() {\n      return this._label;\n    }\n\n    /**\n     * Getter for the language of the track.\n     * @public\n     * @returns {string} - The language of the track.\n     */\n\n  }, {\n    key: \"language\",\n    get: function get() {\n      return this._language;\n    }\n\n    /**\n     * Getter for the index of the track.\n     * @public\n     * @returns {number} - The index of the track.\n     */\n\n  }, {\n    key: \"index\",\n    get: function get() {\n      return this._index;\n    }\n\n    /**\n     * @constructor\n     * @param {Object} settings - The track settings object.\n     */\n\n  }]);\n\n  function Track() {\n    var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Track);\n\n    this._id = settings.id;\n    this._active = settings.active;\n    this._label = settings.label;\n    this._language = settings.language;\n    this._index = settings.index;\n  }\n\n  return Track;\n}();\n\nexports.default = Track;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LOG_LEVEL = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _jsLogger = __webpack_require__(25);\n\nvar JsLogger = _interopRequireWildcard(_jsLogger);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar LOG_LEVEL = {\n  \"DEBUG\": JsLogger.DEBUG,\n  \"INFO\": JsLogger.INFO,\n  \"TIME\": JsLogger.TIME,\n  \"WARN\": JsLogger.WARN,\n  \"ERROR\": JsLogger.ERROR,\n  \"OFF\": JsLogger.OFF\n};\n\nvar LoggerFactory = function () {\n  function LoggerFactory(options) {\n    _classCallCheck(this, LoggerFactory);\n\n    JsLogger.useDefaults(options || {});\n  }\n\n  _createClass(LoggerFactory, [{\n    key: \"getLogger\",\n    value: function getLogger(name) {\n      if (!name) {\n        return JsLogger;\n      }\n      return JsLogger.get(name);\n    }\n  }]);\n\n  return LoggerFactory;\n}();\n\nvar lf = new LoggerFactory({ defaultLevel: JsLogger.DEBUG });\n\nexports.default = lf;\nexports.LOG_LEVEL = LOG_LEVEL;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Create an Event work-alike object based on the dictionary.\n * The event should contain all of the same properties from the dict.\n * @param {string} type -\n * @param {Object=} opt_dict -\n * @constructor\n * @extends {Event}\n */\nvar FakeEvent = function () {\n\n  /**\n   * Non-standard property read by FakeEventTarget to stop processing listeners.\n   * @type {boolean}\n   */\n\n\n  /** @type {EventTarget} */\n\n\n  /** @const {string} */\n\n\n  /** @const {boolean} */\n\n  /** @const {boolean} */\n  function FakeEvent(type, payload) {\n    _classCallCheck(this, FakeEvent);\n\n    // These Properties below cannot be set by dict.  They are all provided for\n    // compatibility with native events.\n\n    /** @const {boolean} */\n    this.bubbles = false;\n\n    /** @const {boolean} */\n    this.cancelable = false;\n\n    /** @const {boolean} */\n    this.defaultPrevented = false;\n\n    /**\n     * According to MDN, Chrome uses high-res timers instead of epoch time.\n     * Follow suit so that timeStamps on FakeEvents use the same base as\n     * on native Events.\n     * @const {number}\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Event/timeStamp\n     */\n    this.timeStamp = window.performance ? window.performance.now() : Date.now();\n\n    /** @const {string} */\n    this.type = type;\n\n    /** @const {boolean} */\n    this.isTrusted = false;\n\n    /** @type {EventTarget} */\n    this.currentTarget = null;\n\n    /** @type {EventTarget} */\n    this.target = null;\n\n    /**\n     * Non-standard property read by FakeEventTarget to stop processing listeners.\n     * @type {boolean}\n     */\n    this.stopped = false;\n\n    this.payload = payload;\n  }\n\n  /**\n   * Does nothing, since FakeEvents have no default.  Provided for compatibility\n   * with native Events.\n   * @override\n   */\n\n\n  /** @type {EventTarget} */\n\n\n  /** @const {boolean} */\n\n\n  /**\n   * According to MDN, Chrome uses high-res timers instead of epoch time.\n   * Follow suit so that timeStamps on FakeEvents use the same base as\n   * on native Events.\n   * @const {number}\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Event/timeStamp\n   */\n\n\n  /** @const {boolean} */\n\n\n  _createClass(FakeEvent, [{\n    key: \"preventDefault\",\n    value: function preventDefault() {}\n\n    /**\n     * Stops processing event listeners for this event.  Provided for compatibility\n     * with native Events.\n     * @override\n     */\n\n  }, {\n    key: \"stopImmediatePropagation\",\n    value: function stopImmediatePropagation() {\n      this.stopped = true;\n    }\n\n    /**\n     * Does nothing, since FakeEvents do not bubble.  Provided for compatibility\n     * with native Events.\n     * @override\n     */\n\n  }, {\n    key: \"stopPropagation\",\n    value: function stopPropagation() {}\n  }]);\n\n  return FakeEvent;\n}();\n\nexports.default = FakeEvent;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _track = __webpack_require__(0);\n\nvar _track2 = _interopRequireDefault(_track);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Audio track representation of the player.\n * @classdesc\n */\nvar AudioTrack = function (_Track) {\n  _inherits(AudioTrack, _Track);\n\n  function AudioTrack() {\n    _classCallCheck(this, AudioTrack);\n\n    return _possibleConstructorReturn(this, (AudioTrack.__proto__ || Object.getPrototypeOf(AudioTrack)).apply(this, arguments));\n  }\n\n  return AudioTrack;\n}(_track2.default);\n\nexports.default = AudioTrack;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _track = __webpack_require__(0);\n\nvar _track2 = _interopRequireDefault(_track);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Text track representation of the player.\n * @classdesc\n */\nvar TextTrack = function (_Track) {\n  _inherits(TextTrack, _Track);\n\n  _createClass(TextTrack, [{\n    key: 'kind',\n\n\n    /**\n     * Getter for the kind of the text track.\n     * @public\n     * @returns {string} - The kind of the text track.\n     */\n    get: function get() {\n      return this._kind;\n    }\n\n    /**\n     * @constructor\n     * @param {Object} settings - The track settings object.\n     */\n\n    /**\n     * The kind of the text track:\n     * subtitles/captions/metadata.\n     * @member\n     * @type {string}\n     * @private\n     */\n\n  }]);\n\n  function TextTrack() {\n    var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, TextTrack);\n\n    var _this = _possibleConstructorReturn(this, (TextTrack.__proto__ || Object.getPrototypeOf(TextTrack)).call(this, settings));\n\n    _this._kind = settings.kind;\n    return _this;\n  }\n\n  return TextTrack;\n}(_track2.default);\n\nexports.default = TextTrack;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _track = __webpack_require__(0);\n\nvar _track2 = _interopRequireDefault(_track);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Video track representation of the player.\n * @classdesc\n */\nvar VideoTrack = function (_Track) {\n  _inherits(VideoTrack, _Track);\n\n  _createClass(VideoTrack, [{\n    key: 'bandwidth',\n\n\n    /**\n     * Getter for the kind of the text track.\n     * @public\n     * @returns {string} - The kind of the text track.\n     */\n    get: function get() {\n      return this._bandwidth;\n    }\n\n    /**\n     * @constructor\n     * @param {Object} settings - The track settings object.\n     */\n\n    /**\n     * The kind of the text track:\n     * subtitles/captions/metadata.\n     * @member\n     * @type {string}\n     * @private\n     */\n\n  }]);\n\n  function VideoTrack() {\n    var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, VideoTrack);\n\n    var _this = _possibleConstructorReturn(this, (VideoTrack.__proto__ || Object.getPrototypeOf(VideoTrack)).call(this, settings));\n\n    _this._bandwidth = settings.bandwidth;\n    return _this;\n  }\n\n  return VideoTrack;\n}(_track2.default);\n\nexports.default = VideoTrack;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _multiMap = __webpack_require__(17);\n\nvar _multiMap2 = _interopRequireDefault(_multiMap);\n\nvar _fakeEvent = __webpack_require__(2);\n\nvar _fakeEvent2 = _interopRequireDefault(_fakeEvent);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Creates a new EventManager. An EventManager maintains a collection of \"event\n * bindings\" between event targets and event listeners.\n *\n * @struct\n * @constructor\n * @implements {IDestroyable}\n */\nvar EventManager = function () {\n  function EventManager() {\n    _classCallCheck(this, EventManager);\n\n    /**\n     * Maps an event type to an array of event bindings.\n     * @private {MultiMap.<!EventManager.Binding_>}\n     */\n    this._bindingMap = new _multiMap2.default();\n  }\n\n  /**\n   * Detaches all event listeners.\n   * @override\n   */\n\n\n  _createClass(EventManager, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.removeAll();\n      this._bindingMap = null;\n      return Promise.resolve();\n    }\n\n    /**\n     * Attaches an event listener to an event target.\n     * @param {EventTarget} target The event target.\n     * @param {string} type The event type.\n     * @param {EventManager.ListenerType} listener The event listener.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'listen',\n    value: function listen(target, type, listener) {\n      var binding = new Binding_(target, type, listener);\n      if (this._bindingMap) {\n        this._bindingMap.push(type, binding);\n      }\n    }\n\n    /**\n     * Detaches an event listener from an event target.\n     * @param {EventTarget} target The event target.\n     * @param {string} type The event type.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'unlisten',\n    value: function unlisten(target, type) {\n      if (this._bindingMap) {\n        var list = this._bindingMap.get(type);\n\n        for (var i = 0; i < list.length; ++i) {\n          var binding = list[i];\n\n          if (binding.target == target) {\n            binding.unlisten();\n            if (this._bindingMap) {\n              this._bindingMap.remove(type, binding);\n            }\n          }\n        }\n      }\n    }\n\n    /**\n     * Detaches all event listeners from all targets.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'removeAll',\n    value: function removeAll() {\n      if (this._bindingMap) {\n        var listeners = this._bindingMap.getAll();\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = listeners[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var listener = _step.value;\n\n            listener.unlisten();\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        if (this._bindingMap) {\n          this._bindingMap.clear();\n        }\n      }\n    }\n  }]);\n\n  return EventManager;\n}();\n\n/**\n * @typedef {function(!Event)}\n */\n\n\n/**\n * Creates a new Binding_ and attaches the event listener to the event target.\n * @param {EventTarget} target The event target.\n * @param {string} type The event type.\n * @param {EventManager.ListenerType} listener The event listener.\n * @constructor\n * @private\n */\nvar Binding_ = function () {\n  function Binding_(target, type, listener) {\n    _classCallCheck(this, Binding_);\n\n    /** @type {EventTarget} */\n    this.target = target;\n\n    /** @type {string} */\n    this.type = type;\n\n    /** @type {?EventManager.ListenerType} */\n    this.listener = listener;\n\n    this.target.addEventListener(type, listener, false);\n  }\n\n  /**\n   * Detaches the event listener from the event target. This does nothing if the\n   * event listener is already detached.\n   * @returns {void}\n   */\n\n\n  _createClass(Binding_, [{\n    key: 'unlisten',\n    value: function unlisten() {\n      if (!this.target) return;\n\n      this.target.removeEventListener(this.type, this.listener, false);\n\n      this.target = null;\n      this.listener = null;\n    }\n  }]);\n\n  return Binding_;\n}();\n\nexports.default = EventManager;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CUSTOM_EVENTS = exports.HTML5_EVENTS = exports.PLAYER_EVENTS = undefined;\n\nvar _util = __webpack_require__(11);\n\nvar HTML5_EVENTS = {\n  /**\n   * Fires when the loading of an audio/video is aborted\n   */\n  ABORT: 'abort',\n  /**\n   * Fires when the browser can start playing the audio/video\n   */\n  CAN_PLAY: 'canplay',\n  /**\n   * Fires when the browser can play through the audio/video without stopping for buffering\n   */\n  CAN_PLAY_THROUGH: 'canplaythrough',\n  /**\n   * Fires when the duration of the audio/video is changed\n   */\n  DURATION_CHANGE: 'durationchange',\n  /**\n   * Fires when the current playlist is empty\n   */\n  EMPTIED: 'emptied',\n  /**\n   * Fires when the current playlist is ended\n   */\n  ENDED: 'ended',\n  /**\n   * Fires when an error occurred during the loading of an audio/video\n   */\n  ERROR: 'error',\n  /**\n   * Fires when the browser has loaded the current frame of the audio/video\n   */\n  LOADED_DATA: 'loadeddata',\n  /**\n   * Fires when the browser has loaded meta data for the audio/video\n   */\n  LOADED_METADATA: 'loadedmetadata',\n  /**\n   * Fires when the browser starts looking for the audio/video\n   */\n  LOAD_START: 'loadstart',\n  /**\n   * Fires when the audio/video has been paused\n   */\n  PAUSE: 'pause',\n  /**\n   * Fires when the audio/video has been started or is no longer paused\n   */\n  PLAY: 'play',\n  /**\n   * Fires when the audio/video is playing after having been paused or stopped for buffering\n   */\n  PLAYING: 'playing',\n  /**\n   * Fires when the browser is downloading the audio/video\n   */\n  PROGRESS: 'progress',\n  /**\n   * Fires when the playing speed of the audio/video is changed\n   */\n  RATE_CHANGE: 'ratechange',\n  /**\n   * Fires when the user is finished moving/skipping to a new position in the audio/video\n   */\n  SEEKED: 'seeked',\n  /**\n   * Fires when the user starts moving/skipping to a new position in the audio/video\n   */\n  SEEKING: 'seeking',\n  /**\n   * Fires when the browser is trying to get media data, but data is not available\n   */\n  STALLED: 'stalled',\n  /**\n   * Fires when the browser is intentionally not getting media data\n   */\n  SUSPEND: 'suspend',\n  /**\n   * Fires when the current playback position has changed\n   */\n  TIME_UPDATE: 'timeupdate',\n  /**\n   * Fires when the volume has been changed\n   */\n  VOLUME_CHANGE: 'volumechange',\n  /**\n   * Fires when the video stops because it needs to buffer the next frame\n   */\n  WAITING: 'waiting'\n};\n\n\nvar CUSTOM_EVENTS = {\n  /**\n   * Fires when the active video track has been changed\n   */\n  VIDEO_TRACK_CHANGED: 'videotrackchanged',\n  /**\n   * Fires when the active audio track has been changed\n   */\n  AUDIO_TRACK_CHANGED: 'audiotrackchanged',\n  /**\n   * Fires when the active text track has been changed\n   */\n  TEXT_TRACK_CHANGED: 'texttrackchanged',\n  /**\n   * Fires when the player tracks have been changed\n   */\n  TRACKS_CHANGED: 'trackschanged',\n  /**\n   * Fires when the player state has been changed\n   */\n  PLAYER_STATE_CHANGED: 'playerstatechanged',\n  /**\n   * Fires on the first play\n   */\n  FIRST_PLAY: 'firstplay',\n  /**\n   * Fires when the player has selected the source to play\n   */\n  SOURCE_SELECTED: 'sourceselected'\n};\n\nvar PLAYER_EVENTS = (0, _util.merge)([HTML5_EVENTS, CUSTOM_EVENTS]);\n\nexports.PLAYER_EVENTS = PLAYER_EVENTS;\nexports.HTML5_EVENTS = HTML5_EVENTS;\nexports.CUSTOM_EVENTS = CUSTOM_EVENTS;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.registerEngine = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _eventManager = __webpack_require__(6);\n\nvar _eventManager2 = _interopRequireDefault(_eventManager);\n\nvar _fakeEvent = __webpack_require__(2);\n\nvar _fakeEvent2 = _interopRequireDefault(_fakeEvent);\n\nvar _fakeEventTarget = __webpack_require__(9);\n\nvar _fakeEventTarget2 = _interopRequireDefault(_fakeEventTarget);\n\nvar _events = __webpack_require__(7);\n\nvar _stateTypes = __webpack_require__(16);\n\nvar _stateTypes2 = _interopRequireDefault(_stateTypes);\n\nvar _util = __webpack_require__(11);\n\nvar _logger = __webpack_require__(1);\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nvar _html = __webpack_require__(19);\n\nvar _html2 = _interopRequireDefault(_html);\n\nvar _pluginManager = __webpack_require__(15);\n\nvar _pluginManager2 = _interopRequireDefault(_pluginManager);\n\nvar _stateManager = __webpack_require__(22);\n\nvar _stateManager2 = _interopRequireDefault(_stateManager);\n\nvar _trackTypes = __webpack_require__(24);\n\nvar _trackTypes2 = _interopRequireDefault(_trackTypes);\n\nvar _track = __webpack_require__(0);\n\nvar _track2 = _interopRequireDefault(_track);\n\nvar _videoTrack = __webpack_require__(5);\n\nvar _videoTrack2 = _interopRequireDefault(_videoTrack);\n\nvar _audioTrack = __webpack_require__(3);\n\nvar _audioTrack2 = _interopRequireDefault(_audioTrack);\n\nvar _textTrack = __webpack_require__(4);\n\nvar _textTrack2 = _interopRequireDefault(_textTrack);\n\nvar _defaultConfig2 = __webpack_require__(26);\n\nvar _defaultConfig3 = _interopRequireDefault(_defaultConfig2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * The HTML5 player class.\n * @classdesc\n */\nvar Player = function (_FakeEventTarget) {\n  _inherits(Player, _FakeEventTarget);\n\n  _createClass(Player, null, [{\n    key: 'registerEngine',\n\n\n    /**\n     * Register an engine in the player cache.\n     * @param {IEngine} engine - The engine to register.\n     * @static\n     * @public\n     * @returns {void}\n     */\n\n    /**\n     * The player class logger.\n     * @type {any}\n     * @static\n     * @private\n     */\n    value: function registerEngine(engine) {\n      if (!Player._engines.includes(engine)) {\n        Player._logger.debug('Engine <' + engine.id + '> has been registered successfully');\n        Player._engines.push(engine);\n      } else {\n        Player._logger.debug('Engine <' + engine.id + '> is already registered, do not register again');\n      }\n    }\n\n    /**\n     * @param {Object} config - The configuration for the player instance.\n     * @constructor\n     */\n\n    /**\n     * The available engines of the player.\n     * @type {Array<typeof IEngine>}\n     * @private\n     */\n\n    /**\n     * The plugin manager of the player.\n     * @type {PluginManager}\n     * @private\n     */\n\n    /**\n     * The event manager of the player.\n     * @type {EventManager}\n     * @private\n     */\n\n    /**\n     * The runtime configuration of the player.\n     * @type {Object}\n     * @private\n     */\n\n    /**\n     * The playback engine.\n     * @type {IEngine}\n     * @private\n     */\n\n    /**\n     * The state manager of the player.\n     * @type {StateManager}\n     * @private\n     */\n\n    /**\n     * The tracks of the player.\n     * @type {Array<Track>}\n     * @private\n     */\n\n    /**\n     * The player ready promise\n     * @type {Promise<*>}\n     * @private\n     */\n\n    /**\n     * Whether the play is the first or not\n     * @type {boolean}\n     * @private\n     */\n\n  }]);\n\n  function Player(config) {\n    _classCallCheck(this, Player);\n\n    var _this = _possibleConstructorReturn(this, (Player.__proto__ || Object.getPrototypeOf(Player)).call(this));\n\n    _this._tracks = [];\n    _this._firstPlay = true;\n    _this._stateManager = new _stateManager2.default(_this);\n    _this._pluginManager = new _pluginManager2.default();\n    _this._eventManager = new _eventManager2.default();\n    _this._readyPromise = new Promise(function (resolve, reject) {\n      _this._eventManager.listen(_this, _events.CUSTOM_EVENTS.TRACKS_CHANGED, function () {\n        resolve();\n      });\n      _this._eventManager.listen(_this, _events.HTML5_EVENTS.ERROR, reject);\n    });\n    _this.configure(config);\n    return _this;\n  }\n\n  /**\n   * Configures the player according to given configuration.\n   * @param {Object} config - The configuration for the player instance.\n   * @returns {void}\n   */\n\n\n  _createClass(Player, [{\n    key: 'configure',\n    value: function configure(config) {\n      this._config = (0, _util.merge)([config, Player._defaultConfig()]);\n      if (this._selectEngine()) {\n        this._attachMedia();\n        this._loadPlugins();\n        this._handlePlaybackConfig();\n      } else {\n        Player._logger.warn(\"No playable engine was found to play the given sources\");\n      }\n    }\n\n    /**\n     * Destroys the player.\n     * @returns {void}\n     * @public\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._engine.destroy();\n      this._eventManager.destroy();\n      this._pluginManager.destroy();\n      this._stateManager.destroy();\n      this._config = {};\n      this._tracks = [];\n      this._readyPromise = null;\n      this._firstPlay = true;\n    }\n\n    /**\n     * @returns {Object} - The default configuration of the player.\n     * @private\n     * @static\n     */\n\n  }, {\n    key: '_loadPlugins',\n\n\n    /**\n     * Loads the configured plugins.\n     * @private\n     * @returns {void}\n     */\n    value: function _loadPlugins() {\n      var plugins = this._config.plugins;\n      for (var name in plugins) {\n        this._pluginManager.load(name, this, plugins[name]);\n      }\n    }\n\n    /**\n     * Select the engine to create based on the given configured sources.\n     * @private\n     * @returns {boolean} - Whether a proper engine was found to play the given sources.\n     */\n\n  }, {\n    key: '_selectEngine',\n    value: function _selectEngine() {\n      var engineSelected = false;\n      if (this._config.sources) {\n        if (this._config.playback && this._config.playback.mediaSourceAdapterPriority) {\n          engineSelected = this._selectEngineByPriority();\n        } else {\n          engineSelected = this._selectFirstEngineWhoCanPlay();\n        }\n      }\n      return engineSelected;\n    }\n\n    /**\n     * Selects an <engine, adapter> tuple to play a source according to a given priority.\n     * @return {boolean} - Whether a proper <engine, adapter> was found to play the given sources\n     * according to the priority.\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_selectEngineByPriority',\n    value: function _selectEngineByPriority() {\n      var _this2 = this;\n\n      var mediaSourceAdapterPriority = this._config.playback.mediaSourceAdapterPriority;\n      var sources = this._config.sources;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        var _loop = function _loop() {\n          var priority = _step.value;\n\n          var engineId = priority.engine.toLowerCase();\n          var mediaSourceAdapterId = priority.mediaSourceAdapter.toLowerCase();\n          var engine = Player._engines.find(function (engine) {\n            return engine.id === engineId;\n          });\n          if (engine) {\n            var canPlayResult = engine.canPlayType(sources, mediaSourceAdapterId);\n            var canPlay = canPlayResult.canPlay;\n            var source = canPlayResult.source;\n            if (canPlay && source) {\n              _this2._loadEngine(engine, source);\n              return {\n                v: true\n              };\n            }\n          }\n        };\n\n        for (var _iterator = mediaSourceAdapterPriority[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var _ret = _loop();\n\n          if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return false;\n    }\n\n    /**\n     * Selects the first <engine, adapter> tuple that can play a source.\n     * @return {boolean} - Whether a proper <engine, adapter> was found to play the given sources.\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_selectFirstEngineWhoCanPlay',\n    value: function _selectFirstEngineWhoCanPlay() {\n      var sources = this._config.sources;\n      for (var i = 0; i < Player._engines.length; i++) {\n        var _engine = Player._engines[i];\n        var canPlayResult = _engine.canPlayType(sources, '');\n        var canPlay = canPlayResult.canPlay;\n        var source = canPlayResult.source;\n        if (canPlay && source) {\n          this._loadEngine(_engine, source);\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * Loads the selected engine.\n     * @param {IEngine} engine - The selected engine.\n     * @param {Source} source - The selected source object.\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_loadEngine',\n    value: function _loadEngine(engine, source) {\n      this.dispatchEvent(new _fakeEvent2.default(_events.CUSTOM_EVENTS.SOURCE_SELECTED, { selectedSource: source }));\n      this._engine = engine.createEngine(source, this._config);\n      if (this._config.preload === \"auto\") {\n        this.load();\n      }\n    }\n\n    /**\n     * Listen to all HTML5 defined events and trigger them on the player\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_attachMedia',\n    value: function _attachMedia() {\n      var _this3 = this;\n\n      if (this._engine) {\n        for (var playerEvent in _events.HTML5_EVENTS) {\n          this._eventManager.listen(this._engine, _events.HTML5_EVENTS[playerEvent], function (event) {\n            return _this3.dispatchEvent(event);\n          });\n        }\n        this._eventManager.listen(this._engine, _events.CUSTOM_EVENTS.VIDEO_TRACK_CHANGED, function (event) {\n          _this3._markActiveTrack(event.payload.selectedVideoTrack);\n          return _this3.dispatchEvent(event);\n        });\n        this._eventManager.listen(this._engine, _events.CUSTOM_EVENTS.AUDIO_TRACK_CHANGED, function (event) {\n          _this3._markActiveTrack(event.payload.selectedAudioTrack);\n          return _this3.dispatchEvent(event);\n        });\n        this._eventManager.listen(this._engine, _events.CUSTOM_EVENTS.TEXT_TRACK_CHANGED, function (event) {\n          _this3._markActiveTrack(event.payload.selectedTextTrack);\n          return _this3.dispatchEvent(event);\n        });\n        this._eventManager.listen(this, _events.HTML5_EVENTS.PLAY, this._onPlay.bind(this));\n      }\n    }\n  }, {\n    key: '_handlePlaybackConfig',\n    value: function _handlePlaybackConfig() {\n      if (this._config.playback) {\n        if (this._config.playback.muted) {\n          this.muted = true;\n        }\n        if (this._config.playback.autoplay) {\n          this.play();\n        }\n      }\n    }\n\n    /**\n     * Returns the tracks according to the filter. if no filter given returns the all tracks.\n     * @function getTracks\n     * @param {string} [type] - a tracks filter, should be 'video', 'audio' or 'text'.\n     * @returns {Array<Track>} - The parsed tracks.\n     * @public\n     */\n\n  }, {\n    key: 'getTracks',\n    value: function getTracks(type) {\n      return this._getTracksByType(type);\n    }\n\n    /**\n     * Returns the tracks according to the filter. if no filter given returns the all tracks.\n     * @function _getTracksByType\n     * @param {string} [type] - a tracks filter, should be 'video', 'audio' or 'text'.\n     * @returns {Array<Track>} - The parsed tracks.\n     * @private\n     */\n\n  }, {\n    key: '_getTracksByType',\n    value: function _getTracksByType(type) {\n      return !type ? this._tracks : this._tracks.filter(function (track) {\n        if (type === _trackTypes2.default.VIDEO) {\n          return track instanceof _videoTrack2.default;\n        } else if (type === _trackTypes2.default.AUDIO) {\n          return track instanceof _audioTrack2.default;\n        } else if (type === _trackTypes2.default.TEXT) {\n          return track instanceof _textTrack2.default;\n        } else {\n          return true;\n        }\n      });\n    }\n\n    /**\n     * Select a track\n     * @function selectTrack\n     * @param {Track} track - the track to select\n     * @returns {void}\n     * @public\n     */\n\n  }, {\n    key: 'selectTrack',\n    value: function selectTrack(track) {\n      if (this._engine) {\n        if (track instanceof _videoTrack2.default) {\n          this._engine.selectVideoTrack(track);\n        } else if (track instanceof _audioTrack2.default) {\n          this._engine.selectAudioTrack(track);\n        } else if (track instanceof _textTrack2.default) {\n          this._engine.selectTextTrack(track);\n        }\n      }\n    }\n\n    /**\n     * Enables adaptive bitrate switching.\n     * @function enableAdaptiveBitrate\n     * @returns {void}\n     * @public\n     */\n\n  }, {\n    key: 'enableAdaptiveBitrate',\n    value: function enableAdaptiveBitrate() {\n      if (this._engine) {\n        this._engine.enableAdaptiveBitrate();\n      }\n    }\n\n    /**\n     * Mark the selected track as active\n     * @function _markActiveTrack\n     * @param {Track} track - the track to mark\n     * @returns {void}\n     * @private\n     */\n\n  }, {\n    key: '_markActiveTrack',\n    value: function _markActiveTrack(track) {\n      var type = void 0;\n      if (track instanceof _videoTrack2.default) {\n        type = _trackTypes2.default.VIDEO;\n      } else if (track instanceof _audioTrack2.default) {\n        type = _trackTypes2.default.AUDIO;\n      } else if (track instanceof _textTrack2.default) {\n        type = _trackTypes2.default.TEXT;\n      }\n      if (type) {\n        var tracks = this.getTracks(type);\n        for (var i = 0; i < tracks.length; i++) {\n          tracks[i].active = track.index === i;\n        }\n      }\n    }\n\n    /**\n     * @function _onPlay\n     * @return {void}\n     * @private\n     */\n\n  }, {\n    key: '_onPlay',\n    value: function _onPlay() {\n      if (this._firstPlay) {\n        this._firstPlay = false;\n        this.dispatchEvent(new _fakeEvent2.default(_events.CUSTOM_EVENTS.FIRST_PLAY));\n      }\n    }\n\n    /**\n     * Get the player config.\n     * @returns {Object} - The player configuration.\n     * @public\n     */\n\n  }, {\n    key: 'ready',\n\n\n    //  <editor-fold desc=\"Playback Interface\">\n    /**\n     * The player readiness\n     * @public\n     * @returns {Promise<*>} - The ready promise\n     */\n    value: function ready() {\n      return this._readyPromise ? this._readyPromise : Promise.resolve();\n    }\n\n    /**\n     * Load media\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      var _this4 = this;\n\n      if (this._engine) {\n        this._engine.load().then(function (data) {\n          _this4._tracks = data.tracks;\n          _this4.dispatchEvent(new _fakeEvent2.default(_events.CUSTOM_EVENTS.TRACKS_CHANGED, { tracks: _this4._tracks }));\n        }).catch(function (error) {\n          _this4.dispatchEvent(new _fakeEvent2.default(_events.HTML5_EVENTS.ERROR, error));\n        });\n      }\n    }\n\n    /**\n     * Start/resume playback.\n     * @returns {void}\n     * @public\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      var _this5 = this;\n\n      if (this._engine) {\n        if (this._engine.src) {\n          this._engine.play();\n        } else {\n          this.load();\n          this.ready().then(function () {\n            _this5._engine.play();\n          });\n        }\n      }\n    }\n\n    /**\n     * Pause playback.\n     * @returns {void}\n     * @public\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this._engine) {\n        return this._engine.pause();\n      }\n    }\n\n    /**\n     * Set the current time in seconds.\n     * @param {Number} to - The number to set in seconds.\n     * @public\n     */\n\n  }, {\n    key: 'buffered',\n    value: function buffered() {}\n\n    /**\n     * Set player muted state.\n     * @param {boolean} mute - The mute value.\n     * @returns {void}\n     * @public\n     */\n\n  }, {\n    key: 'config',\n    get: function get() {\n      return this._config;\n    }\n\n    /**\n     * Set player session id\n     * @param {string} sessionId - the player session id to set\n     * @returns {void}\n     * @public\n     */\n\n  }, {\n    key: 'sessionId',\n    set: function set(sessionId) {\n      this._config.session = this._config.session || {};\n      this._config.session.id = sessionId;\n    }\n  }, {\n    key: 'currentTime',\n    set: function set(to) {\n      if (this._engine) {\n        if ((0, _util.isNumber)(to)) {\n          var boundedTo = to;\n          if (to < 0) {\n            boundedTo = 0;\n          }\n          if (boundedTo > this._engine.duration) {\n            boundedTo = this._engine.duration;\n          }\n          this._engine.currentTime = boundedTo;\n        }\n      }\n    }\n\n    /**\n     * Get the current time in seconds.\n     * @returns {?Number} - The playback current time.\n     * @public\n     */\n    ,\n    get: function get() {\n      if (this._engine) {\n        return this._engine.currentTime;\n      }\n    }\n\n    /**\n     * Get the duration in seconds.\n     * @returns {?Number} - The playback duration.\n     * @public\n     */\n\n  }, {\n    key: 'duration',\n    get: function get() {\n      if (this._engine) {\n        return this._engine.duration;\n      }\n    }\n\n    /**\n     * Set playback volume.\n     * @param {Number} vol - The volume to set.\n     * @returns {void}\n     * @public\n     */\n\n  }, {\n    key: 'volume',\n    set: function set(vol) {\n      if (this._engine) {\n        if ((0, _util.isFloat)(vol)) {\n          var boundedVol = vol;\n          if (boundedVol < 0) {\n            boundedVol = 0;\n          }\n          if (boundedVol > 1) {\n            boundedVol = 1;\n          }\n          this._engine.volume = boundedVol;\n        }\n      }\n    }\n\n    /**\n     * Get playback volume.\n     * @returns {?Number} - The playback volume.\n     * @public\n     */\n    ,\n    get: function get() {\n      if (this._engine) {\n        return this._engine.volume;\n      }\n    }\n\n    // </editor-fold>\n\n    // <editor-fold desc=\"State\">\n    /**\n     * Get paused state.\n     * @returns {?boolean} - Whether the video is paused or not.\n     * @public\n     */\n\n  }, {\n    key: 'paused',\n    get: function get() {\n      if (this._engine) {\n        return this._engine.paused;\n      }\n    }\n\n    /**\n     * Get seeking state.\n     * @returns {?boolean} - Whether the video is seeking or not.\n     * @public\n     */\n\n  }, {\n    key: 'seeking',\n    get: function get() {\n      if (this._engine) {\n        return this._engine.seeking;\n      }\n    }\n  }, {\n    key: 'muted',\n    set: function set(mute) {\n      if (this._engine) {\n        this._engine.muted = mute;\n      }\n    }\n\n    /**\n     * Get player muted state.\n     * @returns {?boolean} - Whether the video is muted or not.\n     * @public\n     */\n    ,\n    get: function get() {\n      if (this._engine) {\n        return this._engine.muted;\n      }\n    }\n\n    /**\n     * Get the player source.\n     * @returns {?string} - The current source of the player.\n     * @public\n     */\n\n  }, {\n    key: 'src',\n    get: function get() {\n      if (this._engine) {\n        return this._engine.src;\n      }\n    }\n\n    /**\n     * Get the player events.\n     * @returns {Object} - The events of the player.\n     * @public\n     */\n\n  }, {\n    key: 'Event',\n    get: function get() {\n      return _events.PLAYER_EVENTS;\n    }\n\n    /**\n     * Get the player states.\n     * @returns {Object} - The states of the player.\n     * @public\n     */\n\n  }, {\n    key: 'State',\n    get: function get() {\n      return _stateTypes2.default;\n    }\n\n    /**\n     * Get the player tracks types.\n     * @returns {Object} - The tracks types of the player.\n     * @public\n     */\n\n  }, {\n    key: 'Track',\n    get: function get() {\n      return _trackTypes2.default;\n    }\n\n    // </editor-fold>\n\n  }], [{\n    key: '_defaultConfig',\n    value: function _defaultConfig() {\n      return _defaultConfig3.default;\n    }\n  }]);\n\n  return Player;\n}(_fakeEventTarget2.default);\n\nPlayer._logger = _logger2.default.getLogger('Player');\nPlayer._engines = [_html2.default];\nexports.default = Player;\n\n\nvar registerEngine = Player.registerEngine;\nexports.registerEngine = registerEngine;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _fakeEvent = __webpack_require__(2);\n\nvar _fakeEvent2 = _interopRequireDefault(_fakeEvent);\n\nvar _multiMap = __webpack_require__(17);\n\nvar _multiMap2 = _interopRequireDefault(_multiMap);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * A work-alike for EventTarget.  Only DOM elements may be true EventTargets,\n * but this can be used as a base class to provide event dispatch to non-DOM\n * classes.  Only FakeEvents should be dispatched.\n *\n * @struct\n * @constructor\n * @implements {EventTarget}\n * @export\n */\nvar FakeEventTarget = function () {\n  function FakeEventTarget() {\n    _classCallCheck(this, FakeEventTarget);\n\n    /**\n     * @private {!MultiMap.<FakeEventTarget.ListenerType>}\n     */\n    this._listeners = new _multiMap2.default();\n\n    /**\n     * The target of all dispatched events.  Defaults to |this|.\n     * @type {EventTarget}\n     */\n    this.dispatchTarget = this;\n  }\n\n  /**\n   * Add an event listener to this object.\n   *\n   * @param {string} type The event type to listen for.\n   * @param {FakeEventTarget.ListenerType} listener The callback or\n   *   listener object to invoke.\n   * @param {boolean=} opt_capturing Ignored.  FakeEventTargets do not have\n   *   parents, so events neither capture nor bubble.\n   * @override\n   * @export\n   */\n\n\n  _createClass(FakeEventTarget, [{\n    key: 'addEventListener',\n    value: function addEventListener(type, listener) {\n      this._listeners.push(type, listener);\n    }\n\n    /**\n     * Remove an event listener from this object.\n     *\n     * @param {string} type The event type for which you wish to remove a listener.\n     * @param {FakeEventTarget.ListenerType} listener The callback or\n     *   listener object to remove.\n     * @param {boolean=} opt_capturing Ignored.  FakeEventTargets do not have\n     *   parents, so events neither capture nor bubble.\n     * @override\n     * @export\n     */\n\n  }, {\n    key: 'removeEventListener',\n    value: function removeEventListener(type, listener) {\n      this._listeners.remove(type, listener);\n    }\n\n    /**\n     * Dispatch an event from this object.\n     *\n     * @param {!Event} event The event to be dispatched from this object.\n     * @return {boolean} True if the default action was prevented.\n     * @override\n     * @export\n     */\n\n  }, {\n    key: 'dispatchEvent',\n    value: function dispatchEvent(event) {\n      // In many browsers, it is complex to overwrite properties of actual Events.\n      // Here we expect only to dispatch FakeEvents, which are simpler.\n      //goog.asserts.assert(event instanceof FakeEvent,\n      //    'FakeEventTarget can only dispatch FakeEvents!');\n\n      var list = this._listeners.get(event.type) || [];\n\n      for (var i = 0; i < list.length; ++i) {\n        // Do this every time, since events can be re-dispatched from handlers.\n        event.target = this.dispatchTarget;\n        event.currentTarget = this.dispatchTarget;\n\n        var listener = list[i];\n        try {\n          if (listener.handleEvent) {\n            listener.handleEvent(event);\n          } else {\n            listener.call(this, event);\n          }\n        } catch (exception) {\n          // Exceptions during event handlers should not affect the caller,\n          // but should appear on the console as uncaught, according to MDN:\n          // http://goo.gl/N6Ff27\n          // TODO: add log\n        }\n\n        if (event.stopped) {\n          break;\n        }\n      }\n\n      return event.defaultPrevented;\n    }\n  }]);\n\n  return FakeEventTarget;\n}();\n\n/**\n * These are the listener types defined in the closure extern for EventTarget.\n * @typedef {EventListener|function(!Event):(boolean|undefined)}\n */\n\n\nexports.default = FakeEventTarget;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PlayerError = function () {\n  function PlayerError(error, param) {\n    _classCallCheck(this, PlayerError);\n\n    this.name = error.name;\n    this.message = error.message(param);\n  }\n\n  _createClass(PlayerError, [{\n    key: \"getError\",\n    value: function getError() {\n      return {\n        name: this.name,\n        message: this.message\n      };\n    }\n  }]);\n\n  return PlayerError;\n}();\n\nPlayerError.TYPE = {\n  NOT_REGISTERED_PLUGIN: {\n    name: \"PluginNotRegisteredException\",\n    message: function message(name) {\n      return \"Cannot load \" + name + \" plugin. Name not found in the registry\";\n    }\n  },\n  NOT_VALID_HANDLER: {\n    name: \"PluginHandlerIsNotValidException\",\n    message: function message() {\n      return \"To activate plugin you must provide a class derived from BasePlugin\";\n    }\n  },\n  NOT_IMPLEMENTED_METHOD: {\n    name: \"NotImplementedException\",\n    message: function message(method) {\n      return method + \" method not implemented\";\n    }\n  }\n};\nexports.default = PlayerError;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * @param {number} n - A certain number\n * @returns {boolean} - If the input is a number\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction isNumber(n) {\n  return Number(n) === n;\n}\n\n/**\n * @param {number} n - A certain number\n * @returns {boolean} - If the input is an integer\n */\nfunction isInt(n) {\n  return isNumber(n) && n % 1 === 0;\n}\n\n/**\n * @param {number} n - A certain number\n * @returns {boolean} - If the input is a float\n */\nfunction isFloat(n) {\n  return isNumber(n) && n % 1 !== 0;\n}\n\n/**\n * @param {Array<Object>} objects - The objects to merge\n * @returns {Object} - The merged object.\n */\nfunction merge(objects) {\n  var target = {};\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = objects[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var obj = _step.value;\n\n      Object.assign(target, obj);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return target;\n}\n\nexports.isNumber = isNumber;\nexports.isInt = isInt;\nexports.isFloat = isFloat;\nexports.merge = merge;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _fakeEvent = __webpack_require__(2);\n\nvar _fakeEvent2 = _interopRequireDefault(_fakeEvent);\n\nvar _fakeEventTarget = __webpack_require__(9);\n\nvar _fakeEventTarget2 = _interopRequireDefault(_fakeEventTarget);\n\nvar _playerError = __webpack_require__(10);\n\nvar _playerError2 = _interopRequireDefault(_playerError);\n\nvar _events = __webpack_require__(7);\n\nvar _logger = __webpack_require__(1);\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nvar _track = __webpack_require__(0);\n\nvar _track2 = _interopRequireDefault(_track);\n\nvar _videoTrack = __webpack_require__(5);\n\nvar _videoTrack2 = _interopRequireDefault(_videoTrack);\n\nvar _audioTrack = __webpack_require__(3);\n\nvar _audioTrack2 = _interopRequireDefault(_audioTrack);\n\nvar _textTrack = __webpack_require__(4);\n\nvar _textTrack2 = _interopRequireDefault(_textTrack);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n/* eslint-disable no-unused-vars */\n\n\nvar BaseMediaSourceAdapter = function (_FakeEventTarget) {\n  _inherits(BaseMediaSourceAdapter, _FakeEventTarget);\n\n  _createClass(BaseMediaSourceAdapter, null, [{\n    key: 'isSupported',\n\n\n    /**\n     * Checks if the media source adapter is supported.\n     * @function isSupported\n     * @returns {boolean} - Whether the media source adapter is supported.\n     * @static\n     */\n\n\n    /**\n     * The adapter config.\n     * @member {Object} _config\n     * @private\n     */\n\n\n    /**\n     * The source object.\n     * @member {Source} _sourceObj\n     * @private\n     */\n\n\n    /**\n     * The dom video element.\n     * @member {HTMLVideoElement} _videoElement\n     * @private\n     */\n\n    /**\n     * Passing the custom events to the actual media source adapter.\n     * @static\n     */\n    value: function isSupported() {\n      return true;\n    }\n\n    /**\n     * Factory method to create media source adapter.\n     * @function createAdapter\n     * @param {HTMLVideoElement} videoElement - The video element that the media source adapter work with.\n     * @param {Object} source - The source Object.\n     * @param {Object} config - The media source adapter configuration.\n     * @returns {IMediaSourceAdapter} - New instance of the run time media source adapter.\n     * @static\n     */\n\n\n    /**\n     * Passing the getLogger function to the actual media source adapter.\n     * @type {Function}\n     * @static\n     */\n\n  }, {\n    key: 'createAdapter',\n    value: function createAdapter(videoElement, source, config) {\n      return new this(videoElement, source, config);\n    }\n\n    /**\n     * @constructor\n     * @param {HTMLVideoElement} videoElement - The video element which bind to media source adapter.\n     * @param {Source} source - The source object.\n     * @param {Object} config - The media source adapter configuration.\n     */\n\n  }]);\n\n  function BaseMediaSourceAdapter(videoElement, source, config) {\n    _classCallCheck(this, BaseMediaSourceAdapter);\n\n    var _this = _possibleConstructorReturn(this, (BaseMediaSourceAdapter.__proto__ || Object.getPrototypeOf(BaseMediaSourceAdapter)).call(this));\n\n    _this._videoElement = videoElement;\n    _this._sourceObj = source;\n    _this._config = config;\n    return _this;\n  }\n\n  /**\n   * Destroys the media source adapter.\n   * @function destroy\n   * @returns {void}\n   */\n\n\n  _createClass(BaseMediaSourceAdapter, [{\n    key: 'destroy',\n    value: function destroy() {\n      this._sourceObj = null;\n      this._config = null;\n    }\n\n    /**\n     * Triggers the appropriate track changed event.\n     * @param {Track} track - The selected track.\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_onTrackChanged',\n    value: function _onTrackChanged(track) {\n      if (track instanceof _videoTrack2.default) {\n        this._trigger(BaseMediaSourceAdapter.CustomEvents.VIDEO_TRACK_CHANGED, { selectedVideoTrack: track });\n      } else if (track instanceof _audioTrack2.default) {\n        this._trigger(BaseMediaSourceAdapter.CustomEvents.AUDIO_TRACK_CHANGED, { selectedAudioTrack: track });\n      } else if (track instanceof _textTrack2.default) {\n        this._trigger(BaseMediaSourceAdapter.CustomEvents.TEXT_TRACK_CHANGED, { selectedTextTrack: track });\n      }\n    }\n\n    /**\n     * Dispatch an adapter event forward.\n     * @param {string} name - The name of the event.\n     * @param {Object} payload - The event payload.\n     * @returns {void}\n     */\n\n  }, {\n    key: '_trigger',\n    value: function _trigger(name, payload) {\n      this.dispatchEvent(new _fakeEvent2.default(name, payload));\n    }\n\n    /** Must implemented methods by the derived media source adapter **/\n\n  }, {\n    key: 'load',\n    value: function load() {\n      throw new _playerError2.default(_playerError2.default.TYPE.NOT_IMPLEMENTED_METHOD, 'load').getError();\n    }\n  }, {\n    key: 'selectVideoTrack',\n    value: function selectVideoTrack(videoTrack) {\n      throw new _playerError2.default(_playerError2.default.TYPE.NOT_IMPLEMENTED_METHOD, 'selectVideoTrack').getError();\n    }\n  }, {\n    key: 'selectAudioTrack',\n    value: function selectAudioTrack(audioTrack) {\n      throw new _playerError2.default(_playerError2.default.TYPE.NOT_IMPLEMENTED_METHOD, 'selectAudioTrack').getError();\n    }\n  }, {\n    key: 'selectTextTrack',\n    value: function selectTextTrack(textTrack) {\n      throw new _playerError2.default(_playerError2.default.TYPE.NOT_IMPLEMENTED_METHOD, 'selectTextTrack').getError();\n    }\n  }, {\n    key: 'enableAdaptiveBitrate',\n    value: function enableAdaptiveBitrate() {\n      throw new _playerError2.default(_playerError2.default.TYPE.NOT_IMPLEMENTED_METHOD, 'enableAdaptiveBitrate').getError();\n    }\n  }, {\n    key: 'src',\n    get: function get() {\n      throw new _playerError2.default(_playerError2.default.TYPE.NOT_IMPLEMENTED_METHOD, 'get src').getError();\n    }\n  }], [{\n    key: 'canPlayType',\n    value: function canPlayType(mimeType) {\n      throw new _playerError2.default(_playerError2.default.TYPE.NOT_IMPLEMENTED_METHOD, 'static canPlayType').getError();\n    }\n  }]);\n\n  return BaseMediaSourceAdapter;\n}(_fakeEventTarget2.default);\n\nBaseMediaSourceAdapter.CustomEvents = _events.CUSTOM_EVENTS;\nBaseMediaSourceAdapter.getLogger = _logger2.default.getLogger;\nexports.default = BaseMediaSourceAdapter;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.registerMediaSourceAdapter = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _nativeAdapter = __webpack_require__(20);\n\nvar _nativeAdapter2 = _interopRequireDefault(_nativeAdapter);\n\nvar _logger = __webpack_require__(1);\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Media source provider\n * @classdesc\n */\nvar MediaSourceProvider = function () {\n  function MediaSourceProvider() {\n    _classCallCheck(this, MediaSourceProvider);\n  }\n\n  _createClass(MediaSourceProvider, null, [{\n    key: 'register',\n\n\n    /**\n     * Add a media source adapter to the registry.\n     * @function register\n     * @param {IMediaSourceAdapter} mediaSourceAdapter - The media source adapter to register.\n     * @static\n     * @returns {void}\n     */\n\n    /**\n     * The media source adapter registry.\n     * @member {Array<IMediaSourceAdapter>} _mediaSourceAdapters\n     * @static\n     * @private\n     */\n    value: function register(mediaSourceAdapter) {\n      if (mediaSourceAdapter) {\n        if (!MediaSourceProvider._mediaSourceAdapters.includes(mediaSourceAdapter)) {\n          MediaSourceProvider._logger.debug('Adapter <' + mediaSourceAdapter.id + '> has been registered successfully');\n          MediaSourceProvider._mediaSourceAdapters.push(mediaSourceAdapter);\n        } else {\n          MediaSourceProvider._logger.debug('Adapter <' + mediaSourceAdapter.id + '> is already registered, do not register again');\n        }\n      }\n    }\n\n    /**\n     * Remove a media source adapter from the registry.\n     * @function unRegister\n     * @param {IMediaSourceAdapter} mediaSourceAdapter - The media source adapter to unRegister.\n     * @static\n     * @returns {void}\n     */\n\n    /**\n     * The selected adapter for playback.\n     * @type {null|IMediaSourceAdapter}\n     * @static\n     * @private\n     */\n\n    /**\n     * The logger of the media source provider.\n     * @member {any} _logger\n     * @static\n     * @private\n     */\n\n  }, {\n    key: 'unRegister',\n    value: function unRegister(mediaSourceAdapter) {\n      var index = MediaSourceProvider._mediaSourceAdapters.indexOf(mediaSourceAdapter);\n      if (index > -1) {\n        MediaSourceProvider._logger.debug('Unregistered <' + mediaSourceAdapter.id + '> adapter');\n        MediaSourceProvider._mediaSourceAdapters.splice(index, 1);\n      }\n    }\n\n    /**\n     * Checks if one of the registered media source adapters can play a given source with\n     * priority to a given media source adapter (optional).\n     * @function canPlayType\n     * @param {Array<Source>} sources - The sources to check.\n     * @param {string} priority - Preferred media source adapter id (optional).\n     * @static\n     * @public\n     * @returns {CanPlayResult} - An object which includes whether one of the adapters can play a given source.\n     */\n\n  }, {\n    key: 'canPlayType',\n    value: function canPlayType(sources, priority) {\n      if (priority) {\n        var mediaSourceAdapter = MediaSourceProvider._mediaSourceAdapters.find(function (mediaSourceAdapter) {\n          return mediaSourceAdapter.id.toLowerCase().startsWith(priority);\n        });\n        if (mediaSourceAdapter) {\n          for (var i = 0; i < sources.length; i++) {\n            var source = sources[i];\n            var mimeType = source.mimetype;\n            if (mediaSourceAdapter.canPlayType(mimeType)) {\n              MediaSourceProvider._selectedAdapter = mediaSourceAdapter;\n              return { canPlay: true, source: source };\n            }\n          }\n        }\n        return { canPlay: false, source: null };\n      } else {\n        for (var _i = 0; _i < MediaSourceProvider._mediaSourceAdapters.length; _i++) {\n          var _mediaSourceAdapter = MediaSourceProvider._mediaSourceAdapters[_i];\n          for (var j = 0; j < sources.length; j++) {\n            var _source = sources[j];\n            var _mimeType = _source.mimetype;\n            if (_mediaSourceAdapter.canPlayType(_mimeType)) {\n              MediaSourceProvider._selectedAdapter = _mediaSourceAdapter;\n              return { canPlay: true, source: _source };\n            }\n          }\n        }\n        return { canPlay: false, source: null };\n      }\n    }\n\n    /**\n     * Get the appropriate media source adapter to the video source.\n     * @function getMediaSourceAdapter\n     * @param {HTMLVideoElement} videoElement - The video element which requires adapter for a given mimeType.\n     * @param {Source} source - The selected source object.\n     * @param {Object} config - The player configuration.\n     * @returns {IMediaSourceAdapter|null} - The selected media source adapter, or null if such doesn't exists.\n     * @static\n     */\n\n  }, {\n    key: 'getMediaSourceAdapter',\n    value: function getMediaSourceAdapter(videoElement, source, config) {\n      if (videoElement && source && config) {\n        return MediaSourceProvider._selectedAdapter ? MediaSourceProvider._selectedAdapter.createAdapter(videoElement, source, config) : null;\n      }\n      return null;\n    }\n  }]);\n\n  return MediaSourceProvider;\n}();\n\nMediaSourceProvider._logger = _logger2.default.getLogger('MediaSourceProvider');\nMediaSourceProvider._mediaSourceAdapters = [_nativeAdapter2.default];\nMediaSourceProvider._selectedAdapter = null;\nexports.default = MediaSourceProvider;\n\n\nvar registerMediaSourceAdapter = MediaSourceProvider.register;\nexports.registerMediaSourceAdapter = registerMediaSourceAdapter;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _player = __webpack_require__(8);\n\nvar _player2 = _interopRequireDefault(_player);\n\nvar _logger = __webpack_require__(1);\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nvar _util = __webpack_require__(11);\n\nvar _eventManager = __webpack_require__(6);\n\nvar _eventManager2 = _interopRequireDefault(_eventManager);\n\nvar _playerError = __webpack_require__(10);\n\nvar _playerError2 = _interopRequireDefault(_playerError);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/** The BasePlugin responsible to implement the plugin interface.\n * Contains several default implementations.\n * Other plugins should extend this class.\n * @classdesc\n */\nvar BasePlugin = function () {\n  _createClass(BasePlugin, null, [{\n    key: 'createPlugin',\n\n\n    /**\n     * Factory method to create the actual plugin.\n     * @param {string} name - The plugin name\n     * @param {Player} player - The player reference\n     * @param {Object} config - The plugin configuration\n     * @returns {BasePlugin} - New runtime plugin instance\n     * @static\n     * @public\n     */\n\n    /**\n     * The event manager of the plugin.\n     * @member\n     */\n\n    /**\n     * The logger of the plugin.\n     * @member\n     */\n\n    /**\n     * The runtime configuration of the plugin.\n     * @member\n     */\n    value: function createPlugin(name, player) {\n      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      return new this(name, player, config);\n    }\n\n    /**\n     * Returns under what conditions the plugin is valid.\n     * Plugin must implement this method.\n     * @returns {boolean} - Whether the plugin is valid and can be initiated. Default implementation is true\n     * @static\n     * @public\n     * @abstract\n     */\n\n    /**\n     * The default configuration of the plugin.\n     * Inherited plugins should override this property.\n     * @type {Object}\n     * @static\n     * @member\n     */\n\n    /**\n     * Reference to the actual player.\n     * @member\n     */\n\n    /**\n     * The name of the plugin.\n     * @member\n     */\n\n  }, {\n    key: 'isValid',\n    value: function isValid() {\n      throw new _playerError2.default(_playerError2.default.TYPE.NOT_IMPLEMENTED_METHOD, 'isValid()').getError();\n    }\n\n    /**\n     * constructor\n     * @param {string} name - The plugin name\n     * @param {Player} player - The player reference\n     * @param {Object} config - The plugin configuration\n     * @constructor\n     * @private\n     */\n\n  }]);\n\n  function BasePlugin(name, player, config) {\n    _classCallCheck(this, BasePlugin);\n\n    this.name = name;\n    this.player = player;\n    this.eventManager = new _eventManager2.default();\n    this.logger = _logger2.default.getLogger(this.name);\n    this.config = (0, _util.merge)([this.constructor.defaultConfig, config]);\n  }\n\n  /**\n   * Getter for the configuration of the plugin.\n   * @param {string} attr - The key in the plugin configuration (optional).\n   * @returns {*} - If attribute is provided, returns its value. Else, Returns the config of the plugin.\n   * @public\n   */\n\n\n  _createClass(BasePlugin, [{\n    key: 'getConfig',\n    value: function getConfig(attr) {\n      if (attr) {\n        return this.config[attr];\n      }\n      return this.config;\n    }\n\n    /**\n     * Updates the config of the plugin.\n     * @param {Object} update - The updated configuration.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'updateConfig',\n    value: function updateConfig(update) {\n      this.config = (0, _util.merge)([this.config, update]);\n    }\n\n    /**\n     * Runs the destroy logic of the plugin.\n     * plugin must implement this method.\n     * @public\n     * @abstract\n     * @returns {void}\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      throw new _playerError2.default(_playerError2.default.TYPE.NOT_IMPLEMENTED_METHOD, 'destroy()').getError();\n    }\n\n    /**\n     * Getter for the plugin's name.\n     * @returns {string} - The name of the plugin.\n     * @public\n     */\n\n  }, {\n    key: 'getName',\n    value: function getName() {\n      return this.name;\n    }\n  }]);\n\n  return BasePlugin;\n}();\n\nBasePlugin.defaultConfig = {};\nexports.default = BasePlugin;\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.registerPlugin = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _basePlugin = __webpack_require__(14);\n\nvar _basePlugin2 = _interopRequireDefault(_basePlugin);\n\nvar _playerError = __webpack_require__(10);\n\nvar _playerError2 = _interopRequireDefault(_playerError);\n\nvar _player = __webpack_require__(8);\n\nvar _player2 = _interopRequireDefault(_player);\n\nvar _logger = __webpack_require__(1);\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * The logger of the PluginManager class.\n * @private\n * @const\n */\nvar logger = _logger2.default.getLogger(\"PluginManager\");\n\n/** The PluginManager responsible for register plugins definitions and store plugins instances.\n * @classdesc\n */\n\nvar PluginManager = function () {\n  function PluginManager() {\n    _classCallCheck(this, PluginManager);\n\n    this._plugins = new Map();\n  }\n  /**\n   * The registry of the plugins.\n   * Maps plugin's name to his class.\n   * @type {Map}\n   * @static\n   * @private\n   */\n\n  /**\n   * The active plugins in the player.\n   * Maps plugin's name to his instance.\n   * @type {Map}\n   * @private\n   */\n\n\n  _createClass(PluginManager, [{\n    key: 'load',\n\n\n    /**\n     * Creates and store new instance of the plugin in case isValid() of the plugin returns true.\n     * @param {string} name - The plugin name\n     * @param {Player} player - The player reference\n     * @param {Object} [config={}] - The plugin configuration\n     * @returns {boolean} - Whether the plugin load was successful\n     * @public\n     */\n    value: function load(name, player) {\n      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (!PluginManager._registry.has(name)) {\n        throw new _playerError2.default(_playerError2.default.TYPE.NOT_REGISTERED_PLUGIN, name).getError();\n      }\n      var pluginClass = PluginManager._registry.get(name);\n      if (pluginClass != null && pluginClass.isValid()) {\n        this._plugins.set(name, pluginClass.createPlugin(name, player, config));\n        logger.debug('Plugin <' + name + '> has been loaded');\n        return true;\n      }\n      logger.debug('Plugin <' + name + '> isn\\'t loaded, isValid()=false');\n      return false;\n    }\n\n    /**\n     * Iterates over all the plugins and calls private _destroy.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._plugins.forEach(this._destroy.bind(this));\n    }\n\n    /**\n     * Calls destroy() method of the plugin's impl.\n     * @param {BasePlugin} plugin - The plugin instance\n     * @param {string} name - The plugin name\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_destroy',\n    value: function _destroy(plugin, name) {\n      plugin.destroy();\n      this._plugins.delete(name);\n    }\n\n    /**\n     * Returns the plugin's instance.\n     * @param {string} name - The plugin name\n     * @returns {BasePlugin} - The plugin instance\n     * @public\n     */\n\n  }, {\n    key: 'get',\n    value: function get(name) {\n      return this._plugins.get(name);\n    }\n  }], [{\n    key: 'register',\n\n\n    /**\n     * Writes the plugin in the registry.\n     * Maps: plugin name -> plugin class.\n     * @param {string} name - The plugin name\n     * @param {Function} handler - The plugin class\n     * @returns {boolean} - If the registration request succeeded\n     * @static\n     * @public\n     */\n    value: function register(name, handler) {\n      if (typeof handler !== 'function' || handler.prototype instanceof _basePlugin2.default === false) {\n        throw new _playerError2.default(_playerError2.default.TYPE.NOT_VALID_HANDLER).getError();\n      }\n      if (!PluginManager._registry.has(name)) {\n        PluginManager._registry.set(name, handler);\n        logger.debug('Plugin <' + name + '> has been registered successfully');\n        return true;\n      }\n      logger.debug('Plugin <' + name + '> is already registered, do not register again');\n      return false;\n    }\n\n    /**\n     * Removes the plugin from the registry.\n     * @param {string} name - The plugin name\n     * @static\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'unRegister',\n    value: function unRegister(name) {\n      if (PluginManager._registry.has(name)) {\n        PluginManager._registry.delete(name);\n        logger.debug('Unregistered <' + name + '> plugin.');\n      }\n    }\n  }]);\n\n  return PluginManager;\n}();\n\n/**\n * Export the register method.\n * @type {function}\n * @constant\n */\n\n\nPluginManager._registry = new Map();\nexports.default = PluginManager;\nvar registerPlugin = PluginManager.register;\nexports.registerPlugin = registerPlugin;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar PLAYER_STATE_TYPES = {\n  IDLE: \"idle\",\n  LOADING: \"loading\",\n  PLAYING: \"playing\",\n  PAUSED: \"paused\",\n  BUFFERING: \"buffering\"\n};\n\nexports.default = PLAYER_STATE_TYPES;\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * A simple multimap template.\n * @constructor\n * @struct\n * @template T\n */\nvar MultiMap = function () {\n  function MultiMap() {\n    _classCallCheck(this, MultiMap);\n\n    /** @private {!Object.<string, !Array.<T>>} */\n    this._map = new Map();\n  }\n\n  /**\n   * Add a key, value pair to the map.\n   * @param {string} key -\n   * @param {T} value  -\n   * @returns {void}\n   */\n\n\n  _createClass(MultiMap, [{\n    key: \"push\",\n    value: function push(key, value) {\n      if (this._map.has(key)) {\n        var list = this._map.get(key);\n        if (Array.isArray(list)) {\n          list.push(value);\n          this._map.set(key, list);\n        }\n      } else {\n        this._map.set(key, [value]);\n      }\n    }\n\n    /**\n     * Set an array of values for the key, overwriting any previous data.\n     * @param {string} key -\n     * @param {!Array.<T>} values -\n     * @returns {void}\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(key, values) {\n      this._map.set(key, values);\n    }\n\n    /**\n     * Check for a key.\n     * @param {string} key -\n     * @return {boolean} true if the key exists.\n     */\n\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      return this._map.has(key);\n    }\n\n    /**\n     * Get a list of values by key.\n     * @param {string} key -\n     * @return {Array.<T>} or null if no suZch key exists.\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      var list = this._map.get(key);\n      // slice() clones the list so that it and the map can each be modified\n      // without affecting the other.\n      return list ? list.slice() : [];\n    }\n\n    /**\n     * Get a list of all values.\n     * @returns {!Array.<T>} -\n     */\n\n  }, {\n    key: \"getAll\",\n    value: function getAll() {\n      var list = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this._map.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var value = _step.value;\n\n          list = list.concat(value);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return list;\n    }\n\n    /**\n     * Remove a specific value, if it exists.\n     * @param {string} key -\n     * @param {T} value -\n     * @returns {void}\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(key, value) {\n      if (!this._map.has(key)) return;\n      var list = this._map.get(key);\n      if (Array.isArray(list)) {\n        for (var i = 0; i < list.length; ++i) {\n          if (list[i] == value) {\n            list.splice(i, 1);\n            --i;\n          }\n        }\n      }\n    }\n\n    /**\n     * Get all keys from the multimap.\n     * @return {!Array.<string>}\n     */\n    // eslint-disable-next-line no-undef\n\n  }, {\n    key: \"keys\",\n    value: function keys() {\n      return this._map.keys();\n    }\n\n    /**\n     * Clear all keys and values from the multimap.\n     * @returns {void}\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._map.clear();\n    }\n  }]);\n\n  return MultiMap;\n}();\n\nexports.default = MultiMap;\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"name\": \"playkit-js\",\n\t\"version\": \"0.2.0\",\n\t\"main\": \"dist/playkit.js\",\n\t\"scripts\": {\n\t\t\"clean\": \"rm -rf ./dist\",\n\t\t\"prebuild\": \"npm run clean\",\n\t\t\"build:prod\": \"NODE_ENV=production webpack\",\n\t\t\"build\": \"webpack\",\n\t\t\"dev\": \"webpack --progress --colors --watch\",\n\t\t\"test\": \"NODE_ENV=test karma start --color\",\n\t\t\"test:chrome\": \"NODE_ENV=test karma start --color --browsers Chrome\",\n\t\t\"test:chrome:dots\": \"NODE_ENV=test karma start --color --browsers Chrome --reporters dots\",\n\t\t\"test:firefox\": \"NODE_ENV=test karma start --color --browsers Firefox\",\n\t\t\"test:safari\": \"NODE_ENV=test karma start --color --browsers Safari\",\n\t\t\"test:watch\": \"NODE_ENV=test karma start --color --auto-watch\",\n\t\t\"start\": \"webpack-dev-server\",\n\t\t\"release\": \"npm run build:prod && npm run commit:dist && standard-version\",\n\t\t\"publish\": \"git push --follow-tags --no-verify origin develop\",\n\t\t\"eslint\": \"eslint . --color\",\n\t\t\"flow\": \"flow check\",\n\t\t\"eslint:flow:test\": \"npm run eslint && npm run flow && npm run test\",\n\t\t\"commit:dist\": \"git add --all dist && (git commit -m 'chore: update dist' || exit 0)\",\n\t\t\"prepush-msg:build\": \"echo '\\nRunning build before push...\\n' && exit 0\",\n\t\t\"prepush-msg:dist\": \"echo '\\nAdding dist files to a seperate commit...\\n' && exit 0\",\n\t\t\"prepush-msg:done\": \"echo '\\nPre push tasks are done.\\n' && exit 0\"\n\t},\n\t\"pre-push\": [\n\t\t\"prepush-msg:build\",\n\t\t\"prebuild\",\n\t\t\"build\",\n\t\t\"build:prod\",\n\t\t\"prepush-msg:dist\",\n\t\t\"commit:dist\",\n\t\t\"prepush-msg:done\"\n\t],\n\t\"devDependencies\": {\n\t\t\"babel-cli\": \"^6.18.0\",\n\t\t\"babel-core\": \"^6.18.2\",\n\t\t\"babel-eslint\": \"^7.1.1\",\n\t\t\"babel-loader\": \"^6.2.7\",\n\t\t\"babel-plugin-istanbul\": \"^4.0.0\",\n\t\t\"babel-plugin-transform-class-properties\": \"^6.22.0\",\n\t\t\"babel-plugin-transform-flow-strip-types\": \"^6.22.0\",\n\t\t\"babel-preset-es2015\": \"^6.18.0\",\n\t\t\"babel-register\": \"^6.23.0\",\n\t\t\"chai\": \"^3.5.0\",\n\t\t\"cross-env\": \"^3.1.4\",\n\t\t\"eslint\": \"^3.10.0\",\n\t\t\"eslint-loader\": \"^1.6.1\",\n\t\t\"eslint-plugin-flowtype\": \"^2.30.0\",\n\t\t\"eslint-plugin-import\": \"^2.2.0\",\n\t\t\"eslint-plugin-mocha-no-only\": \"^0.0.5\",\n\t\t\"flow-bin\": \"latest\",\n\t\t\"istanbul\": \"^0.4.5\",\n\t\t\"karma\": \"^1.5.0\",\n\t\t\"karma-chai\": \"^0.1.0\",\n\t\t\"karma-chrome-launcher\": \"^2.0.0\",\n\t\t\"karma-cli\": \"^1.0.1\",\n\t\t\"karma-coverage\": \"^1.1.1\",\n\t\t\"karma-firefox-launcher\": \"^1.0.1\",\n\t\t\"karma-ie-launcher\": \"^1.0.0\",\n\t\t\"karma-mocha\": \"^1.3.0\",\n\t\t\"karma-safari-launcher\": \"^1.0.0\",\n\t\t\"karma-sourcemap-loader\": \"^0.3.7\",\n\t\t\"karma-webpack\": \"^2.0.2\",\n\t\t\"mocha\": \"^3.2.0\",\n\t\t\"mocha-cli\": \"^1.0.1\",\n\t\t\"pre-push\": \"^0.1.1\",\n\t\t\"sinon\": \"^2.0.0\",\n\t\t\"sinon-chai\": \"^2.8.0\",\n\t\t\"standard-version\": \"^4.0.0\",\n\t\t\"uglifyjs-webpack-plugin\": \"^0.4.3\",\n\t\t\"webpack\": \"latest\",\n\t\t\"webpack-dev-server\": \"latest\"\n\t},\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"https://github.com/kaltura/playkit-js\"\n\t},\n\t\"keywords\": [\n\t\t\"kaltura\",\n\t\t\"player\",\n\t\t\"html5 player\"\n\t],\n\t\"license\": \"AGPLV3\",\n\t\"bugs\": {\n\t\t\"url\": \"https://github.com/kaltura/playkit-js/issues\"\n\t},\n\t\"homepage\": \"https://github.com/kaltura/playkit-js\",\n\t\"dependencies\": {\n\t\t\"js-logger\": \"^1.3.0\"\n\t}\n};\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _fakeEventTarget = __webpack_require__(9);\n\nvar _fakeEventTarget2 = _interopRequireDefault(_fakeEventTarget);\n\nvar _fakeEvent = __webpack_require__(2);\n\nvar _fakeEvent2 = _interopRequireDefault(_fakeEvent);\n\nvar _eventManager = __webpack_require__(6);\n\nvar _eventManager2 = _interopRequireDefault(_eventManager);\n\nvar _events = __webpack_require__(7);\n\nvar _mediaSourceProvider = __webpack_require__(13);\n\nvar _mediaSourceProvider2 = _interopRequireDefault(_mediaSourceProvider);\n\nvar _videoTrack = __webpack_require__(5);\n\nvar _videoTrack2 = _interopRequireDefault(_videoTrack);\n\nvar _audioTrack = __webpack_require__(3);\n\nvar _audioTrack2 = _interopRequireDefault(_audioTrack);\n\nvar _textTrack = __webpack_require__(4);\n\nvar _textTrack2 = _interopRequireDefault(_textTrack);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Html5 = function (_FakeEventTarget) {\n  _inherits(Html5, _FakeEventTarget);\n\n  _createClass(Html5, null, [{\n    key: 'createEngine',\n\n\n    /**\n     * Factory method to create an engine.\n     * @param {Source} source - The selected source object.\n     * @param {Object} config - The player configuration.\n     * @returns {IEngine} - New instance of the run time engine.\n     * @public\n     * @static\n     */\n\n    /**\n     * The selected media source adapter of the engine.\n     * @type {IMediaSourceAdapter}\n     * @private\n     */\n\n    /**\n     * The video element.\n     * @type {HTMLVideoElement}\n     * @private\n     */\n    value: function createEngine(source, config) {\n      return new this(source, config);\n    }\n\n    /**\n     * Checks if the engine can play a given sources.\n     * @param {Array<Source>} sources - The sources to check.\n     * @param {string} priority - Preferred media source adapter id (optional).\n     * @static\n     * @public\n     * @returns {boolean} - Whether the engine can play the mime type.\n     */\n\n\n    /**\n     * @type {string} - The engine id.\n     */\n\n    /**\n     * The event manager of the engine.\n     * @type {EventManager}\n     * @private\n     */\n\n  }, {\n    key: 'canPlayType',\n    value: function canPlayType(sources) {\n      var priority = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n      return _mediaSourceProvider2.default.canPlayType(sources, priority);\n    }\n\n    /**\n     * @constructor\n     * @param {Source} source - The selected source object.\n     * @param {Object} config - The player configuration.\n     */\n\n  }]);\n\n  function Html5(source, config) {\n    _classCallCheck(this, Html5);\n\n    var _this = _possibleConstructorReturn(this, (Html5.__proto__ || Object.getPrototypeOf(Html5)).call(this));\n\n    _this._eventManager = new _eventManager2.default();\n    _this._createVideoElement();\n    _this._loadMediaSourceAdapter(source, config);\n    _this.attach();\n    return _this;\n  }\n\n  /**\n   * Destroys the engine.\n   * @public\n   * @returns {void}\n   */\n\n\n  _createClass(Html5, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.detach();\n      if (this._mediaSourceAdapter) {\n        this._mediaSourceAdapter.destroy();\n      }\n      if (this._el) {\n        this.pause();\n        this._el.removeAttribute('src');\n        if (this._el.parentNode) {\n          this._el.parentNode.removeChild(this._el);\n        }\n      }\n      this._eventManager.destroy();\n    }\n\n    /**\n     * Listen to the video element events and triggers them from the engine.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'attach',\n    value: function attach() {\n      var _this2 = this;\n\n      var _loop = function _loop(playerEvent) {\n        _this2._eventManager.listen(_this2._el, _events.HTML5_EVENTS[playerEvent], function () {\n          _this2.dispatchEvent(new _fakeEvent2.default(_events.HTML5_EVENTS[playerEvent]));\n        });\n      };\n\n      for (var playerEvent in _events.HTML5_EVENTS) {\n        _loop(playerEvent);\n      }\n      if (this._mediaSourceAdapter) {\n        // listen and dispatch adaptive bitrate changed event\n        this._eventManager.listen(this._mediaSourceAdapter, _events.CUSTOM_EVENTS.VIDEO_TRACK_CHANGED, function (event) {\n          _this2.dispatchEvent(event);\n        });\n        this._eventManager.listen(this._mediaSourceAdapter, _events.CUSTOM_EVENTS.AUDIO_TRACK_CHANGED, function (event) {\n          return _this2.dispatchEvent(event);\n        });\n        this._eventManager.listen(this._mediaSourceAdapter, _events.CUSTOM_EVENTS.TEXT_TRACK_CHANGED, function (event) {\n          return _this2.dispatchEvent(event);\n        });\n      }\n    }\n\n    /**\n     * Remove the listeners of the video element events.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'detach',\n    value: function detach() {\n      for (var playerEvent in _events.HTML5_EVENTS) {\n        this._eventManager.unlisten(this._el, _events.HTML5_EVENTS[playerEvent]);\n      }\n      if (this._mediaSourceAdapter) {\n        // unlisten to adaptive bitrate changed\n        this._eventManager.unlisten(this._mediaSourceAdapter, _events.CUSTOM_EVENTS.VIDEO_TRACK_CHANGED);\n        this._eventManager.unlisten(this._mediaSourceAdapter, _events.CUSTOM_EVENTS.AUDIO_TRACK_CHANGED);\n        this._eventManager.unlisten(this._mediaSourceAdapter, _events.CUSTOM_EVENTS.TEXT_TRACK_CHANGED);\n      }\n    }\n\n    /**\n     * @returns {HTMLVideoElement} - The video element.\n     * @public\n     */\n\n  }, {\n    key: 'getVideoElement',\n    value: function getVideoElement() {\n      return this._el;\n    }\n\n    /**\n     * Creates a video element dom object.\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_createVideoElement',\n    value: function _createVideoElement() {\n      this._el = document.createElement(\"video\");\n      //Set attributes\n      this._el.style.width = \"640px\";\n      this._el.style.height = \"360px\";\n      this._el.style.backgroundColor = \"black\";\n      this._el.controls = true;\n      if (document && document.body) {\n        document.body.appendChild(this._el);\n      }\n    }\n\n    /**\n     * Loads the appropriate media source extension adapter.\n     * @param {Source} source - The selected source object.\n     * @param {Object} config - The media source extension configuration.\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_loadMediaSourceAdapter',\n    value: function _loadMediaSourceAdapter(source, config) {\n      this._mediaSourceAdapter = _mediaSourceProvider2.default.getMediaSourceAdapter(this.getVideoElement(), source, config);\n    }\n\n    /**\n     * Select a new video track.\n     * @param {VideoTrack} videoTrack - The video track object to set.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'selectVideoTrack',\n    value: function selectVideoTrack(videoTrack) {\n      if (this._mediaSourceAdapter) {\n        this._mediaSourceAdapter.selectVideoTrack(videoTrack);\n      }\n    }\n\n    /**\n     * Select a new audio track.\n     * @param {AudioTrack} audioTrack - The video track object to set.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'selectAudioTrack',\n    value: function selectAudioTrack(audioTrack) {\n      if (this._mediaSourceAdapter) {\n        this._mediaSourceAdapter.selectAudioTrack(audioTrack);\n      }\n    }\n\n    /**\n     * Select a new text track.\n     * @param {TextTrack} textTrack - The text track object to set.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'selectTextTrack',\n    value: function selectTextTrack(textTrack) {\n      if (this._mediaSourceAdapter) {\n        this._mediaSourceAdapter.selectTextTrack(textTrack);\n      }\n    }\n\n    /**\n     * Enables adaptive bitrate switching according to the media source extension logic.\n     * @function enableAdaptiveBitrate\n     * @returns {void}\n     * @public\n     */\n\n  }, {\n    key: 'enableAdaptiveBitrate',\n    value: function enableAdaptiveBitrate() {\n      if (this._mediaSourceAdapter) {\n        this._mediaSourceAdapter.enableAdaptiveBitrate();\n      }\n    }\n\n    /**\n     * Set a source.\n     * @param {string} source - Source to set.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'play',\n\n\n    //playback interface\n    /**\n     * Start/resume playback.\n     * @public\n     * @returns {void}\n     */\n    value: function play() {\n      return this._el.play();\n    }\n\n    /**\n     * Pause playback.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      return this._el.pause();\n    }\n\n    /**\n     * Load media.\n     * @public\n     * @returns {Promise<Object>} - The loaded data\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      return this._mediaSourceAdapter ? this._mediaSourceAdapter.load() : Promise.resolve({});\n    }\n\n    /**\n     * Get the current time in seconds.\n     * @returns {Number} - The current playback time.\n     * @public\n     */\n\n  }, {\n    key: 'ready',\n    value: function ready() {}\n\n    /**\n     * Get paused state.\n     * @returns {boolean} - The paused value of the video element.\n     * @public\n     */\n\n  }, {\n    key: 'src',\n    set: function set(source) {\n      this._el.src = source;\n    }\n\n    /**\n     * Get the source url.\n     * @returns {string} - The source url.\n     * @public\n     */\n    ,\n    get: function get() {\n      if (this._mediaSourceAdapter) {\n        return this._mediaSourceAdapter.src;\n      }\n      return \"\";\n    }\n  }, {\n    key: 'currentTime',\n    get: function get() {\n      return this._el.currentTime;\n    }\n\n    /**\n     * Set the current time in seconds.\n     * @param {Number} to - The number to set in seconds.\n     * @public\n     * @returns {void}\n     */\n    ,\n    set: function set(to) {\n      this._el.currentTime = to;\n    }\n\n    /**\n     * Get the duration in seconds.\n     * @returns {Number} - The playback duration.\n     * @public\n     */\n\n  }, {\n    key: 'duration',\n    get: function get() {\n      return this._el.duration;\n    }\n\n    /**\n     * Set playback volume.\n     * @param {Number} vol - The volume to set.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'volume',\n    set: function set(vol) {\n      this._el.volume = vol;\n    }\n\n    /**\n     * Get playback volume.\n     * @returns {Number} - The volume value of the video element.\n     * @public\n     */\n    ,\n    get: function get() {\n      return this._el.volume;\n    }\n  }, {\n    key: 'paused',\n    get: function get() {\n      return this._el.paused;\n    }\n\n    /**\n     * Get seeking state.\n     * @returns {boolean} - The seeking value of the video element.\n     * @public\n     */\n\n  }, {\n    key: 'seeking',\n    get: function get() {\n      return this._el.seeking;\n    }\n\n    /**\n     * Get the first seekable range (part) of the video in seconds.\n     * @returns {TimeRanges} - First seekable range (part) of the video in seconds.\n     * @public\n     */\n\n  }, {\n    key: 'seekable',\n    get: function get() {\n      return this._el.seekable;\n    }\n\n    /**\n     * Get the first played range (part) of the video in seconds.\n     * @returns {TimeRanges} - First played range (part) of the video in seconds.\n     * @public\n     */\n\n  }, {\n    key: 'played',\n    get: function get() {\n      return this._el.played;\n    }\n\n    /**\n     * Get the first buffered range (part) of the video in seconds.\n     * @returns {TimeRanges} - First buffered range (part) of the video in seconds.\n     * @public\n     */\n\n  }, {\n    key: 'buffered',\n    get: function get() {\n      return this._el.buffered;\n    }\n\n    /**\n     * Set player muted state.\n     * @param {boolean} mute - The new mute value.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'muted',\n    set: function set(mute) {\n      this._el.muted = mute;\n    }\n\n    /**\n     * Get player muted state.\n     * @returns {boolean} - The muted value of the video element.\n     * @public\n     */\n    ,\n    get: function get() {\n      return this._el.muted;\n    }\n\n    /**\n     * Get the default mute value.\n     * @returns {boolean} - The defaultMuted of the video element.\n     * @public\n     */\n\n  }, {\n    key: 'defaultMuted',\n    get: function get() {\n      return this._el.defaultMuted;\n    }\n\n    /**\n     * Sets an image to be shown while the video is downloading, or until the user hits the play button.\n     * @param {string} poster - The image url to be shown.\n     * @returns {void}\n     * @public\n     */\n\n  }, {\n    key: 'poster',\n    set: function set(poster) {\n      this._el.poster = poster;\n    }\n\n    /**\n     * Gets an image to be shown while the video is downloading, or until the user hits the play button.\n     * @returns {poster} - The image url.\n     * @public\n     */\n    ,\n    get: function get() {\n      return this._el.poster;\n    }\n\n    /**\n     * Specifies if and how the author thinks that the video should be loaded when the page loads.\n     * @param {string} preload - The preload value.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'preload',\n    set: function set(preload) {\n      this._el.preload = preload;\n    }\n\n    /**\n     * Gets the preload value of the video element.\n     * @returns {string} - The preload value.\n     * @public\n     */\n    ,\n    get: function get() {\n      return this._el.preload;\n    }\n\n    /**\n     * Set if the video will automatically start playing as soon as it can do so without stopping.\n     * @param {boolean} autoplay - The autoplay value.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'autoplay',\n    set: function set(autoplay) {\n      this._el.autoplay = autoplay;\n    }\n\n    /**\n     * Gets the autoplay value of the video element.\n     * @returns {boolean} - The autoplay value.\n     * @public\n     */\n    ,\n    get: function get() {\n      return this._el.autoplay;\n    }\n\n    /**\n     * Set to specifies that the video will start over again, every time it is finished.\n     * @param {boolean} loop - the loop value.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'loop',\n    set: function set(loop) {\n      this._el.loop = loop;\n    }\n\n    /**\n     * Gets the loop value of the video element.\n     * @returns {boolean} - The loop value.\n     * @public\n     */\n    ,\n    get: function get() {\n      return this._el.loop;\n    }\n\n    /**\n     * Set to specifies that video controls should be displayed.\n     * @param {boolean} controls - the controls value.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'controls',\n    set: function set(controls) {\n      this._el.controls = controls;\n    }\n\n    /**\n     * Gets the controls value of the video element.\n     * @returns {boolean} - The controls value.\n     * @public\n     */\n    ,\n    get: function get() {\n      return this._el.controls;\n    }\n\n    /**\n     * Sets the current playback speed of the audio/video.\n     * @param {Number} playbackRate - The playback speed value.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'playbackRate',\n    set: function set(playbackRate) {\n      this._el.playbackRate = playbackRate;\n    }\n\n    /**\n     * Gets the current playback speed of the audio/video.\n     * @returns {Number} - The current playback speed value.\n     * @public\n     */\n    ,\n    get: function get() {\n      return this._el.playbackRate;\n    }\n\n    /**\n     * Sets the default playback speed of the audio/video.\n     * @param {Number} defaultPlaybackRate - The default playback speed value.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'defaultPlaybackRate',\n    set: function set(defaultPlaybackRate) {\n      this._el.defaultPlaybackRate = defaultPlaybackRate;\n    }\n\n    /**\n     * Gets the default playback speed of the audio/video.\n     * @returns {Number} - The default playback speed value.\n     * @public\n     */\n    ,\n    get: function get() {\n      return this._el.defaultPlaybackRate;\n    }\n\n    /**\n     * The ended property returns whether the playback of the audio/video has ended.\n     * @returns {boolean} - The ended value.\n     * @public\n     */\n\n  }, {\n    key: 'ended',\n    get: function get() {\n      return this._el.ended;\n    }\n\n    /**\n     * The error property returns a MediaError object.\n     * @returns {MediaError} - The MediaError object has a code property containing the error state of the audio/video.\n     * @public\n     */\n\n  }, {\n    key: 'error',\n    get: function get() {\n      return this._el.error;\n    }\n\n    /**\n     * @returns {Number} - The current network state (activity) of the audio/video.\n     * @public\n     */\n\n  }, {\n    key: 'networkState',\n    get: function get() {\n      return this._el.networkState;\n    }\n\n    /**\n     * Indicates if the audio/video is ready to play or not.\n     * @returns {Number} - The current ready state of the audio/video.\n     * 0 = HAVE_NOTHING - no information whether or not the audio/video is ready.\n     * 1 = HAVE_METADATA - metadata for the audio/video is ready.\n     * 2 = HAVE_CURRENT_DATA - data for the current playback position is available, but not enough data to play next frame/millisecond.\n     * 3 = HAVE_FUTURE_DATA - data for the current and at least the next frame is available.\n     * 4 = HAVE_ENOUGH_DATA - enough data available to start playing.\n     */\n\n  }, {\n    key: 'readyState',\n    get: function get() {\n      return this._el.readyState;\n    }\n\n    /**\n     * @returns {Number} - The height of the video player, in pixels.\n     * @public\n     */\n\n  }, {\n    key: 'videoHeight',\n    get: function get() {\n      return this._el.videoHeight;\n    }\n\n    /**\n     * @returns {Number} - The width of the video player, in pixels.\n     * @public\n     */\n\n  }, {\n    key: 'videoWidth',\n    get: function get() {\n      return this._el.videoWidth;\n    }\n\n    /**\n     * Test video element to check if html5 engine is supported.\n     */\n\n  }], [{\n    key: 'isSupported',\n\n\n    /**\n     * Checks if the html5 engine is supported.\n     * @returns {boolean} - The isSupported result.\n     * @static\n     * @public\n     */\n    value: function isSupported() {\n      try {\n        Html5.TEST_VID = document.createElement('video');\n        Html5.TEST_VID.volume = 0.5;\n      } catch (e) {\n        return false;\n      }\n      return !!Html5.TEST_VID.canPlayType;\n    }\n  }]);\n\n  return Html5;\n}(_fakeEventTarget2.default);\n\nHtml5.id = \"html5\";\nexports.default = Html5;\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _eventManager = __webpack_require__(6);\n\nvar _eventManager2 = _interopRequireDefault(_eventManager);\n\nvar _events = __webpack_require__(7);\n\nvar _track = __webpack_require__(0);\n\nvar _track2 = _interopRequireDefault(_track);\n\nvar _videoTrack = __webpack_require__(5);\n\nvar _videoTrack2 = _interopRequireDefault(_videoTrack);\n\nvar _audioTrack = __webpack_require__(3);\n\nvar _audioTrack2 = _interopRequireDefault(_audioTrack);\n\nvar _textTrack = __webpack_require__(4);\n\nvar _textTrack2 = _interopRequireDefault(_textTrack);\n\nvar _baseMediaSourceAdapter = __webpack_require__(12);\n\nvar _baseMediaSourceAdapter2 = _interopRequireDefault(_baseMediaSourceAdapter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * An illustration of media source extension for progressive download\n * @classdesc\n * @implements {IMediaSourceAdapter}\n */\nvar NativeAdapter = function (_BaseMediaSourceAdapt) {\n  _inherits(NativeAdapter, _BaseMediaSourceAdapt);\n\n  _createClass(NativeAdapter, null, [{\n    key: 'canPlayType',\n\n\n    /**\n     * Checks if NativeAdapter can play a given mime type.\n     * @function canPlayType\n     * @param {string} mimeType - The mime type to check\n     * @returns {boolean} - Whether the native adapter can play a specific mime type\n     * @static\n     */\n\n    /**\n     * The event manager of the class.\n     * @member {EventManager} - _eventManager\n     * @type {EventManager}\n     * @private\n     */\n\n    /**\n     * The load promise\n     * @member {Promise<Object>} - _loadPromise\n     * @type {Promise<Object>}\n     * @private\n     */\n\n    /**\n     * The id of the Adapter\n     * @member {string} id\n     * @static\n     * @public\n     */\n    value: function canPlayType(mimeType) {\n      var canPlayType = typeof mimeType === 'string' ? !!document.createElement(\"video\").canPlayType(mimeType.toLowerCase()) : false;\n      NativeAdapter._logger.debug('canPlayType result for mimeType:' + mimeType + ' is ' + canPlayType.toString());\n      return canPlayType;\n    }\n\n    /**\n     * @constructor\n     * @param {HTMLVideoElement} videoElement - The video element which bind to NativeAdapter\n     * @param {Source} source - The source object\n     * @param {Object} config - The media source adapter configuration\n     */\n\n\n    /**\n     * The adapter logger\n     * @member {any} _logger\n     * @private\n     * @static\n     */\n\n  }]);\n\n  function NativeAdapter(videoElement, source, config) {\n    _classCallCheck(this, NativeAdapter);\n\n    NativeAdapter._logger.debug('Creating adapter');\n\n    var _this = _possibleConstructorReturn(this, (NativeAdapter.__proto__ || Object.getPrototypeOf(NativeAdapter)).call(this, videoElement, source, config));\n\n    _this._eventManager = new _eventManager2.default();\n    return _this;\n  }\n\n  /**\n   * Load the video source\n   * @function load\n   * @returns {Promise<Object>} - The loaded data\n   */\n\n\n  _createClass(NativeAdapter, [{\n    key: 'load',\n    value: function load() {\n      var _this2 = this;\n\n      if (!this._loadPromise) {\n        this._loadPromise = new Promise(function (resolve, reject) {\n          // We're using 'loadeddata' event for native hls (on 'loadedmetadata' native hls doesn't have tracks yet).\n          _this2._eventManager.listen(_this2._videoElement, _events.HTML5_EVENTS.LOADED_DATA, function () {\n            _this2._eventManager.unlisten(_this2._videoElement, _events.HTML5_EVENTS.LOADED_DATA);\n            var data = { tracks: _this2._getParsedTracks() };\n            NativeAdapter._logger.debug('The source has been loaded successfully');\n            resolve(data);\n          });\n          _this2._eventManager.listen(_this2._videoElement, _events.HTML5_EVENTS.ERROR, function (error) {\n            _this2._eventManager.unlisten(_this2._videoElement, _events.HTML5_EVENTS.ERROR);\n            NativeAdapter._logger.error(error);\n            reject(error);\n          });\n          if (_this2._sourceObj && _this2._sourceObj.url) {\n            _this2._videoElement.src = _this2._sourceObj.url;\n          }\n        });\n      }\n      return this._loadPromise;\n    }\n\n    /**\n     * Destroys the native adapter.\n     * @function destroy\n     * @returns {void}\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      NativeAdapter._logger.debug('destroy');\n      _get(NativeAdapter.prototype.__proto__ || Object.getPrototypeOf(NativeAdapter.prototype), 'destroy', this).call(this);\n      this._eventManager.destroy();\n      this._loadPromise = null;\n    }\n\n    /**\n     * Get the parsed tracks\n     * @function _getParsedTracks\n     * @returns {Array<Track>} - The parsed tracks\n     * @private\n     */\n\n  }, {\n    key: '_getParsedTracks',\n    value: function _getParsedTracks() {\n      var videoTracks = this._getParsedVideoTracks();\n      var audioTracks = this._getParsedAudioTracks();\n      var textTracks = this._getParsedTextTracks();\n      return videoTracks.concat(audioTracks).concat(textTracks);\n    }\n\n    /**\n     * Get the parsed video tracks\n     * @function _getParsedVideoTracks\n     * @returns {Array<Track>} - The parsed video tracks\n     * @private\n     */\n\n  }, {\n    key: '_getParsedVideoTracks',\n    value: function _getParsedVideoTracks() {\n      var videoTracks = this._videoElement.videoTracks;\n      var parsedTracks = [];\n      if (videoTracks) {\n        for (var i = 0; i < videoTracks.length; i++) {\n          var settings = {\n            id: videoTracks[i].id,\n            active: videoTracks[i].selected,\n            label: videoTracks[i].label,\n            language: videoTracks[i].language,\n            index: i\n          };\n          parsedTracks.push(new _videoTrack2.default(settings));\n        }\n      }\n      return parsedTracks;\n    }\n\n    /**\n     * Get the parsed audio tracks\n     * @function _getParsedAudioTracks\n     * @returns {Array<Track>} - The parsed audio tracks\n     * @private\n     */\n\n  }, {\n    key: '_getParsedAudioTracks',\n    value: function _getParsedAudioTracks() {\n      var audioTracks = this._videoElement.audioTracks;\n      var parsedTracks = [];\n      if (audioTracks) {\n        for (var i = 0; i < audioTracks.length; i++) {\n          var settings = {\n            id: audioTracks[i].id,\n            active: audioTracks[i].enabled,\n            label: audioTracks[i].label,\n            language: audioTracks[i].language,\n            index: i\n          };\n          parsedTracks.push(new _audioTrack2.default(settings));\n        }\n      }\n      return parsedTracks;\n    }\n\n    /**\n     * Get the parsed text tracks\n     * @function _getParsedTextTracks\n     * @returns {Array<Track>} - The parsed text tracks\n     * @private\n     */\n\n  }, {\n    key: '_getParsedTextTracks',\n    value: function _getParsedTextTracks() {\n      var textTracks = this._videoElement.textTracks;\n      var parsedTracks = [];\n      if (textTracks) {\n        for (var i = 0; i < textTracks.length; i++) {\n          var settings = {\n            kind: textTracks[i].kind,\n            active: textTracks[i].mode === 'showing',\n            label: textTracks[i].label,\n            language: textTracks[i].language,\n            index: i\n          };\n          parsedTracks.push(new _textTrack2.default(settings));\n        }\n      }\n      return parsedTracks;\n    }\n\n    /**\n     * Select a video track\n     * @function selectVideoTrack\n     * @param {VideoTrack} videoTrack - the track to select\n     * @returns {void}\n     * @public\n     */\n\n  }, {\n    key: 'selectVideoTrack',\n    value: function selectVideoTrack(videoTrack) {\n      var videoTracks = this._videoElement.videoTracks;\n      if (videoTrack instanceof _videoTrack2.default && videoTracks && videoTracks[videoTrack.index]) {\n        this._disableVideoTracks();\n        videoTracks[videoTrack.index].selected = true;\n        this._onTrackChanged(videoTrack);\n      }\n    }\n\n    /**\n     * Select an audio track\n     * @function selectAudioTrack\n     * @param {AudioTrack} audioTrack - the  audio track to select\n     * @returns {void}\n     * @public\n     */\n\n  }, {\n    key: 'selectAudioTrack',\n    value: function selectAudioTrack(audioTrack) {\n      var audioTracks = this._videoElement.audioTracks;\n      if (audioTrack instanceof _audioTrack2.default && audioTracks && audioTracks[audioTrack.index]) {\n        this._disableAudioTracks();\n        audioTracks[audioTrack.index].enabled = true;\n        this._onTrackChanged(audioTrack);\n      }\n    }\n\n    /**\n     * Select a text track\n     * @function selectTextTrack\n     * @param {TextTrack} textTrack - the track to select\n     * @returns {void}\n     * @public\n     */\n\n  }, {\n    key: 'selectTextTrack',\n    value: function selectTextTrack(textTrack) {\n      var textTracks = this._videoElement.textTracks;\n      if (textTrack instanceof _textTrack2.default && (textTrack.kind === 'subtitles' || textTrack.kind === 'captions') && textTracks && textTracks[textTrack.index]) {\n        this._disableTextTracks();\n        textTracks[textTrack.index].mode = 'showing';\n        this._onTrackChanged(textTrack);\n      }\n    }\n\n    /**\n     * Enables adaptive bitrate\n     * @function enableAdaptiveBitrate\n     * @returns {void}\n     * @public\n     */\n\n  }, {\n    key: 'enableAdaptiveBitrate',\n    value: function enableAdaptiveBitrate() {\n      NativeAdapter._logger.debug('Enabling adaptive bitrate not supported');\n    }\n\n    /**\n     * Disables all the existing video tracks.\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_disableVideoTracks',\n    value: function _disableVideoTracks() {\n      var videoTracks = this._videoElement.videoTracks;\n      if (videoTracks) {\n        for (var i = 0; i < videoTracks.length; i++) {\n          videoTracks[i].selected = false;\n        }\n      }\n    }\n\n    /**\n     * Disables all the existing audio tracks.\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_disableAudioTracks',\n    value: function _disableAudioTracks() {\n      var audioTracks = this._videoElement.audioTracks;\n      if (audioTracks) {\n        for (var i = 0; i < audioTracks.length; i++) {\n          audioTracks[i].enabled = false;\n        }\n      }\n    }\n\n    /**\n     * Disables all the existing text tracks.\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_disableTextTracks',\n    value: function _disableTextTracks() {\n      var textTracks = this._videoElement.textTracks;\n      if (textTracks) {\n        for (var i = 0; i < textTracks.length; i++) {\n          textTracks[i].mode = 'disabled';\n        }\n      }\n    }\n\n    /**\n     * Getter for the src that the adapter plays on the video element.\n     * @public\n     * @returns {string} - The src url.\n     */\n\n  }, {\n    key: 'src',\n    get: function get() {\n      return this._videoElement.src;\n    }\n  }]);\n\n  return NativeAdapter;\n}(_baseMediaSourceAdapter2.default);\n\nNativeAdapter.id = 'NativeAdapter';\nNativeAdapter._logger = _baseMediaSourceAdapter2.default.getLogger(NativeAdapter.id);\nexports.default = NativeAdapter;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VERSION = exports.TextTrack = exports.AudioTrack = exports.VideoTrack = exports.Track = exports.BasePlugin = exports.registerPlugin = exports.BaseMediaSourceAdapter = exports.registerMediaSourceAdapter = undefined;\nexports.playkit = playkit;\n\nvar _player = __webpack_require__(8);\n\nvar _player2 = _interopRequireDefault(_player);\n\nvar _logger = __webpack_require__(1);\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nvar _package = __webpack_require__(18);\n\nvar packageData = _interopRequireWildcard(_package);\n\nvar _baseMediaSourceAdapter = __webpack_require__(12);\n\nvar _baseMediaSourceAdapter2 = _interopRequireDefault(_baseMediaSourceAdapter);\n\nvar _mediaSourceProvider = __webpack_require__(13);\n\nvar _pluginManager = __webpack_require__(15);\n\nvar _basePlugin = __webpack_require__(14);\n\nvar _basePlugin2 = _interopRequireDefault(_basePlugin);\n\nvar _track = __webpack_require__(0);\n\nvar _track2 = _interopRequireDefault(_track);\n\nvar _videoTrack = __webpack_require__(5);\n\nvar _videoTrack2 = _interopRequireDefault(_videoTrack);\n\nvar _audioTrack = __webpack_require__(3);\n\nvar _audioTrack2 = _interopRequireDefault(_audioTrack);\n\nvar _textTrack = __webpack_require__(4);\n\nvar _textTrack2 = _interopRequireDefault(_textTrack);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Playkit version\nvar VERSION = packageData.version;\n\n\n_logger2.default.getLogger().log(\"%c Playkit \" + VERSION, \"color: yellow; font-size: large\");\n_logger2.default.getLogger().log(\"%c For more details see https://github.com/kaltura/playkit-js\", \"color: yellow;\");\n\n/**\n * @param {Object} config - The configuration of the player\n * @returns {Player} - The player instance\n */\nfunction playkit() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  return new _player2.default(config);\n}\n\n// Export the media source adapters necessary utils\nexports.registerMediaSourceAdapter = _mediaSourceProvider.registerMediaSourceAdapter;\nexports.BaseMediaSourceAdapter = _baseMediaSourceAdapter2.default;\n\n// Export the plugin framework\n\nexports.registerPlugin = _pluginManager.registerPlugin;\nexports.BasePlugin = _basePlugin2.default;\n\n// Export the tracks classes\n\nexports.Track = _track2.default;\nexports.VideoTrack = _videoTrack2.default;\nexports.AudioTrack = _audioTrack2.default;\nexports.TextTrack = _textTrack2.default;\n\n//export version\n\nexports.VERSION = VERSION;\nexports.default = playkit;\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _player = __webpack_require__(8);\n\nvar _player2 = _interopRequireDefault(_player);\n\nvar _eventManager = __webpack_require__(6);\n\nvar _eventManager2 = _interopRequireDefault(_eventManager);\n\nvar _state = __webpack_require__(23);\n\nvar _state2 = _interopRequireDefault(_state);\n\nvar _stateTypes = __webpack_require__(16);\n\nvar _stateTypes2 = _interopRequireDefault(_stateTypes);\n\nvar _events = __webpack_require__(7);\n\nvar _fakeEvent = __webpack_require__(2);\n\nvar _fakeEvent2 = _interopRequireDefault(_fakeEvent);\n\nvar _logger = __webpack_require__(1);\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * This class responsible to manage all the state machine of the player.\n * @classdesc\n */\n\n\n/**\n * Define a transition object.\n */\nvar StateManager = function () {\n\n  /**\n   * @constructor\n   * @param {Player} player - Reference to the player.\n   */\n\n  /**\n   * Holds the state history of the player.\n   * @member\n   * @type {Array<State>}\n   * @private\n   */\n\n  /**\n   * Holds the current state of the player.\n   * @member\n   * @type {State}\n   * @private\n   */\n\n  /**\n   * Reference to the actual player.\n   * @member\n   * @type {Player}\n   * @private\n   */\n  function StateManager(player) {\n    var _this = this,\n        _PlayerStates$IDLE,\n        _PlayerStates$LOADING,\n        _PlayerStates$PAUSED,\n        _PlayerStates$PLAYING,\n        _PlayerStates$BUFFERI,\n        _transitions;\n\n    _classCallCheck(this, StateManager);\n\n    this._transitions = (_transitions = {}, _defineProperty(_transitions, _stateTypes2.default.IDLE, (_PlayerStates$IDLE = {}, _defineProperty(_PlayerStates$IDLE, _events.HTML5_EVENTS.LOAD_START, function () {\n      _this._updateState(_stateTypes2.default.LOADING);\n      _this._dispatchEvent();\n    }), _defineProperty(_PlayerStates$IDLE, _events.HTML5_EVENTS.PLAY, function () {\n      _this._updateState(_stateTypes2.default.BUFFERING);\n      _this._dispatchEvent();\n    }), _PlayerStates$IDLE)), _defineProperty(_transitions, _stateTypes2.default.LOADING, (_PlayerStates$LOADING = {}, _defineProperty(_PlayerStates$LOADING, _events.HTML5_EVENTS.LOADED_METADATA, function () {\n      if (_this._player.config.autoPlay) {\n        _this._updateState(_stateTypes2.default.PLAYING);\n      } else {\n        _this._updateState(_stateTypes2.default.PAUSED);\n      }\n      _this._dispatchEvent();\n    }), _defineProperty(_PlayerStates$LOADING, _events.HTML5_EVENTS.ERROR, function () {\n      _this._updateState(_stateTypes2.default.IDLE);\n      _this._dispatchEvent();\n    }), _PlayerStates$LOADING)), _defineProperty(_transitions, _stateTypes2.default.PAUSED, (_PlayerStates$PAUSED = {}, _defineProperty(_PlayerStates$PAUSED, _events.HTML5_EVENTS.PLAY, function () {\n      _this._updateState(_stateTypes2.default.PLAYING);\n      _this._dispatchEvent();\n    }), _defineProperty(_PlayerStates$PAUSED, _events.HTML5_EVENTS.PLAYING, function () {\n      _this._updateState(_stateTypes2.default.PLAYING);\n      _this._dispatchEvent();\n    }), _defineProperty(_PlayerStates$PAUSED, _events.HTML5_EVENTS.ENDED, function () {\n      _this._updateState(_stateTypes2.default.IDLE);\n      _this._dispatchEvent();\n    }), _PlayerStates$PAUSED)), _defineProperty(_transitions, _stateTypes2.default.PLAYING, (_PlayerStates$PLAYING = {}, _defineProperty(_PlayerStates$PLAYING, _events.HTML5_EVENTS.PAUSE, function () {\n      _this._updateState(_stateTypes2.default.PAUSED);\n      _this._dispatchEvent();\n    }), _defineProperty(_PlayerStates$PLAYING, _events.HTML5_EVENTS.WAITING, function () {\n      _this._updateState(_stateTypes2.default.BUFFERING);\n      _this._dispatchEvent();\n    }), _defineProperty(_PlayerStates$PLAYING, _events.HTML5_EVENTS.ENDED, function () {\n      _this._updateState(_stateTypes2.default.IDLE);\n      _this._dispatchEvent();\n    }), _defineProperty(_PlayerStates$PLAYING, _events.HTML5_EVENTS.ERROR, function () {\n      _this._updateState(_stateTypes2.default.IDLE);\n      _this._dispatchEvent();\n    }), _PlayerStates$PLAYING)), _defineProperty(_transitions, _stateTypes2.default.BUFFERING, (_PlayerStates$BUFFERI = {}, _defineProperty(_PlayerStates$BUFFERI, _events.HTML5_EVENTS.PLAYING, function () {\n      _this._updateState(_stateTypes2.default.PLAYING);\n      _this._dispatchEvent();\n    }), _defineProperty(_PlayerStates$BUFFERI, _events.HTML5_EVENTS.PAUSE, function () {\n      _this._updateState(_stateTypes2.default.PAUSED);\n      _this._dispatchEvent();\n    }), _PlayerStates$BUFFERI)), _transitions);\n\n    this._player = player;\n    this._logger = _logger2.default.getLogger(\"StateManager\");\n    this._eventManager = new _eventManager2.default();\n    this._history = [];\n    this._prevState = null;\n    this._curState = new _state2.default(_stateTypes2.default.IDLE);\n    this._attachListeners();\n  }\n\n  /**\n   * Register to all necessary events which impacts on the player state.\n   * @private\n   * @returns {void}\n   */\n\n  /**\n   * The possible transitions from one state to another.\n   * @type {Array<Transition>}\n   * @private\n   */\n\n  /**\n   * Holds the previous state of the player.\n   * @member\n   * @type {State | null}\n   * @private\n   */\n\n  /**\n   * The event manager of the class.\n   * @member\n   * @type {EventManager}\n   * @private\n   */\n\n  /**\n   * The logger of the class.\n   * @member\n   * @type {any}\n   * @private\n   */\n\n\n  _createClass(StateManager, [{\n    key: '_attachListeners',\n    value: function _attachListeners() {\n      this._eventManager.listen(this._player, _events.HTML5_EVENTS.ERROR, this._doTransition.bind(this));\n      this._eventManager.listen(this._player, _events.HTML5_EVENTS.ENDED, this._doTransition.bind(this));\n      this._eventManager.listen(this._player, _events.HTML5_EVENTS.PLAY, this._doTransition.bind(this));\n      this._eventManager.listen(this._player, _events.HTML5_EVENTS.LOAD_START, this._doTransition.bind(this));\n      this._eventManager.listen(this._player, _events.HTML5_EVENTS.PLAYING, this._doTransition.bind(this));\n      this._eventManager.listen(this._player, _events.HTML5_EVENTS.LOADED_METADATA, this._doTransition.bind(this));\n      this._eventManager.listen(this._player, _events.HTML5_EVENTS.PAUSE, this._doTransition.bind(this));\n      this._eventManager.listen(this._player, _events.HTML5_EVENTS.WAITING, this._doTransition.bind(this));\n    }\n\n    /**\n     * Performs a state transition depends on the event which occurs in the player system.\n     * @param {FakeEvent} event - The event occurs in the player system.\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_doTransition',\n    value: function _doTransition(event) {\n      this._logger.debug('Do transition request', event);\n      var transition = this._transitions[this._curState.type];\n      if (typeof transition[event.type] === 'function') {\n        transition[event.type]();\n      }\n    }\n\n    /**\n     * Updates the player's state.\n     * @param {string} type - The type of the new state.\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_updateState',\n    value: function _updateState(type) {\n      if (this._curState.type !== type) {\n        this._curState.duration = Date.now() / 1000;\n        this._history.push(this._curState);\n        this._prevState = this._curState;\n        this._curState = new _state2.default(type);\n        this._logger.debug('Switch player state: from ' + this._prevState.type + ' to ' + this._curState.type);\n      }\n    }\n\n    /**\n     * Fires the playerStateChanged event after state has been changed.\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_dispatchEvent',\n    value: function _dispatchEvent() {\n      var event = new _fakeEvent2.default(_events.CUSTOM_EVENTS.PLAYER_STATE_CHANGED, {\n        'oldState': this._prevState,\n        'newState': this._curState\n      });\n      this._player.dispatchEvent(event);\n    }\n\n    /**\n     * Destroys the state manager.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._history = [];\n      this._eventManager.destroy();\n    }\n\n    /**\n     * Getter to the current state of the player.\n     * @public\n     * @returns {State} - The current state object\n     */\n\n  }, {\n    key: 'currentState',\n    get: function get() {\n      return this._curState;\n    }\n\n    /**\n     * Getter to the previous state of the player.\n     * @public\n     * @returns {State|null} - The previous state object, or null if such doesn't exists\n     */\n\n  }, {\n    key: 'previousState',\n    get: function get() {\n      return this._prevState;\n    }\n\n    /**\n     * Getter to the state history of the player.\n     * @public\n     * @returns {Array.<State>} - The full states history objects\n     */\n\n  }, {\n    key: 'history',\n    get: function get() {\n      return this._history;\n    }\n  }]);\n\n  return StateManager;\n}();\n\nexports.default = StateManager;\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * This class describes a player state.\n * @classdesc\n */\nvar State = function () {\n\n  /**\n   * @constructor\n   * @param {string} type - The type of the state.\n   */\n\n  /**\n   * The duration that the player was in this state.\n   * @member\n   * @type {number}\n   * @private\n   */\n  function State(type) {\n    _classCallCheck(this, State);\n\n    this.type = type;\n    this._duration = 0;\n    this._timestamp = Date.now() / 1000;\n  }\n\n  /**\n   * Getter for the duration of the state.\n   * @returns {number} - The duration of the state\n   */\n\n  /**\n   * The timestamp that this state started.\n   * @member\n   * @type {number}\n   * @private\n   */\n\n  /**\n   * The type of the state.\n   * Can be one of those describes in states.js\n   * @member\n   * @type {string}\n   * @public\n   */\n\n\n  _createClass(State, [{\n    key: \"duration\",\n    get: function get() {\n      return this._duration;\n    }\n\n    /**\n     * Setter for the duration of the state.\n     * @param {number} endTime - The timestamp of the next state.\n     */\n    ,\n    set: function set(endTime) {\n      this._duration = endTime - this._timestamp;\n    }\n  }]);\n\n  return State;\n}();\n\nexports.default = State;\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar TRACK_TYPES = {\n  VIDEO: \"video\",\n  AUDIO: \"audio\",\n  TEXT: \"text\"\n};\n\nexports.default = TRACK_TYPES;\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\r\n * js-logger - http://github.com/jonnyreeves/js-logger\r\n * Jonny Reeves, http://jonnyreeves.co.uk/\r\n * js-logger may be freely distributed under the MIT license.\r\n */\r\n(function (global) {\r\n\t\"use strict\";\r\n\r\n\t// Top level module for the global, static logger instance.\r\n\tvar Logger = { };\r\n\r\n\t// For those that are at home that are keeping score.\r\n\tLogger.VERSION = \"1.3.0\";\r\n\r\n\t// Function which handles all incoming log messages.\r\n\tvar logHandler;\r\n\r\n\t// Map of ContextualLogger instances by name; used by Logger.get() to return the same named instance.\r\n\tvar contextualLoggersByNameMap = {};\r\n\r\n\t// Polyfill for ES5's Function.bind.\r\n\tvar bind = function(scope, func) {\r\n\t\treturn function() {\r\n\t\t\treturn func.apply(scope, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\t// Super exciting object merger-matron 9000 adding another 100 bytes to your download.\r\n\tvar merge = function () {\r\n\t\tvar args = arguments, target = args[0], key, i;\r\n\t\tfor (i = 1; i < args.length; i++) {\r\n\t\t\tfor (key in args[i]) {\r\n\t\t\t\tif (!(key in target) && args[i].hasOwnProperty(key)) {\r\n\t\t\t\t\ttarget[key] = args[i][key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\t// Helper to define a logging level object; helps with optimisation.\r\n\tvar defineLogLevel = function(value, name) {\r\n\t\treturn { value: value, name: name };\r\n\t};\r\n\r\n\t// Predefined logging levels.\r\n\tLogger.DEBUG = defineLogLevel(1, 'DEBUG');\r\n\tLogger.INFO = defineLogLevel(2, 'INFO');\r\n\tLogger.TIME = defineLogLevel(3, 'TIME');\r\n\tLogger.WARN = defineLogLevel(4, 'WARN');\r\n\tLogger.ERROR = defineLogLevel(8, 'ERROR');\r\n\tLogger.OFF = defineLogLevel(99, 'OFF');\r\n\r\n\t// Inner class which performs the bulk of the work; ContextualLogger instances can be configured independently\r\n\t// of each other.\r\n\tvar ContextualLogger = function(defaultContext) {\r\n\t\tthis.context = defaultContext;\r\n\t\tthis.setLevel(defaultContext.filterLevel);\r\n\t\tthis.log = this.info;  // Convenience alias.\r\n\t};\r\n\r\n\tContextualLogger.prototype = {\r\n\t\t// Changes the current logging level for the logging instance.\r\n\t\tsetLevel: function (newLevel) {\r\n\t\t\t// Ensure the supplied Level object looks valid.\r\n\t\t\tif (newLevel && \"value\" in newLevel) {\r\n\t\t\t\tthis.context.filterLevel = newLevel;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Is the logger configured to output messages at the supplied level?\r\n\t\tenabledFor: function (lvl) {\r\n\t\t\tvar filterLevel = this.context.filterLevel;\r\n\t\t\treturn lvl.value >= filterLevel.value;\r\n\t\t},\r\n\r\n\t\tdebug: function () {\r\n\t\t\tthis.invoke(Logger.DEBUG, arguments);\r\n\t\t},\r\n\r\n\t\tinfo: function () {\r\n\t\t\tthis.invoke(Logger.INFO, arguments);\r\n\t\t},\r\n\r\n\t\twarn: function () {\r\n\t\t\tthis.invoke(Logger.WARN, arguments);\r\n\t\t},\r\n\r\n\t\terror: function () {\r\n\t\t\tthis.invoke(Logger.ERROR, arguments);\r\n\t\t},\r\n\r\n\t\ttime: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'start' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttimeEnd: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'end' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Invokes the logger callback if it's not being filtered.\r\n\t\tinvoke: function (level, msgArgs) {\r\n\t\t\tif (logHandler && this.enabledFor(level)) {\r\n\t\t\t\tlogHandler(msgArgs, merge({ level: level }, this.context));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Protected instance which all calls to the to level `Logger` module will be routed through.\r\n\tvar globalLogger = new ContextualLogger({ filterLevel: Logger.OFF });\r\n\r\n\t// Configure the global Logger instance.\r\n\t(function() {\r\n\t\t// Shortcut for optimisers.\r\n\t\tvar L = Logger;\r\n\r\n\t\tL.enabledFor = bind(globalLogger, globalLogger.enabledFor);\r\n\t\tL.debug = bind(globalLogger, globalLogger.debug);\r\n\t\tL.time = bind(globalLogger, globalLogger.time);\r\n\t\tL.timeEnd = bind(globalLogger, globalLogger.timeEnd);\r\n\t\tL.info = bind(globalLogger, globalLogger.info);\r\n\t\tL.warn = bind(globalLogger, globalLogger.warn);\r\n\t\tL.error = bind(globalLogger, globalLogger.error);\r\n\r\n\t\t// Don't forget the convenience alias!\r\n\t\tL.log = L.info;\r\n\t}());\r\n\r\n\t// Set the global logging handler.  The supplied function should expect two arguments, the first being an arguments\r\n\t// object with the supplied log messages and the second being a context object which contains a hash of stateful\r\n\t// parameters which the logging function can consume.\r\n\tLogger.setHandler = function (func) {\r\n\t\tlogHandler = func;\r\n\t};\r\n\r\n\t// Sets the global logging filter level which applies to *all* previously registered, and future Logger instances.\r\n\t// (note that named loggers (retrieved via `Logger.get`) can be configured independently if required).\r\n\tLogger.setLevel = function(level) {\r\n\t\t// Set the globalLogger's level.\r\n\t\tglobalLogger.setLevel(level);\r\n\r\n\t\t// Apply this level to all registered contextual loggers.\r\n\t\tfor (var key in contextualLoggersByNameMap) {\r\n\t\t\tif (contextualLoggersByNameMap.hasOwnProperty(key)) {\r\n\t\t\t\tcontextualLoggersByNameMap[key].setLevel(level);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Retrieve a ContextualLogger instance.  Note that named loggers automatically inherit the global logger's level,\r\n\t// default context and log handler.\r\n\tLogger.get = function (name) {\r\n\t\t// All logger instances are cached so they can be configured ahead of use.\r\n\t\treturn contextualLoggersByNameMap[name] ||\r\n\t\t\t(contextualLoggersByNameMap[name] = new ContextualLogger(merge({ name: name }, globalLogger.context)));\r\n\t};\r\n\r\n\t// CreateDefaultHandler returns a handler function which can be passed to `Logger.setHandler()` which will\r\n\t// write to the window's console object (if present); the optional options object can be used to customise the\r\n\t// formatter used to format each log message.\r\n\tLogger.createDefaultHandler = function (options) {\r\n\t\toptions = options || {};\r\n\r\n\t\toptions.formatter = options.formatter || function defaultMessageFormatter(messages, context) {\r\n\t\t\t// Prepend the logger's name to the log message for easy identification.\r\n\t\t\tif (context.name) {\r\n\t\t\t\tmessages.unshift(\"[\" + context.name + \"]\");\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Map of timestamps by timer labels used to track `#time` and `#timeEnd()` invocations in environments\r\n\t\t// that don't offer a native console method.\r\n\t\tvar timerStartTimeByLabelMap = {};\r\n\r\n\t\t// Support for IE8+ (and other, slightly more sane environments)\r\n\t\tvar invokeConsoleMethod = function (hdlr, messages) {\r\n\t\t\tFunction.prototype.apply.call(hdlr, console, messages);\r\n\t\t};\r\n\r\n\t\t// Check for the presence of a logger.\r\n\t\tif (typeof console === \"undefined\") {\r\n\t\t\treturn function () { /* no console */ };\r\n\t\t}\r\n\r\n\t\treturn function(messages, context) {\r\n\t\t\t// Convert arguments object to Array.\r\n\t\t\tmessages = Array.prototype.slice.call(messages);\r\n\r\n\t\t\tvar hdlr = console.log;\r\n\t\t\tvar timerLabel;\r\n\r\n\t\t\tif (context.level === Logger.TIME) {\r\n\t\t\t\ttimerLabel = (context.name ? '[' + context.name + '] ' : '') + messages[0];\r\n\r\n\t\t\t\tif (messages[1] === 'start') {\r\n\t\t\t\t\tif (console.time) {\r\n\t\t\t\t\t\tconsole.time(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttimerStartTimeByLabelMap[timerLabel] = new Date().getTime();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (console.timeEnd) {\r\n\t\t\t\t\t\tconsole.timeEnd(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinvokeConsoleMethod(hdlr, [ timerLabel + ': ' +\r\n\t\t\t\t\t\t\t(new Date().getTime() - timerStartTimeByLabelMap[timerLabel]) + 'ms' ]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Delegate through to custom warn/error loggers if present on the console.\r\n\t\t\t\tif (context.level === Logger.WARN && console.warn) {\r\n\t\t\t\t\thdlr = console.warn;\r\n\t\t\t\t} else if (context.level === Logger.ERROR && console.error) {\r\n\t\t\t\t\thdlr = console.error;\r\n\t\t\t\t} else if (context.level === Logger.INFO && console.info) {\r\n\t\t\t\t\thdlr = console.info;\r\n\t\t\t\t}\r\n\r\n\t\t\t\toptions.formatter(messages, context);\r\n\t\t\t\tinvokeConsoleMethod(hdlr, messages);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t// Configure and example a Default implementation which writes to the `window.console` (if present).  The\r\n\t// `options` hash can be used to configure the default logLevel and provide a custom message formatter.\r\n\tLogger.useDefaults = function(options) {\r\n\t\tLogger.setLevel(options && options.defaultLevel || Logger.DEBUG);\r\n\t\tLogger.setHandler(Logger.createDefaultHandler(options));\r\n\t};\r\n\r\n\t// Export to popular environments boilerplate.\r\n\tif (true) {\r\n\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (Logger),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t}\r\n\telse if (typeof module !== 'undefined' && module.exports) {\r\n\t\tmodule.exports = Logger;\r\n\t}\r\n\telse {\r\n\t\tLogger._prevLogger = global.Logger;\r\n\r\n\t\tLogger.noConflict = function () {\r\n\t\t\tglobal.Logger = Logger._prevLogger;\r\n\t\t\treturn Logger;\r\n\t\t};\r\n\r\n\t\tglobal.Logger = Logger;\r\n\t}\r\n}(this));\r\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"id\": 0,\n\t\"type\": \"VOD\",\n\t\"session\": {\n\t\t\"id\": \"\"\n\t},\n\t\"metadata\": {\n\t\t\"key\": \"value\"\n\t},\n\t\"playback\": {\n\t\t\"autoplay\": false,\n\t\t\"muted\": false,\n\t\t\"textLanguage\": \"en\",\n\t\t\"audioLanguage\": \"en\",\n\t\t\"mediaSourceAdapterPriority\": [\n\t\t\t{\n\t\t\t\t\"engine\": \"html5\",\n\t\t\t\t\"mediaSourceAdapter\": \"hls\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"engine\": \"html5\",\n\t\t\t\t\"mediaSourceAdapter\": \"dash\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"engine\": \"html5\",\n\t\t\t\t\"mediaSourceAdapter\": \"native\"\n\t\t\t}\n\t\t]\n\t},\n\t\"plugins\": {}\n};\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// playkit.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 90d5511d8988c91bb03b","//@flow\n\n/**\n * General track representation of the player.\n * @classdesc\n */\nexport default class Track {\n  /**\n   * The id of the track.\n   * @member\n   * @type {string}\n   * @private\n   */\n  _id: ?string;\n  /**\n   * The active mode of the track.\n   * @member\n   * @type {boolean}\n   * @private\n   */\n  _active: boolean;\n  /**\n   * The label of the track.\n   * @member\n   * @type {string}\n   * @private\n   */\n  _label: string;\n  /**\n   * The language of the track.\n   * @member\n   * @type {string}\n   * @private\n   */\n  _language: string;\n  /**\n   * The index of the track.\n   * @member\n   * @type {number}\n   * @private\n   */\n  _index: number;\n\n  /**\n   * Getter for the track id.\n   * @public\n   * @returns {?string} - The track id.\n   */\n  get id(): ?string {\n    return this._id;\n  }\n\n  /**\n   * Getter for the active mode of the track.\n   * @public\n   * @returns {boolean} - The active mode of the track.\n   */\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * Setter for the active mode of the track.\n   * @public\n   * @param {boolean} value - Whether the track is active or not.\n   */\n  set active(value: boolean) {\n    this._active = value;\n  }\n\n  /**\n   * Getter for the label of the track.\n   * @public\n   * @returns {string} - The label of the track.\n   */\n  get label(): string {\n    return this._label;\n  }\n\n  /**\n   * Getter for the language of the track.\n   * @public\n   * @returns {string} - The language of the track.\n   */\n  get language(): string {\n    return this._language;\n  }\n\n  /**\n   * Getter for the index of the track.\n   * @public\n   * @returns {number} - The index of the track.\n   */\n  get index(): number {\n    return this._index;\n  }\n\n  /**\n   * @constructor\n   * @param {Object} settings - The track settings object.\n   */\n  constructor(settings: Object = {}) {\n    this._id = settings.id;\n    this._active = settings.active;\n    this._label = settings.label;\n    this._language = settings.language;\n    this._index = settings.index;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./track/track.js","//@flow\nimport * as JsLogger from 'js-logger';\n\nconst LOG_LEVEL: { [level: string]: Object } = {\n  \"DEBUG\": JsLogger.DEBUG,\n  \"INFO\": JsLogger.INFO,\n  \"TIME\": JsLogger.TIME,\n  \"WARN\": JsLogger.WARN,\n  \"ERROR\": JsLogger.ERROR,\n  \"OFF\": JsLogger.OFF\n};\n\nclass LoggerFactory {\n  constructor(options?: Object) {\n    JsLogger.useDefaults(options || {});\n  }\n\n  getLogger(name?: string) {\n    if (!name) {\n      return JsLogger;\n    }\n    return JsLogger.get(name);\n  }\n}\n\nconst lf = new LoggerFactory({defaultLevel: JsLogger.DEBUG});\n\nexport default lf;\nexport {LOG_LEVEL};\n\n\n\n// WEBPACK FOOTER //\n// ./utils/logger.js","//@flow\n/**\n * Create an Event work-alike object based on the dictionary.\n * The event should contain all of the same properties from the dict.\n * @param {string} type -\n * @param {Object=} opt_dict -\n * @constructor\n * @extends {Event}\n */\nclass FakeEvent {\n  /** @const {boolean} */\n  bubbles: boolean;\n\n  /** @const {boolean} */\n  cancelable: boolean;\n\n  /** @const {boolean} */\n  defaultPrevented: boolean;\n\n  /**\n   * According to MDN, Chrome uses high-res timers instead of epoch time.\n   * Follow suit so that timeStamps on FakeEvents use the same base as\n   * on native Events.\n   * @const {number}\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Event/timeStamp\n   */\n  timeStamp: number | Date;\n\n  /** @const {string} */\n  type: string;\n\n  /** @const {boolean} */\n  isTrusted: boolean;\n\n  /** @type {EventTarget} */\n  currentTarget: any;\n\n  /** @type {EventTarget} */\n  target: any;\n\n  /**\n   * Non-standard property read by FakeEventTarget to stop processing listeners.\n   * @type {boolean}\n   */\n  stopped: boolean;\n\n  payload: any;\n\n  constructor(type: string, payload: any) {\n    // These Properties below cannot be set by dict.  They are all provided for\n    // compatibility with native events.\n\n    /** @const {boolean} */\n    this.bubbles = false;\n\n    /** @const {boolean} */\n    this.cancelable = false;\n\n    /** @const {boolean} */\n    this.defaultPrevented = false;\n\n    /**\n     * According to MDN, Chrome uses high-res timers instead of epoch time.\n     * Follow suit so that timeStamps on FakeEvents use the same base as\n     * on native Events.\n     * @const {number}\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Event/timeStamp\n     */\n    this.timeStamp = window.performance ? window.performance.now() : Date.now();\n\n    /** @const {string} */\n    this.type = type;\n\n    /** @const {boolean} */\n    this.isTrusted = false;\n\n    /** @type {EventTarget} */\n    this.currentTarget = null;\n\n    /** @type {EventTarget} */\n    this.target = null;\n\n\n    /**\n     * Non-standard property read by FakeEventTarget to stop processing listeners.\n     * @type {boolean}\n     */\n    this.stopped = false;\n\n    this.payload = payload;\n  }\n\n  /**\n   * Does nothing, since FakeEvents have no default.  Provided for compatibility\n   * with native Events.\n   * @override\n   */\n  preventDefault() {\n  }\n\n  /**\n   * Stops processing event listeners for this event.  Provided for compatibility\n   * with native Events.\n   * @override\n   */\n  stopImmediatePropagation() {\n    this.stopped = true;\n  }\n\n  /**\n   * Does nothing, since FakeEvents do not bubble.  Provided for compatibility\n   * with native Events.\n   * @override\n   */\n  stopPropagation() {\n  }\n}\n\nexport default FakeEvent;\n\n\n\n// WEBPACK FOOTER //\n// ./event/fake-event.js","//@flow\nimport Track from './track'\n\n/**\n * Audio track representation of the player.\n * @classdesc\n */\nexport default class AudioTrack extends Track {}\n\n\n\n// WEBPACK FOOTER //\n// ./track/audio-track.js","//@flow\nimport Track from './track'\n\n/**\n * Text track representation of the player.\n * @classdesc\n */\nexport default class TextTrack extends Track {\n  /**\n   * The kind of the text track:\n   * subtitles/captions/metadata.\n   * @member\n   * @type {string}\n   * @private\n   */\n  _kind: string;\n\n  /**\n   * Getter for the kind of the text track.\n   * @public\n   * @returns {string} - The kind of the text track.\n   */\n  get kind(): string {\n    return this._kind;\n  }\n\n  /**\n   * @constructor\n   * @param {Object} settings - The track settings object.\n   */\n  constructor(settings: Object = {}) {\n    super(settings);\n    this._kind = settings.kind;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./track/text-track.js","//@flow\nimport Track from './track'\n\n/**\n * Video track representation of the player.\n * @classdesc\n */\nexport default class VideoTrack extends Track {\n  /**\n   * The kind of the text track:\n   * subtitles/captions/metadata.\n   * @member\n   * @type {string}\n   * @private\n   */\n  _bandwidth: string;\n\n  /**\n   * Getter for the kind of the text track.\n   * @public\n   * @returns {string} - The kind of the text track.\n   */\n  get bandwidth(): string {\n    return this._bandwidth;\n  }\n\n  /**\n   * @constructor\n   * @param {Object} settings - The track settings object.\n   */\n  constructor(settings: Object = {}) {\n    super(settings);\n    this._bandwidth = settings.bandwidth;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./track/video-track.js","//@flow\nimport MultiMap from '../utils/multi-map'\nimport FakeEvent from './fake-event'\n\n/**\n * Creates a new EventManager. An EventManager maintains a collection of \"event\n * bindings\" between event targets and event listeners.\n *\n * @struct\n * @constructor\n * @implements {IDestroyable}\n */\nclass EventManager {\n  _bindingMap: MultiMap<Binding_> | null;\n\n  constructor() {\n    /**\n     * Maps an event type to an array of event bindings.\n     * @private {MultiMap.<!EventManager.Binding_>}\n     */\n    this._bindingMap = new MultiMap();\n  }\n\n  /**\n   * Detaches all event listeners.\n   * @override\n   */\n  destroy() {\n    this.removeAll();\n    this._bindingMap = null;\n    return Promise.resolve();\n  }\n\n\n  /**\n   * Attaches an event listener to an event target.\n   * @param {EventTarget} target The event target.\n   * @param {string} type The event type.\n   * @param {EventManager.ListenerType} listener The event listener.\n   * @returns {void}\n   */\n  listen(target: any, type: string, listener: ListenerType): void {\n    let binding = new Binding_(target, type, listener);\n    if (this._bindingMap) {\n      this._bindingMap.push(type, binding);\n    }\n  }\n\n\n  /**\n   * Detaches an event listener from an event target.\n   * @param {EventTarget} target The event target.\n   * @param {string} type The event type.\n   * @returns {void}\n   */\n  unlisten(target: any, type: string): void {\n    if (this._bindingMap) {\n      let list = this._bindingMap.get(type);\n\n      for (let i = 0; i < list.length; ++i) {\n        let binding = list[i];\n\n        if (binding.target == target) {\n          binding.unlisten();\n          if (this._bindingMap) {\n            this._bindingMap.remove(type, binding);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Detaches all event listeners from all targets.\n   * @returns {void}\n   */\n  removeAll(): void {\n    if (this._bindingMap) {\n      let listeners = this._bindingMap.getAll();\n\n      for (let listener of listeners) {\n        listener.unlisten();\n      }\n      if (this._bindingMap) {\n        this._bindingMap.clear();\n      }\n    }\n  }\n}\n\n/**\n * @typedef {function(!Event)}\n */\ntype ListenerType = (event: FakeEvent) => any;\n\n/**\n * Creates a new Binding_ and attaches the event listener to the event target.\n * @param {EventTarget} target The event target.\n * @param {string} type The event type.\n * @param {EventManager.ListenerType} listener The event listener.\n * @constructor\n * @private\n */\nclass Binding_ {\n  target: any;\n  type: string;\n  listener: ?ListenerType;\n\n  constructor(target, type, listener) {\n    /** @type {EventTarget} */\n    this.target = target;\n\n    /** @type {string} */\n    this.type = type;\n\n    /** @type {?EventManager.ListenerType} */\n    this.listener = listener;\n\n    this.target.addEventListener(type, listener, false);\n  }\n\n\n  /**\n   * Detaches the event listener from the event target. This does nothing if the\n   * event listener is already detached.\n   * @returns {void}\n   */\n  unlisten(): void {\n    if (!this.target)\n      return;\n\n    this.target.removeEventListener(this.type, this.listener, false);\n\n    this.target = null;\n    this.listener = null;\n  }\n}\n\nexport default EventManager;\n\n\n\n// WEBPACK FOOTER //\n// ./event/event-manager.js","//@flow\nimport {merge} from '../utils/util'\n\nconst HTML5_EVENTS: { [event: string]: string } = {\n  /**\n   * Fires when the loading of an audio/video is aborted\n   */\n  ABORT: 'abort',\n  /**\n   * Fires when the browser can start playing the audio/video\n   */\n  CAN_PLAY: 'canplay',\n  /**\n   * Fires when the browser can play through the audio/video without stopping for buffering\n   */\n  CAN_PLAY_THROUGH: 'canplaythrough',\n  /**\n   * Fires when the duration of the audio/video is changed\n   */\n  DURATION_CHANGE: 'durationchange',\n  /**\n   * Fires when the current playlist is empty\n   */\n  EMPTIED: 'emptied',\n  /**\n   * Fires when the current playlist is ended\n   */\n  ENDED: 'ended',\n  /**\n   * Fires when an error occurred during the loading of an audio/video\n   */\n  ERROR: 'error',\n  /**\n   * Fires when the browser has loaded the current frame of the audio/video\n   */\n  LOADED_DATA: 'loadeddata',\n  /**\n   * Fires when the browser has loaded meta data for the audio/video\n   */\n  LOADED_METADATA: 'loadedmetadata',\n  /**\n   * Fires when the browser starts looking for the audio/video\n   */\n  LOAD_START: 'loadstart',\n  /**\n   * Fires when the audio/video has been paused\n   */\n  PAUSE: 'pause',\n  /**\n   * Fires when the audio/video has been started or is no longer paused\n   */\n  PLAY: 'play',\n  /**\n   * Fires when the audio/video is playing after having been paused or stopped for buffering\n   */\n  PLAYING: 'playing',\n  /**\n   * Fires when the browser is downloading the audio/video\n   */\n  PROGRESS: 'progress',\n  /**\n   * Fires when the playing speed of the audio/video is changed\n   */\n  RATE_CHANGE: 'ratechange',\n  /**\n   * Fires when the user is finished moving/skipping to a new position in the audio/video\n   */\n  SEEKED: 'seeked',\n  /**\n   * Fires when the user starts moving/skipping to a new position in the audio/video\n   */\n  SEEKING: 'seeking',\n  /**\n   * Fires when the browser is trying to get media data, but data is not available\n   */\n  STALLED: 'stalled',\n  /**\n   * Fires when the browser is intentionally not getting media data\n   */\n  SUSPEND: 'suspend',\n  /**\n   * Fires when the current playback position has changed\n   */\n  TIME_UPDATE: 'timeupdate',\n  /**\n   * Fires when the volume has been changed\n   */\n  VOLUME_CHANGE: 'volumechange',\n  /**\n   * Fires when the video stops because it needs to buffer the next frame\n   */\n  WAITING: 'waiting',\n};\n\nconst CUSTOM_EVENTS: { [event: string]: string } = {\n  /**\n   * Fires when the active video track has been changed\n   */\n  VIDEO_TRACK_CHANGED: 'videotrackchanged',\n  /**\n   * Fires when the active audio track has been changed\n   */\n  AUDIO_TRACK_CHANGED: 'audiotrackchanged',\n  /**\n   * Fires when the active text track has been changed\n   */\n  TEXT_TRACK_CHANGED: 'texttrackchanged',\n  /**\n   * Fires when the player tracks have been changed\n   */\n  TRACKS_CHANGED: 'trackschanged',\n  /**\n   * Fires when the player state has been changed\n   */\n  PLAYER_STATE_CHANGED: 'playerstatechanged',\n  /**\n   * Fires on the first play\n   */\n  FIRST_PLAY: 'firstplay',\n  /**\n   * Fires when the player has selected the source to play\n   */\n  SOURCE_SELECTED: 'sourceselected'\n};\n\nconst PLAYER_EVENTS: { [event: string]: string } = merge([HTML5_EVENTS, CUSTOM_EVENTS]);\n\nexport {PLAYER_EVENTS, HTML5_EVENTS, CUSTOM_EVENTS};\n\n\n\n// WEBPACK FOOTER //\n// ./event/events.js","//@flow\nimport EventManager from './event/event-manager'\nimport FakeEvent from './event/fake-event'\nimport FakeEventTarget from './event/fake-event-target'\nimport {PLAYER_EVENTS as PlayerEvents, HTML5_EVENTS as Html5Events, CUSTOM_EVENTS as CustomEvents} from './event/events'\nimport PlayerStates from './state/state-types'\nimport {isNumber, isFloat, merge} from './utils/util'\nimport LoggerFactory from './utils/logger'\nimport Html5 from './engines/html5/html5'\nimport PluginManager from './plugin/plugin-manager'\nimport StateManager from './state/state-manager'\nimport TrackTypes from './track/track-types'\nimport Track from './track/track'\nimport VideoTrack from './track/video-track'\nimport AudioTrack from './track/audio-track'\nimport TextTrack from './track/text-track'\nimport DefaultPlayerConfig from './default-config.json'\n\n/**\n * The HTML5 player class.\n * @classdesc\n */\nexport default class Player extends FakeEventTarget {\n  /**\n   * The player class logger.\n   * @type {any}\n   * @static\n   * @private\n   */\n  static _logger: any = LoggerFactory.getLogger('Player');\n  /**\n   * The plugin manager of the player.\n   * @type {PluginManager}\n   * @private\n   */\n  _pluginManager: PluginManager;\n  /**\n   * The event manager of the player.\n   * @type {EventManager}\n   * @private\n   */\n  _eventManager: EventManager;\n  /**\n   * The runtime configuration of the player.\n   * @type {Object}\n   * @private\n   */\n  _config: Object;\n  /**\n   * The playback engine.\n   * @type {IEngine}\n   * @private\n   */\n  _engine: IEngine;\n  /**\n   * The state manager of the player.\n   * @type {StateManager}\n   * @private\n   */\n  _stateManager: StateManager;\n  /**\n   * The tracks of the player.\n   * @type {Array<Track>}\n   * @private\n   */\n  _tracks: Array<Track>;\n  /**\n   * The player ready promise\n   * @type {Promise<*>}\n   * @private\n   */\n  _readyPromise: ?Promise<*>;\n  /**\n   * Whether the play is the first or not\n   * @type {boolean}\n   * @private\n   */\n  _firstPlay: boolean;\n  /**\n   * The available engines of the player.\n   * @type {Array<typeof IEngine>}\n   * @private\n   */\n  static _engines: Array<typeof IEngine> = [Html5];\n\n  /**\n   * Register an engine in the player cache.\n   * @param {IEngine} engine - The engine to register.\n   * @static\n   * @public\n   * @returns {void}\n   */\n  static registerEngine(engine: typeof IEngine): void {\n    if (!Player._engines.includes(engine)) {\n      Player._logger.debug(`Engine <${engine.id}> has been registered successfully`);\n      Player._engines.push(engine);\n    } else {\n      Player._logger.debug(`Engine <${engine.id}> is already registered, do not register again`);\n    }\n  }\n\n  /**\n   * @param {Object} config - The configuration for the player instance.\n   * @constructor\n   */\n  constructor(config: Object) {\n    super();\n    this._tracks = [];\n    this._firstPlay = true;\n    this._stateManager = new StateManager(this);\n    this._pluginManager = new PluginManager();\n    this._eventManager = new EventManager();\n    this._readyPromise = new Promise((resolve, reject) => {\n      this._eventManager.listen(this, CustomEvents.TRACKS_CHANGED, () => {\n        resolve();\n      });\n      this._eventManager.listen(this, Html5Events.ERROR, reject);\n    });\n    this.configure(config);\n  }\n\n  /**\n   * Configures the player according to given configuration.\n   * @param {Object} config - The configuration for the player instance.\n   * @returns {void}\n   */\n  configure(config: Object): void {\n    this._config = merge([config, Player._defaultConfig()]);\n    if (this._selectEngine()) {\n      this._attachMedia();\n      this._loadPlugins();\n      this._handlePlaybackConfig();\n    } else {\n      Player._logger.warn(\"No playable engine was found to play the given sources\");\n    }\n  }\n\n  /**\n   * Destroys the player.\n   * @returns {void}\n   * @public\n   */\n  destroy(): void {\n    this._engine.destroy();\n    this._eventManager.destroy();\n    this._pluginManager.destroy();\n    this._stateManager.destroy();\n    this._config = {};\n    this._tracks = [];\n    this._readyPromise = null;\n    this._firstPlay = true;\n  }\n\n  /**\n   * @returns {Object} - The default configuration of the player.\n   * @private\n   * @static\n   */\n  static _defaultConfig(): Object {\n    return DefaultPlayerConfig;\n  }\n\n  /**\n   * Loads the configured plugins.\n   * @private\n   * @returns {void}\n   */\n  _loadPlugins(): void {\n    let plugins = this._config.plugins;\n    for (let name in plugins) {\n      this._pluginManager.load(name, this, plugins[name]);\n    }\n  }\n\n  /**\n   * Select the engine to create based on the given configured sources.\n   * @private\n   * @returns {boolean} - Whether a proper engine was found to play the given sources.\n   */\n  _selectEngine(): boolean {\n    let engineSelected = false;\n    if (this._config.sources) {\n      if (this._config.playback && this._config.playback.mediaSourceAdapterPriority) {\n        engineSelected = this._selectEngineByPriority();\n      } else {\n        engineSelected = this._selectFirstEngineWhoCanPlay();\n      }\n    }\n    return engineSelected;\n  }\n\n  /**\n   * Selects an <engine, adapter> tuple to play a source according to a given priority.\n   * @return {boolean} - Whether a proper <engine, adapter> was found to play the given sources\n   * according to the priority.\n   * @private\n   * @returns {void}\n   */\n  _selectEngineByPriority(): boolean {\n    let mediaSourceAdapterPriority = this._config.playback.mediaSourceAdapterPriority;\n    let sources = this._config.sources;\n    for (let priority of mediaSourceAdapterPriority) {\n      let engineId = priority.engine.toLowerCase();\n      let mediaSourceAdapterId = priority.mediaSourceAdapter.toLowerCase();\n      let engine = Player._engines.find((engine) => {\n        return (engine.id === engineId);\n      });\n      if (engine) {\n        let canPlayResult = engine.canPlayType(sources, mediaSourceAdapterId);\n        let canPlay = canPlayResult.canPlay;\n        let source = canPlayResult.source;\n        if (canPlay && source) {\n          this._loadEngine(engine, source);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Selects the first <engine, adapter> tuple that can play a source.\n   * @return {boolean} - Whether a proper <engine, adapter> was found to play the given sources.\n   * @private\n   * @returns {void}\n   */\n  _selectFirstEngineWhoCanPlay(): boolean {\n    let sources = this._config.sources;\n    for (let i = 0; i < Player._engines.length; i++) {\n      let engine = Player._engines[i];\n      let canPlayResult = engine.canPlayType(sources, '');\n      let canPlay = canPlayResult.canPlay;\n      let source = canPlayResult.source;\n      if (canPlay && source) {\n        this._loadEngine(engine, source);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Loads the selected engine.\n   * @param {IEngine} engine - The selected engine.\n   * @param {Source} source - The selected source object.\n   * @private\n   * @returns {void}\n   */\n  _loadEngine(engine: typeof IEngine, source: Source): void {\n    this.dispatchEvent(new FakeEvent(CustomEvents.SOURCE_SELECTED, {selectedSource: source}));\n    this._engine = engine.createEngine(source, this._config);\n    if (this._config.preload === \"auto\") {\n      this.load();\n    }\n  }\n\n  /**\n   * Listen to all HTML5 defined events and trigger them on the player\n   * @private\n   * @returns {void}\n   */\n  _attachMedia(): void {\n    if (this._engine) {\n      for (let playerEvent in Html5Events) {\n        this._eventManager.listen(this._engine, Html5Events[playerEvent], (event: FakeEvent) => {\n          return this.dispatchEvent(event);\n        });\n      }\n      this._eventManager.listen(this._engine, CustomEvents.VIDEO_TRACK_CHANGED, (event: FakeEvent) => {\n        this._markActiveTrack(event.payload.selectedVideoTrack);\n        return this.dispatchEvent(event);\n      });\n      this._eventManager.listen(this._engine, CustomEvents.AUDIO_TRACK_CHANGED, (event: FakeEvent) => {\n        this._markActiveTrack(event.payload.selectedAudioTrack);\n        return this.dispatchEvent(event);\n      });\n      this._eventManager.listen(this._engine, CustomEvents.TEXT_TRACK_CHANGED, (event: FakeEvent) => {\n        this._markActiveTrack(event.payload.selectedTextTrack);\n        return this.dispatchEvent(event);\n      });\n      this._eventManager.listen(this, Html5Events.PLAY, this._onPlay.bind(this));\n    }\n  }\n\n  _handlePlaybackConfig(): void {\n    if (this._config.playback) {\n      if (this._config.playback.muted) {\n        this.muted = true;\n      }\n      if (this._config.playback.autoplay) {\n        this.play();\n      }\n    }\n  }\n\n  /**\n   * Returns the tracks according to the filter. if no filter given returns the all tracks.\n   * @function getTracks\n   * @param {string} [type] - a tracks filter, should be 'video', 'audio' or 'text'.\n   * @returns {Array<Track>} - The parsed tracks.\n   * @public\n   */\n  getTracks(type?: string): Array<Track> {\n    return this._getTracksByType(type);\n  }\n\n  /**\n   * Returns the tracks according to the filter. if no filter given returns the all tracks.\n   * @function _getTracksByType\n   * @param {string} [type] - a tracks filter, should be 'video', 'audio' or 'text'.\n   * @returns {Array<Track>} - The parsed tracks.\n   * @private\n   */\n  _getTracksByType(type?: string): Array<Track> {\n    return !type ? this._tracks : this._tracks.filter((track: Track) => {\n      if (type === TrackTypes.VIDEO) {\n        return track instanceof VideoTrack;\n      } else if (type === TrackTypes.AUDIO) {\n        return track instanceof AudioTrack;\n      } else if (type === TrackTypes.TEXT) {\n        return track instanceof TextTrack;\n      } else {\n        return true;\n      }\n    });\n  }\n\n  /**\n   * Select a track\n   * @function selectTrack\n   * @param {Track} track - the track to select\n   * @returns {void}\n   * @public\n   */\n  selectTrack(track: Track): void {\n    if (this._engine) {\n      if (track instanceof VideoTrack) {\n        this._engine.selectVideoTrack(track);\n      } else if (track instanceof AudioTrack) {\n        this._engine.selectAudioTrack(track);\n      } else if (track instanceof TextTrack) {\n        this._engine.selectTextTrack(track);\n      }\n    }\n  }\n\n  /**\n   * Enables adaptive bitrate switching.\n   * @function enableAdaptiveBitrate\n   * @returns {void}\n   * @public\n   */\n  enableAdaptiveBitrate(): void {\n    if (this._engine) {\n      this._engine.enableAdaptiveBitrate();\n    }\n  }\n\n  /**\n   * Mark the selected track as active\n   * @function _markActiveTrack\n   * @param {Track} track - the track to mark\n   * @returns {void}\n   * @private\n   */\n  _markActiveTrack(track: Track) {\n    let type;\n    if (track instanceof VideoTrack) {\n      type = TrackTypes.VIDEO;\n    } else if (track instanceof AudioTrack) {\n      type = TrackTypes.AUDIO;\n    } else if (track instanceof TextTrack) {\n      type = TrackTypes.TEXT;\n    }\n    if (type) {\n      let tracks = this.getTracks(type);\n      for (let i = 0; i < tracks.length; i++) {\n        tracks[i].active = track.index === i;\n      }\n    }\n  }\n\n  /**\n   * @function _onPlay\n   * @return {void}\n   * @private\n   */\n  _onPlay(): void {\n    if (this._firstPlay) {\n      this._firstPlay = false;\n      this.dispatchEvent(new FakeEvent(CustomEvents.FIRST_PLAY));\n    }\n  }\n\n  /**\n   * Get the player config.\n   * @returns {Object} - The player configuration.\n   * @public\n   */\n  get config(): Object {\n    return this._config;\n  }\n\n  /**\n   * Set player session id\n   * @param {string} sessionId - the player session id to set\n   * @returns {void}\n   * @public\n   */\n  set sessionId(sessionId: string): void {\n    this._config.session = this._config.session || {};\n    this._config.session.id = sessionId;\n  }\n\n  //  <editor-fold desc=\"Playback Interface\">\n  /**\n   * The player readiness\n   * @public\n   * @returns {Promise<*>} - The ready promise\n   */\n  ready(): Promise<*> {\n    return this._readyPromise ? this._readyPromise : Promise.resolve();\n  }\n\n  /**\n   * Load media\n   * @public\n   * @returns {void}\n   */\n  load(): void {\n    if (this._engine) {\n      this._engine.load().then((data) => {\n        this._tracks = data.tracks;\n        this.dispatchEvent(new FakeEvent(CustomEvents.TRACKS_CHANGED, {tracks: this._tracks}));\n      }).catch((error) => {\n        this.dispatchEvent(new FakeEvent(Html5Events.ERROR, error));\n      });\n    }\n  }\n\n  /**\n   * Start/resume playback.\n   * @returns {void}\n   * @public\n   */\n  play(): void {\n    if (this._engine) {\n      if (this._engine.src) {\n        this._engine.play();\n      } else {\n        this.load();\n        this.ready().then(() => {\n          this._engine.play();\n        });\n      }\n    }\n  }\n\n  /**\n   * Pause playback.\n   * @returns {void}\n   * @public\n   */\n  pause(): void {\n    if (this._engine) {\n      return this._engine.pause();\n    }\n  }\n\n  /**\n   * Set the current time in seconds.\n   * @param {Number} to - The number to set in seconds.\n   * @public\n   */\n  set currentTime(to: number): void {\n    if (this._engine) {\n      if (isNumber(to)) {\n        let boundedTo = to;\n        if (to < 0) {\n          boundedTo = 0;\n        }\n        if (boundedTo > this._engine.duration) {\n          boundedTo = this._engine.duration;\n        }\n        this._engine.currentTime = boundedTo;\n      }\n    }\n  }\n\n  /**\n   * Get the current time in seconds.\n   * @returns {?Number} - The playback current time.\n   * @public\n   */\n  get currentTime(): ?number {\n    if (this._engine) {\n      return this._engine.currentTime;\n    }\n  }\n\n  /**\n   * Get the duration in seconds.\n   * @returns {?Number} - The playback duration.\n   * @public\n   */\n  get duration(): ?number {\n    if (this._engine) {\n      return this._engine.duration;\n    }\n  }\n\n  /**\n   * Set playback volume.\n   * @param {Number} vol - The volume to set.\n   * @returns {void}\n   * @public\n   */\n  set volume(vol: number): void {\n    if (this._engine) {\n      if (isFloat(vol)) {\n        let boundedVol = vol;\n        if (boundedVol < 0) {\n          boundedVol = 0;\n        }\n        if (boundedVol > 1) {\n          boundedVol = 1;\n        }\n        this._engine.volume = boundedVol;\n      }\n    }\n  }\n\n  /**\n   * Get playback volume.\n   * @returns {?Number} - The playback volume.\n   * @public\n   */\n  get volume(): ?number {\n    if (this._engine) {\n      return this._engine.volume;\n    }\n  }\n\n  // </editor-fold>\n\n  // <editor-fold desc=\"State\">\n  /**\n   * Get paused state.\n   * @returns {?boolean} - Whether the video is paused or not.\n   * @public\n   */\n  get paused(): ?boolean {\n    if (this._engine) {\n      return this._engine.paused;\n    }\n  }\n\n  /**\n   * Get seeking state.\n   * @returns {?boolean} - Whether the video is seeking or not.\n   * @public\n   */\n  get seeking(): ?boolean {\n    if (this._engine) {\n      return this._engine.seeking;\n    }\n  }\n\n  buffered() {\n  }\n\n  /**\n   * Set player muted state.\n   * @param {boolean} mute - The mute value.\n   * @returns {void}\n   * @public\n   */\n  set muted(mute: boolean): void {\n    if (this._engine) {\n      this._engine.muted = mute;\n    }\n  }\n\n  /**\n   * Get player muted state.\n   * @returns {?boolean} - Whether the video is muted or not.\n   * @public\n   */\n  get muted(): ?boolean {\n    if (this._engine) {\n      return this._engine.muted;\n    }\n  }\n\n  /**\n   * Get the player source.\n   * @returns {?string} - The current source of the player.\n   * @public\n   */\n  get src(): ?string {\n    if (this._engine) {\n      return this._engine.src;\n    }\n  }\n\n  /**\n   * Get the player events.\n   * @returns {Object} - The events of the player.\n   * @public\n   */\n  get Event(): { [event: string]: string } {\n    return PlayerEvents;\n  }\n\n  /**\n   * Get the player states.\n   * @returns {Object} - The states of the player.\n   * @public\n   */\n  get State(): { [state: string]: string } {\n    return PlayerStates;\n  }\n\n  /**\n   * Get the player tracks types.\n   * @returns {Object} - The tracks types of the player.\n   * @public\n   */\n  get Track(): { [track: string]: string } {\n    return TrackTypes;\n  }\n\n// </editor-fold>\n}\n\nconst registerEngine = Player.registerEngine;\nexport {registerEngine};\n\n\n\n// WEBPACK FOOTER //\n// ./player.js","//@flow\nimport FakeEvent from './fake-event'\nimport MultiMap from '../utils/multi-map'\n\n/**\n * A work-alike for EventTarget.  Only DOM elements may be true EventTargets,\n * but this can be used as a base class to provide event dispatch to non-DOM\n * classes.  Only FakeEvents should be dispatched.\n *\n * @struct\n * @constructor\n * @implements {EventTarget}\n * @export\n */\nclass FakeEventTarget {\n  _listeners: MultiMap<ListenerType>;\n  dispatchTarget: FakeEventTarget;\n\n  constructor() {\n    /**\n     * @private {!MultiMap.<FakeEventTarget.ListenerType>}\n     */\n    this._listeners = new MultiMap();\n\n    /**\n     * The target of all dispatched events.  Defaults to |this|.\n     * @type {EventTarget}\n     */\n    this.dispatchTarget = this;\n  }\n\n  /**\n   * Add an event listener to this object.\n   *\n   * @param {string} type The event type to listen for.\n   * @param {FakeEventTarget.ListenerType} listener The callback or\n   *   listener object to invoke.\n   * @param {boolean=} opt_capturing Ignored.  FakeEventTargets do not have\n   *   parents, so events neither capture nor bubble.\n   * @override\n   * @export\n   */\n  addEventListener(type: string, listener: ListenerType) {\n    this._listeners.push(type, listener);\n  }\n\n  /**\n   * Remove an event listener from this object.\n   *\n   * @param {string} type The event type for which you wish to remove a listener.\n   * @param {FakeEventTarget.ListenerType} listener The callback or\n   *   listener object to remove.\n   * @param {boolean=} opt_capturing Ignored.  FakeEventTargets do not have\n   *   parents, so events neither capture nor bubble.\n   * @override\n   * @export\n   */\n  removeEventListener(type: string, listener: ListenerType) {\n    this._listeners.remove(type, listener);\n  }\n\n  /**\n   * Dispatch an event from this object.\n   *\n   * @param {!Event} event The event to be dispatched from this object.\n   * @return {boolean} True if the default action was prevented.\n   * @override\n   * @export\n   */\n  dispatchEvent(event: FakeEvent) {\n    // In many browsers, it is complex to overwrite properties of actual Events.\n    // Here we expect only to dispatch FakeEvents, which are simpler.\n    //goog.asserts.assert(event instanceof FakeEvent,\n    //    'FakeEventTarget can only dispatch FakeEvents!');\n\n    let list = this._listeners.get(event.type) || [];\n\n    for (let i = 0; i < list.length; ++i) {\n      // Do this every time, since events can be re-dispatched from handlers.\n      event.target = this.dispatchTarget;\n      event.currentTarget = this.dispatchTarget;\n\n      let listener = list[i];\n      try {\n        if (listener.handleEvent) {\n          listener.handleEvent(event);\n        } else {\n          listener.call(this, event);\n        }\n      } catch (exception) {\n        // Exceptions during event handlers should not affect the caller,\n        // but should appear on the console as uncaught, according to MDN:\n        // http://goo.gl/N6Ff27\n        // TODO: add log\n      }\n\n      if (event.stopped) {\n        break;\n      }\n    }\n\n    return event.defaultPrevented;\n  }\n}\n\n/**\n * These are the listener types defined in the closure extern for EventTarget.\n * @typedef {EventListener|function(!Event):(boolean|undefined)}\n */\ndeclare function ListenerType(event: FakeEvent): (boolean | void);\n\nexport default FakeEventTarget;\n\n\n\n// WEBPACK FOOTER //\n// ./event/fake-event-target.js","//@flow\nexport default class PlayerError {\n  static TYPE: {[name: string]: Object} = {\n    NOT_REGISTERED_PLUGIN: {\n      name: \"PluginNotRegisteredException\",\n      message: function (name) {\n        return `Cannot load ${name} plugin. Name not found in the registry`;\n      }\n    },\n    NOT_VALID_HANDLER: {\n      name: \"PluginHandlerIsNotValidException\",\n      message: function () {\n        return \"To activate plugin you must provide a class derived from BasePlugin\";\n      }\n    },\n    NOT_IMPLEMENTED_METHOD: {\n      name: \"NotImplementedException\",\n      message: function (method) {\n        return `${method} method not implemented`;\n      }\n    }\n  };\n\n  name: string;\n  message: string;\n\n  constructor(error: Object, param?: any) {\n    this.name = error.name;\n    this.message = error.message(param);\n  }\n\n  getError() {\n    return {\n      name: this.name,\n      message: this.message\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./utils/player-error.js","//@flow\n\"use strict\";\n\n/**\n * @param {number} n - A certain number\n * @returns {boolean} - If the input is a number\n */\nfunction isNumber(n: number): boolean {\n  return Number(n) === n;\n}\n\n/**\n * @param {number} n - A certain number\n * @returns {boolean} - If the input is an integer\n */\nfunction isInt(n: number): boolean {\n  return isNumber(n) && n % 1 === 0;\n}\n\n/**\n * @param {number} n - A certain number\n * @returns {boolean} - If the input is a float\n */\nfunction isFloat(n: number): boolean {\n  return isNumber(n) && n % 1 !== 0;\n}\n\n/**\n * @param {Array<Object>} objects - The objects to merge\n * @returns {Object} - The merged object.\n */\nfunction merge(objects: Array<Object>): Object {\n  let target = {};\n  for (let obj of objects) {\n    Object.assign(target, obj);\n  }\n  return target;\n}\n\nexport {isNumber, isInt, isFloat, merge};\n\n\n\n// WEBPACK FOOTER //\n// ./utils/util.js","//@flow\n/* eslint-disable no-unused-vars */\nimport FakeEvent from '../../../event/fake-event'\nimport FakeEventTarget from '../../../event/fake-event-target'\nimport PlayerError from '../../../utils/player-error'\nimport {CUSTOM_EVENTS} from '../../../event/events'\nimport LoggerFactory from '../../../utils/logger'\nimport Track from '../../../track/track'\nimport VideoTrack from '../../../track/video-track'\nimport AudioTrack from '../../../track/audio-track'\nimport TextTrack from '../../../track/text-track'\n\nexport default class BaseMediaSourceAdapter extends FakeEventTarget implements IMediaSourceAdapter {\n  /**\n   * Passing the custom events to the actual media source adapter.\n   * @static\n   */\n  static CustomEvents: { [event: string]: string } = CUSTOM_EVENTS;\n\n  /**\n   * Passing the getLogger function to the actual media source adapter.\n   * @type {Function}\n   * @static\n   */\n  static getLogger: Function = LoggerFactory.getLogger;\n\n  /**\n   * The adapter config.\n   * @member {Object} _config\n   * @private\n   */\n  _config: ?Object;\n\n  /**\n   * The source object.\n   * @member {Source} _sourceObj\n   * @private\n   */\n  _sourceObj: ?Source;\n\n  /**\n   * The dom video element.\n   * @member {HTMLVideoElement} _videoElement\n   * @private\n   */\n  _videoElement: HTMLVideoElement;\n\n  /**\n   * Checks if the media source adapter is supported.\n   * @function isSupported\n   * @returns {boolean} - Whether the media source adapter is supported.\n   * @static\n   */\n  static isSupported(): boolean {\n    return true;\n  }\n\n  /**\n   * Factory method to create media source adapter.\n   * @function createAdapter\n   * @param {HTMLVideoElement} videoElement - The video element that the media source adapter work with.\n   * @param {Object} source - The source Object.\n   * @param {Object} config - The media source adapter configuration.\n   * @returns {IMediaSourceAdapter} - New instance of the run time media source adapter.\n   * @static\n   */\n  static createAdapter(videoElement: HTMLVideoElement, source: Source, config: Object): IMediaSourceAdapter {\n    return new this(videoElement, source, config);\n  }\n\n  /**\n   * @constructor\n   * @param {HTMLVideoElement} videoElement - The video element which bind to media source adapter.\n   * @param {Source} source - The source object.\n   * @param {Object} config - The media source adapter configuration.\n   */\n  constructor(videoElement: HTMLVideoElement, source: Source, config: Object) {\n    super();\n    this._videoElement = videoElement;\n    this._sourceObj = source;\n    this._config = config;\n  }\n\n  /**\n   * Destroys the media source adapter.\n   * @function destroy\n   * @returns {void}\n   */\n  destroy(): void {\n    this._sourceObj = null;\n    this._config = null;\n  }\n\n  /**\n   * Triggers the appropriate track changed event.\n   * @param {Track} track - The selected track.\n   * @private\n   * @returns {void}\n   */\n  _onTrackChanged(track: Track): void {\n    if (track instanceof VideoTrack) {\n      this._trigger(BaseMediaSourceAdapter.CustomEvents.VIDEO_TRACK_CHANGED, {selectedVideoTrack: track});\n    } else if (track instanceof AudioTrack) {\n      this._trigger(BaseMediaSourceAdapter.CustomEvents.AUDIO_TRACK_CHANGED, {selectedAudioTrack: track});\n    } else if (track instanceof TextTrack) {\n      this._trigger(BaseMediaSourceAdapter.CustomEvents.TEXT_TRACK_CHANGED, {selectedTextTrack: track});\n    }\n  }\n\n  /**\n   * Dispatch an adapter event forward.\n   * @param {string} name - The name of the event.\n   * @param {Object} payload - The event payload.\n   * @returns {void}\n   */\n  _trigger(name: string, payload: Object): void {\n    this.dispatchEvent(new FakeEvent(name, payload));\n  }\n\n  /** Must implemented methods by the derived media source adapter **/\n\n  static canPlayType(mimeType: string): boolean {\n    throw new PlayerError(PlayerError.TYPE.NOT_IMPLEMENTED_METHOD, 'static canPlayType').getError();\n  }\n\n  load(): Promise<Object> {\n    throw new PlayerError(PlayerError.TYPE.NOT_IMPLEMENTED_METHOD, 'load').getError();\n  }\n\n  selectVideoTrack(videoTrack: VideoTrack): void {\n    throw new PlayerError(PlayerError.TYPE.NOT_IMPLEMENTED_METHOD, 'selectVideoTrack').getError();\n  }\n\n  selectAudioTrack(audioTrack: AudioTrack): void {\n    throw new PlayerError(PlayerError.TYPE.NOT_IMPLEMENTED_METHOD, 'selectAudioTrack').getError();\n  }\n\n  selectTextTrack(textTrack: TextTrack): void {\n    throw new PlayerError(PlayerError.TYPE.NOT_IMPLEMENTED_METHOD, 'selectTextTrack').getError();\n  }\n\n  enableAdaptiveBitrate(): void {\n    throw new PlayerError(PlayerError.TYPE.NOT_IMPLEMENTED_METHOD, 'enableAdaptiveBitrate').getError();\n  }\n\n  get src(): string {\n    throw new PlayerError(PlayerError.TYPE.NOT_IMPLEMENTED_METHOD, 'get src').getError();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./engines/html5/media-source/base-media-source-adapter.js","//@flow\nimport NativeAdapter from './adapters/native-adapter'\nimport LoggerFactory from '../../../utils/logger'\n\n/**\n * Media source provider\n * @classdesc\n */\nexport default class MediaSourceProvider {\n  /**\n   * The logger of the media source provider.\n   * @member {any} _logger\n   * @static\n   * @private\n   */\n  static _logger: any = LoggerFactory.getLogger('MediaSourceProvider');\n  /**\n   * The media source adapter registry.\n   * @member {Array<IMediaSourceAdapter>} _mediaSourceAdapters\n   * @static\n   * @private\n   */\n  static _mediaSourceAdapters: Array<typeof IMediaSourceAdapter> = [NativeAdapter];\n  /**\n   * The selected adapter for playback.\n   * @type {null|IMediaSourceAdapter}\n   * @static\n   * @private\n   */\n  static _selectedAdapter: ?(typeof IMediaSourceAdapter) = null;\n\n  /**\n   * Add a media source adapter to the registry.\n   * @function register\n   * @param {IMediaSourceAdapter} mediaSourceAdapter - The media source adapter to register.\n   * @static\n   * @returns {void}\n   */\n  static register(mediaSourceAdapter: typeof IMediaSourceAdapter): void {\n    if (mediaSourceAdapter) {\n      if (!MediaSourceProvider._mediaSourceAdapters.includes(mediaSourceAdapter)) {\n        MediaSourceProvider._logger.debug(`Adapter <${mediaSourceAdapter.id}> has been registered successfully`);\n        MediaSourceProvider._mediaSourceAdapters.push(mediaSourceAdapter);\n      } else {\n        MediaSourceProvider._logger.debug(`Adapter <${mediaSourceAdapter.id}> is already registered, do not register again`);\n      }\n    }\n  }\n\n  /**\n   * Remove a media source adapter from the registry.\n   * @function unRegister\n   * @param {IMediaSourceAdapter} mediaSourceAdapter - The media source adapter to unRegister.\n   * @static\n   * @returns {void}\n   */\n  static unRegister(mediaSourceAdapter: typeof IMediaSourceAdapter): void {\n    let index = MediaSourceProvider._mediaSourceAdapters.indexOf(mediaSourceAdapter);\n    if (index > -1) {\n      MediaSourceProvider._logger.debug(`Unregistered <${mediaSourceAdapter.id}> adapter`);\n      MediaSourceProvider._mediaSourceAdapters.splice(index, 1);\n    }\n  }\n\n  /**\n   * Checks if one of the registered media source adapters can play a given source with\n   * priority to a given media source adapter (optional).\n   * @function canPlayType\n   * @param {Array<Source>} sources - The sources to check.\n   * @param {string} priority - Preferred media source adapter id (optional).\n   * @static\n   * @public\n   * @returns {CanPlayResult} - An object which includes whether one of the adapters can play a given source.\n   */\n  static canPlayType(sources: Array<Source>, priority: string): CanPlayResult {\n    if (priority) {\n      let mediaSourceAdapter = MediaSourceProvider._mediaSourceAdapters.find((mediaSourceAdapter) => {\n        return mediaSourceAdapter.id.toLowerCase().startsWith(priority);\n      });\n      if (mediaSourceAdapter) {\n        for (let i = 0; i < sources.length; i++) {\n          let source = sources[i];\n          let mimeType = source.mimetype;\n          if (mediaSourceAdapter.canPlayType(mimeType)) {\n            MediaSourceProvider._selectedAdapter = mediaSourceAdapter;\n            return {canPlay: true, source: source};\n          }\n        }\n      }\n      return {canPlay: false, source: null};\n    } else {\n      for (let i = 0; i < MediaSourceProvider._mediaSourceAdapters.length; i++) {\n        let mediaSourceAdapter = MediaSourceProvider._mediaSourceAdapters[i];\n        for (let j = 0; j < sources.length; j++) {\n          let source = sources[j];\n          let mimeType = source.mimetype;\n          if (mediaSourceAdapter.canPlayType(mimeType)) {\n            MediaSourceProvider._selectedAdapter = mediaSourceAdapter;\n            return {canPlay: true, source: source};\n          }\n        }\n      }\n      return {canPlay: false, source: null};\n    }\n  }\n\n  /**\n   * Get the appropriate media source adapter to the video source.\n   * @function getMediaSourceAdapter\n   * @param {HTMLVideoElement} videoElement - The video element which requires adapter for a given mimeType.\n   * @param {Source} source - The selected source object.\n   * @param {Object} config - The player configuration.\n   * @returns {IMediaSourceAdapter|null} - The selected media source adapter, or null if such doesn't exists.\n   * @static\n   */\n  static getMediaSourceAdapter(videoElement: HTMLVideoElement, source: Source, config: Object): ?IMediaSourceAdapter {\n    if (videoElement && source && config) {\n      return MediaSourceProvider._selectedAdapter ? MediaSourceProvider._selectedAdapter.createAdapter(videoElement, source, config) : null;\n    }\n    return null;\n  }\n}\n\nconst registerMediaSourceAdapter = MediaSourceProvider.register;\nexport {registerMediaSourceAdapter};\n\n\n\n\n// WEBPACK FOOTER //\n// ./engines/html5/media-source/media-source-provider.js","//@flow\nimport Player from '../player'\nimport LoggerFactory from '../utils/logger'\nimport {merge} from '../utils/util'\nimport EventManager from '../event/event-manager'\nimport PlayerError from '../utils/player-error'\n\n/** The BasePlugin responsible to implement the plugin interface.\n * Contains several default implementations.\n * Other plugins should extend this class.\n * @classdesc\n */\nexport default class BasePlugin implements IPlugin {\n  /**\n   * The runtime configuration of the plugin.\n   * @member\n   */\n  config: Object;\n  /**\n   * The name of the plugin.\n   * @member\n   */\n  name: string;\n  /**\n   * The logger of the plugin.\n   * @member\n   */\n  logger: any;\n  /**\n   * Reference to the actual player.\n   * @member\n   */\n  player: Player;\n  /**\n   * The event manager of the plugin.\n   * @member\n   */\n  eventManager: EventManager;\n  /**\n   * The default configuration of the plugin.\n   * Inherited plugins should override this property.\n   * @type {Object}\n   * @static\n   * @member\n   */\n  static defaultConfig: Object = {};\n\n  /**\n   * Factory method to create the actual plugin.\n   * @param {string} name - The plugin name\n   * @param {Player} player - The player reference\n   * @param {Object} config - The plugin configuration\n   * @returns {BasePlugin} - New runtime plugin instance\n   * @static\n   * @public\n   */\n  static createPlugin(name: string, player: Player, config: Object = {}): BasePlugin {\n    return new this(name, player, config);\n  }\n\n  /**\n   * Returns under what conditions the plugin is valid.\n   * Plugin must implement this method.\n   * @returns {boolean} - Whether the plugin is valid and can be initiated. Default implementation is true\n   * @static\n   * @public\n   * @abstract\n   */\n  static isValid(): boolean {\n    throw new PlayerError(PlayerError.TYPE.NOT_IMPLEMENTED_METHOD, 'isValid()').getError();\n  }\n\n  /**\n   * constructor\n   * @param {string} name - The plugin name\n   * @param {Player} player - The player reference\n   * @param {Object} config - The plugin configuration\n   * @constructor\n   * @private\n   */\n  constructor(name: string, player: Player, config: Object) {\n    this.name = name;\n    this.player = player;\n    this.eventManager = new EventManager();\n    this.logger = LoggerFactory.getLogger(this.name);\n    this.config = merge([this.constructor.defaultConfig, config]);\n  }\n\n  /**\n   * Getter for the configuration of the plugin.\n   * @param {string} attr - The key in the plugin configuration (optional).\n   * @returns {*} - If attribute is provided, returns its value. Else, Returns the config of the plugin.\n   * @public\n   */\n  getConfig(attr?: string): any {\n    if (attr) {\n      return this.config[attr];\n    }\n    return this.config;\n  }\n\n  /**\n   * Updates the config of the plugin.\n   * @param {Object} update - The updated configuration.\n   * @public\n   * @returns {void}\n   */\n  updateConfig(update: Object): void {\n    this.config = merge([this.config, update]);\n  }\n\n  /**\n   * Runs the destroy logic of the plugin.\n   * plugin must implement this method.\n   * @public\n   * @abstract\n   * @returns {void}\n   */\n  destroy(): void {\n    throw new PlayerError(PlayerError.TYPE.NOT_IMPLEMENTED_METHOD, 'destroy()').getError();\n  }\n\n  /**\n   * Getter for the plugin's name.\n   * @returns {string} - The name of the plugin.\n   * @public\n   */\n  getName(): string {\n    return this.name;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./plugin/base-plugin.js","//@flow\nimport BasePlugin from './base-plugin'\nimport PlayerError from '../utils/player-error'\nimport Player from '../player'\nimport LoggerFactory from '../utils/logger'\n\n/**\n * The logger of the PluginManager class.\n * @private\n * @const\n */\nconst logger = LoggerFactory.getLogger(\"PluginManager\");\n\n/** The PluginManager responsible for register plugins definitions and store plugins instances.\n * @classdesc\n */\nexport default class PluginManager {\n  /**\n   * The registry of the plugins.\n   * Maps plugin's name to his class.\n   * @type {Map}\n   * @static\n   * @private\n   */\n  static _registry: Map<string, Function> = new Map();\n  /**\n   * The active plugins in the player.\n   * Maps plugin's name to his instance.\n   * @type {Map}\n   * @private\n   */\n  _plugins: Map<string, BasePlugin> = new Map();\n\n  /**\n   * Writes the plugin in the registry.\n   * Maps: plugin name -> plugin class.\n   * @param {string} name - The plugin name\n   * @param {Function} handler - The plugin class\n   * @returns {boolean} - If the registration request succeeded\n   * @static\n   * @public\n   */\n  static register(name: string, handler: Function): boolean {\n    if (typeof handler !== 'function' || handler.prototype instanceof BasePlugin === false) {\n      throw new PlayerError(PlayerError.TYPE.NOT_VALID_HANDLER).getError();\n    }\n    if (!PluginManager._registry.has(name)) {\n      PluginManager._registry.set(name, handler);\n      logger.debug(`Plugin <${name}> has been registered successfully`);\n      return true;\n    }\n    logger.debug(`Plugin <${name}> is already registered, do not register again`);\n    return false;\n  }\n\n  /**\n   * Removes the plugin from the registry.\n   * @param {string} name - The plugin name\n   * @static\n   * @public\n   * @returns {void}\n   */\n  static unRegister(name: string): void {\n    if (PluginManager._registry.has(name)) {\n      PluginManager._registry.delete(name);\n      logger.debug(`Unregistered <${name}> plugin.`);\n    }\n  }\n\n  /**\n   * Creates and store new instance of the plugin in case isValid() of the plugin returns true.\n   * @param {string} name - The plugin name\n   * @param {Player} player - The player reference\n   * @param {Object} [config={}] - The plugin configuration\n   * @returns {boolean} - Whether the plugin load was successful\n   * @public\n   */\n  load(name: string, player: Player, config: Object = {}): boolean {\n    if (!PluginManager._registry.has(name)) {\n      throw new PlayerError(PlayerError.TYPE.NOT_REGISTERED_PLUGIN, name).getError();\n    }\n    let pluginClass = PluginManager._registry.get(name);\n    if (pluginClass != null && pluginClass.isValid()) {\n      this._plugins.set(name, pluginClass.createPlugin(name, player, config));\n      logger.debug(`Plugin <${name}> has been loaded`);\n      return true;\n    }\n    logger.debug(`Plugin <${name}> isn\\'t loaded, isValid()=false`);\n    return false;\n  }\n\n  /**\n   * Iterates over all the plugins and calls private _destroy.\n   * @public\n   * @returns {void}\n   */\n  destroy(): void {\n    this._plugins.forEach(this._destroy.bind(this));\n  }\n\n  /**\n   * Calls destroy() method of the plugin's impl.\n   * @param {BasePlugin} plugin - The plugin instance\n   * @param {string} name - The plugin name\n   * @private\n   * @returns {void}\n   */\n  _destroy(plugin: BasePlugin, name: string): void {\n    plugin.destroy();\n    this._plugins.delete(name);\n  }\n\n  /**\n   * Returns the plugin's instance.\n   * @param {string} name - The plugin name\n   * @returns {BasePlugin} - The plugin instance\n   * @public\n   */\n  get(name: string): ?BasePlugin {\n    return this._plugins.get(name);\n  }\n}\n\n/**\n * Export the register method.\n * @type {function}\n * @constant\n */\nconst registerPlugin = PluginManager.register;\nexport {registerPlugin};\n\n\n\n// WEBPACK FOOTER //\n// ./plugin/plugin-manager.js","//@flow\n\n/**\n * The possible player state types.\n * @const\n * @type {{IDLE: string, LOADING: string, PLAYING: string, PAUSED: string, BUFFERING: string}}\n */\nconst PLAYER_STATE_TYPES: { [state: string]: string } = {\n  IDLE: \"idle\",\n  LOADING: \"loading\",\n  PLAYING: \"playing\",\n  PAUSED: \"paused\",\n  BUFFERING: \"buffering\"\n};\n\nexport default PLAYER_STATE_TYPES;\n\n\n\n// WEBPACK FOOTER //\n// ./state/state-types.js","//@flow\n\n/**\n * A simple multimap template.\n * @constructor\n * @struct\n * @template T\n */\nclass MultiMap<T> {\n  _map: Map<string, T[]>;\n\n  constructor() {\n    /** @private {!Object.<string, !Array.<T>>} */\n    this._map = new Map();\n  }\n\n  /**\n   * Add a key, value pair to the map.\n   * @param {string} key -\n   * @param {T} value  -\n   * @returns {void}\n   */\n  push(key: string, value: T): void {\n    if (this._map.has(key)) {\n      let list = this._map.get(key);\n      if (Array.isArray(list)) {\n        list.push(value);\n        this._map.set(key, list);\n      }\n    } else {\n      this._map.set(key, [value]);\n    }\n  }\n\n  /**\n   * Set an array of values for the key, overwriting any previous data.\n   * @param {string} key -\n   * @param {!Array.<T>} values -\n   * @returns {void}\n   */\n  set(key: string, values: T[]): void {\n    this._map.set(key, values);\n  }\n\n  /**\n   * Check for a key.\n   * @param {string} key -\n   * @return {boolean} true if the key exists.\n   */\n  has(key: string): boolean {\n    return this._map.has(key);\n  }\n\n  /**\n   * Get a list of values by key.\n   * @param {string} key -\n   * @return {Array.<T>} or null if no suZch key exists.\n   */\n  get(key: string): Array<T> {\n    let list = this._map.get(key);\n    // slice() clones the list so that it and the map can each be modified\n    // without affecting the other.\n    return list ? list.slice() : [];\n  }\n\n  /**\n   * Get a list of all values.\n   * @returns {!Array.<T>} -\n   */\n  getAll(): T[] {\n    let list: T[] = [];\n    for (var value of this._map.values()) {\n      list = list.concat(value);\n    }\n    return list;\n  }\n\n  /**\n   * Remove a specific value, if it exists.\n   * @param {string} key -\n   * @param {T} value -\n   * @returns {void}\n   */\n  remove(key: string, value: T): void {\n    if (!this._map.has(key)) return;\n    let list = this._map.get(key);\n    if (Array.isArray(list)) {\n      for (let i = 0; i < list.length; ++i) {\n        if (list[i] == value) {\n          list.splice(i, 1);\n          --i;\n        }\n      }\n    }\n  }\n\n  /**\n   * Get all keys from the multimap.\n   * @return {!Array.<string>}\n   */\n  // eslint-disable-next-line no-undef\n  keys(): Iterator<string> {\n    return this._map.keys();\n  }\n\n\n  /**\n   * Clear all keys and values from the multimap.\n   * @returns {void}\n   */\n  clear(): void {\n    this._map.clear();\n  }\n}\n\nexport default MultiMap;\n\n\n\n// WEBPACK FOOTER //\n// ./utils/multi-map.js","module.exports = {\n\t\"name\": \"playkit-js\",\n\t\"version\": \"0.2.0\",\n\t\"main\": \"dist/playkit.js\",\n\t\"scripts\": {\n\t\t\"clean\": \"rm -rf ./dist\",\n\t\t\"prebuild\": \"npm run clean\",\n\t\t\"build:prod\": \"NODE_ENV=production webpack\",\n\t\t\"build\": \"webpack\",\n\t\t\"dev\": \"webpack --progress --colors --watch\",\n\t\t\"test\": \"NODE_ENV=test karma start --color\",\n\t\t\"test:chrome\": \"NODE_ENV=test karma start --color --browsers Chrome\",\n\t\t\"test:chrome:dots\": \"NODE_ENV=test karma start --color --browsers Chrome --reporters dots\",\n\t\t\"test:firefox\": \"NODE_ENV=test karma start --color --browsers Firefox\",\n\t\t\"test:safari\": \"NODE_ENV=test karma start --color --browsers Safari\",\n\t\t\"test:watch\": \"NODE_ENV=test karma start --color --auto-watch\",\n\t\t\"start\": \"webpack-dev-server\",\n\t\t\"release\": \"npm run build:prod && npm run commit:dist && standard-version\",\n\t\t\"publish\": \"git push --follow-tags --no-verify origin develop\",\n\t\t\"eslint\": \"eslint . --color\",\n\t\t\"flow\": \"flow check\",\n\t\t\"eslint:flow:test\": \"npm run eslint && npm run flow && npm run test\",\n\t\t\"commit:dist\": \"git add --all dist && (git commit -m 'chore: update dist' || exit 0)\",\n\t\t\"prepush-msg:build\": \"echo '\\nRunning build before push...\\n' && exit 0\",\n\t\t\"prepush-msg:dist\": \"echo '\\nAdding dist files to a seperate commit...\\n' && exit 0\",\n\t\t\"prepush-msg:done\": \"echo '\\nPre push tasks are done.\\n' && exit 0\"\n\t},\n\t\"pre-push\": [\n\t\t\"prepush-msg:build\",\n\t\t\"prebuild\",\n\t\t\"build\",\n\t\t\"build:prod\",\n\t\t\"prepush-msg:dist\",\n\t\t\"commit:dist\",\n\t\t\"prepush-msg:done\"\n\t],\n\t\"devDependencies\": {\n\t\t\"babel-cli\": \"^6.18.0\",\n\t\t\"babel-core\": \"^6.18.2\",\n\t\t\"babel-eslint\": \"^7.1.1\",\n\t\t\"babel-loader\": \"^6.2.7\",\n\t\t\"babel-plugin-istanbul\": \"^4.0.0\",\n\t\t\"babel-plugin-transform-class-properties\": \"^6.22.0\",\n\t\t\"babel-plugin-transform-flow-strip-types\": \"^6.22.0\",\n\t\t\"babel-preset-es2015\": \"^6.18.0\",\n\t\t\"babel-register\": \"^6.23.0\",\n\t\t\"chai\": \"^3.5.0\",\n\t\t\"cross-env\": \"^3.1.4\",\n\t\t\"eslint\": \"^3.10.0\",\n\t\t\"eslint-loader\": \"^1.6.1\",\n\t\t\"eslint-plugin-flowtype\": \"^2.30.0\",\n\t\t\"eslint-plugin-import\": \"^2.2.0\",\n\t\t\"eslint-plugin-mocha-no-only\": \"^0.0.5\",\n\t\t\"flow-bin\": \"latest\",\n\t\t\"istanbul\": \"^0.4.5\",\n\t\t\"karma\": \"^1.5.0\",\n\t\t\"karma-chai\": \"^0.1.0\",\n\t\t\"karma-chrome-launcher\": \"^2.0.0\",\n\t\t\"karma-cli\": \"^1.0.1\",\n\t\t\"karma-coverage\": \"^1.1.1\",\n\t\t\"karma-firefox-launcher\": \"^1.0.1\",\n\t\t\"karma-ie-launcher\": \"^1.0.0\",\n\t\t\"karma-mocha\": \"^1.3.0\",\n\t\t\"karma-safari-launcher\": \"^1.0.0\",\n\t\t\"karma-sourcemap-loader\": \"^0.3.7\",\n\t\t\"karma-webpack\": \"^2.0.2\",\n\t\t\"mocha\": \"^3.2.0\",\n\t\t\"mocha-cli\": \"^1.0.1\",\n\t\t\"pre-push\": \"^0.1.1\",\n\t\t\"sinon\": \"^2.0.0\",\n\t\t\"sinon-chai\": \"^2.8.0\",\n\t\t\"standard-version\": \"^4.0.0\",\n\t\t\"uglifyjs-webpack-plugin\": \"^0.4.3\",\n\t\t\"webpack\": \"latest\",\n\t\t\"webpack-dev-server\": \"latest\"\n\t},\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"https://github.com/kaltura/playkit-js\"\n\t},\n\t\"keywords\": [\n\t\t\"kaltura\",\n\t\t\"player\",\n\t\t\"html5 player\"\n\t],\n\t\"license\": \"AGPLV3\",\n\t\"bugs\": {\n\t\t\"url\": \"https://github.com/kaltura/playkit-js/issues\"\n\t},\n\t\"homepage\": \"https://github.com/kaltura/playkit-js\",\n\t\"dependencies\": {\n\t\t\"js-logger\": \"^1.3.0\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../package.json\n// module id = 18\n// module chunks = 0","//@flow\nimport FakeEventTarget from '../../event/fake-event-target'\nimport FakeEvent from '../../event/fake-event'\nimport EventManager from '../../event/event-manager'\nimport {HTML5_EVENTS as Html5Events, CUSTOM_EVENTS as CustomEvents} from '../../event/events'\nimport MediaSourceProvider from './media-source/media-source-provider'\nimport VideoTrack from '../../track/video-track'\nimport AudioTrack from '../../track/audio-track'\nimport TextTrack from '../../track/text-track'\n\nexport default class Html5 extends FakeEventTarget implements IEngine {\n  /**\n   * The video element.\n   * @type {HTMLVideoElement}\n   * @private\n   */\n  _el: HTMLVideoElement;\n  /**\n   * The event manager of the engine.\n   * @type {EventManager}\n   * @private\n   */\n  _eventManager: EventManager;\n  /**\n   * The selected media source adapter of the engine.\n   * @type {IMediaSourceAdapter}\n   * @private\n   */\n  _mediaSourceAdapter: ?IMediaSourceAdapter;\n\n  /**\n   * @type {string} - The engine id.\n   */\n  static id: string = \"html5\";\n\n  /**\n   * Factory method to create an engine.\n   * @param {Source} source - The selected source object.\n   * @param {Object} config - The player configuration.\n   * @returns {IEngine} - New instance of the run time engine.\n   * @public\n   * @static\n   */\n  static createEngine(source: Source, config: Object): IEngine {\n    return new this(source, config);\n  }\n\n  /**\n   * Checks if the engine can play a given sources.\n   * @param {Array<Source>} sources - The sources to check.\n   * @param {string} priority - Preferred media source adapter id (optional).\n   * @static\n   * @public\n   * @returns {boolean} - Whether the engine can play the mime type.\n   */\n  static canPlayType(sources: Array<Source>, priority: string = ''): CanPlayResult {\n    return MediaSourceProvider.canPlayType(sources, priority);\n  }\n\n  /**\n   * @constructor\n   * @param {Source} source - The selected source object.\n   * @param {Object} config - The player configuration.\n   */\n  constructor(source: Source, config: Object) {\n    super();\n    this._eventManager = new EventManager();\n    this._createVideoElement();\n    this._loadMediaSourceAdapter(source, config);\n    this.attach();\n  }\n\n  /**\n   * Destroys the engine.\n   * @public\n   * @returns {void}\n   */\n  destroy(): void {\n    this.detach();\n    if (this._mediaSourceAdapter) {\n      this._mediaSourceAdapter.destroy();\n    }\n    if (this._el) {\n      this.pause();\n      this._el.removeAttribute('src');\n      if (this._el.parentNode) {\n        this._el.parentNode.removeChild(this._el);\n      }\n    }\n    this._eventManager.destroy();\n  }\n\n  /**\n   * Listen to the video element events and triggers them from the engine.\n   * @public\n   * @returns {void}\n   */\n  attach(): void {\n    for (let playerEvent in Html5Events) {\n      this._eventManager.listen(this._el, Html5Events[playerEvent], () => {\n        this.dispatchEvent(new FakeEvent(Html5Events[playerEvent]));\n      });\n    }\n    if (this._mediaSourceAdapter) { // listen and dispatch adaptive bitrate changed event\n      this._eventManager.listen(this._mediaSourceAdapter, CustomEvents.VIDEO_TRACK_CHANGED, (event: FakeEvent) => {\n        this.dispatchEvent(event);\n      });\n      this._eventManager.listen(this._mediaSourceAdapter, CustomEvents.AUDIO_TRACK_CHANGED, (event: FakeEvent) => {\n        return this.dispatchEvent(event);\n      });\n      this._eventManager.listen(this._mediaSourceAdapter, CustomEvents.TEXT_TRACK_CHANGED, (event: FakeEvent) => {\n        return this.dispatchEvent(event);\n      });\n    }\n  }\n\n  /**\n   * Remove the listeners of the video element events.\n   * @public\n   * @returns {void}\n   */\n  detach(): void {\n    for (let playerEvent in Html5Events) {\n      this._eventManager.unlisten(this._el, Html5Events[playerEvent]);\n    }\n    if (this._mediaSourceAdapter) { // unlisten to adaptive bitrate changed\n      this._eventManager.unlisten(this._mediaSourceAdapter, CustomEvents.VIDEO_TRACK_CHANGED);\n      this._eventManager.unlisten(this._mediaSourceAdapter, CustomEvents.AUDIO_TRACK_CHANGED);\n      this._eventManager.unlisten(this._mediaSourceAdapter, CustomEvents.TEXT_TRACK_CHANGED);\n    }\n  }\n\n  /**\n   * @returns {HTMLVideoElement} - The video element.\n   * @public\n   */\n  getVideoElement(): HTMLVideoElement {\n    return this._el;\n  }\n\n  /**\n   * Creates a video element dom object.\n   * @private\n   * @returns {void}\n   */\n  _createVideoElement(): void {\n    this._el = document.createElement(\"video\");\n    //Set attributes\n    this._el.style.width = \"640px\";\n    this._el.style.height = \"360px\";\n    this._el.style.backgroundColor = \"black\";\n    this._el.controls = true;\n    if (document && document.body) {\n      document.body.appendChild(this._el);\n    }\n  }\n\n  /**\n   * Loads the appropriate media source extension adapter.\n   * @param {Source} source - The selected source object.\n   * @param {Object} config - The media source extension configuration.\n   * @private\n   * @returns {void}\n   */\n  _loadMediaSourceAdapter(source: Source, config: Object): void {\n    this._mediaSourceAdapter = MediaSourceProvider.getMediaSourceAdapter(this.getVideoElement(), source, config);\n  }\n\n  /**\n   * Select a new video track.\n   * @param {VideoTrack} videoTrack - The video track object to set.\n   * @returns {void}\n   */\n  selectVideoTrack(videoTrack: VideoTrack): void {\n    if (this._mediaSourceAdapter) {\n      this._mediaSourceAdapter.selectVideoTrack(videoTrack);\n    }\n  }\n\n  /**\n   * Select a new audio track.\n   * @param {AudioTrack} audioTrack - The video track object to set.\n   * @returns {void}\n   */\n  selectAudioTrack(audioTrack: AudioTrack): void {\n    if (this._mediaSourceAdapter) {\n      this._mediaSourceAdapter.selectAudioTrack(audioTrack);\n    }\n  }\n\n  /**\n   * Select a new text track.\n   * @param {TextTrack} textTrack - The text track object to set.\n   * @returns {void}\n   */\n  selectTextTrack(textTrack: TextTrack): void {\n    if (this._mediaSourceAdapter) {\n      this._mediaSourceAdapter.selectTextTrack(textTrack);\n    }\n  }\n\n  /**\n   * Enables adaptive bitrate switching according to the media source extension logic.\n   * @function enableAdaptiveBitrate\n   * @returns {void}\n   * @public\n   */\n  enableAdaptiveBitrate(): void {\n    if (this._mediaSourceAdapter) {\n      this._mediaSourceAdapter.enableAdaptiveBitrate();\n    }\n  }\n\n  /**\n   * Set a source.\n   * @param {string} source - Source to set.\n   * @public\n   * @returns {void}\n   */\n  set src(source: string): void {\n    this._el.src = source;\n  }\n\n  /**\n   * Get the source url.\n   * @returns {string} - The source url.\n   * @public\n   */\n  get src(): string {\n    if (this._mediaSourceAdapter) {\n      return this._mediaSourceAdapter.src;\n    }\n    return \"\";\n  }\n\n  //playback interface\n  /**\n   * Start/resume playback.\n   * @public\n   * @returns {void}\n   */\n  play(): void {\n    return this._el.play();\n  }\n\n  /**\n   * Pause playback.\n   * @public\n   * @returns {void}\n   */\n  pause(): void {\n    return this._el.pause();\n  }\n\n  /**\n   * Load media.\n   * @public\n   * @returns {Promise<Object>} - The loaded data\n   */\n  load(): Promise<Object> {\n    return this._mediaSourceAdapter ? this._mediaSourceAdapter.load() : Promise.resolve({});\n  }\n\n  /**\n   * Get the current time in seconds.\n   * @returns {Number} - The current playback time.\n   * @public\n   */\n  get currentTime(): number {\n    return this._el.currentTime;\n  }\n\n  /**\n   * Set the current time in seconds.\n   * @param {Number} to - The number to set in seconds.\n   * @public\n   * @returns {void}\n   */\n  set currentTime(to: number): void {\n    this._el.currentTime = to;\n  }\n\n  /**\n   * Get the duration in seconds.\n   * @returns {Number} - The playback duration.\n   * @public\n   */\n  get duration(): number {\n    return this._el.duration;\n  }\n\n  /**\n   * Set playback volume.\n   * @param {Number} vol - The volume to set.\n   * @public\n   * @returns {void}\n   */\n  set volume(vol: number): void {\n    this._el.volume = vol;\n  }\n\n  /**\n   * Get playback volume.\n   * @returns {Number} - The volume value of the video element.\n   * @public\n   */\n  get volume(): number {\n    return this._el.volume;\n  }\n\n  ready() {\n  }\n\n  /**\n   * Get paused state.\n   * @returns {boolean} - The paused value of the video element.\n   * @public\n   */\n  get paused(): boolean {\n    return this._el.paused;\n  }\n\n  /**\n   * Get seeking state.\n   * @returns {boolean} - The seeking value of the video element.\n   * @public\n   */\n  get seeking(): boolean {\n    return this._el.seeking;\n  }\n\n  /**\n   * Get the first seekable range (part) of the video in seconds.\n   * @returns {TimeRanges} - First seekable range (part) of the video in seconds.\n   * @public\n   */\n  get seekable(): TimeRanges {\n    return this._el.seekable;\n  }\n\n  /**\n   * Get the first played range (part) of the video in seconds.\n   * @returns {TimeRanges} - First played range (part) of the video in seconds.\n   * @public\n   */\n  get played(): TimeRanges {\n    return this._el.played;\n  }\n\n  /**\n   * Get the first buffered range (part) of the video in seconds.\n   * @returns {TimeRanges} - First buffered range (part) of the video in seconds.\n   * @public\n   */\n  get buffered(): TimeRanges {\n    return this._el.buffered;\n  }\n\n  /**\n   * Set player muted state.\n   * @param {boolean} mute - The new mute value.\n   * @public\n   * @returns {void}\n   */\n  set muted(mute: boolean): void {\n    this._el.muted = mute;\n  }\n\n  /**\n   * Get player muted state.\n   * @returns {boolean} - The muted value of the video element.\n   * @public\n   */\n  get muted(): boolean {\n    return this._el.muted;\n  }\n\n  /**\n   * Get the default mute value.\n   * @returns {boolean} - The defaultMuted of the video element.\n   * @public\n   */\n  get defaultMuted(): boolean {\n    return this._el.defaultMuted;\n  }\n\n  /**\n   * Sets an image to be shown while the video is downloading, or until the user hits the play button.\n   * @param {string} poster - The image url to be shown.\n   * @returns {void}\n   * @public\n   */\n  set poster(poster: string): void {\n    this._el.poster = poster;\n  }\n\n  /**\n   * Gets an image to be shown while the video is downloading, or until the user hits the play button.\n   * @returns {poster} - The image url.\n   * @public\n   */\n  get poster(): string {\n    return this._el.poster;\n  }\n\n  /**\n   * Specifies if and how the author thinks that the video should be loaded when the page loads.\n   * @param {string} preload - The preload value.\n   * @public\n   * @returns {void}\n   */\n  set preload(preload: string): void {\n    this._el.preload = preload;\n  }\n\n  /**\n   * Gets the preload value of the video element.\n   * @returns {string} - The preload value.\n   * @public\n   */\n  get preload(): string {\n    return this._el.preload;\n  }\n\n  /**\n   * Set if the video will automatically start playing as soon as it can do so without stopping.\n   * @param {boolean} autoplay - The autoplay value.\n   * @public\n   * @returns {void}\n   */\n  set autoplay(autoplay: boolean): void {\n    this._el.autoplay = autoplay;\n  }\n\n  /**\n   * Gets the autoplay value of the video element.\n   * @returns {boolean} - The autoplay value.\n   * @public\n   */\n  get autoplay(): boolean {\n    return this._el.autoplay;\n  }\n\n  /**\n   * Set to specifies that the video will start over again, every time it is finished.\n   * @param {boolean} loop - the loop value.\n   * @public\n   * @returns {void}\n   */\n  set loop(loop: boolean) {\n    this._el.loop = loop;\n  }\n\n  /**\n   * Gets the loop value of the video element.\n   * @returns {boolean} - The loop value.\n   * @public\n   */\n  get loop(): boolean {\n    return this._el.loop;\n  }\n\n  /**\n   * Set to specifies that video controls should be displayed.\n   * @param {boolean} controls - the controls value.\n   * @public\n   * @returns {void}\n   */\n  set controls(controls: boolean): void {\n    this._el.controls = controls;\n  }\n\n  /**\n   * Gets the controls value of the video element.\n   * @returns {boolean} - The controls value.\n   * @public\n   */\n  get controls(): boolean {\n    return this._el.controls;\n  }\n\n  /**\n   * Sets the current playback speed of the audio/video.\n   * @param {Number} playbackRate - The playback speed value.\n   * @public\n   * @returns {void}\n   */\n  set playbackRate(playbackRate: number): void {\n    this._el.playbackRate = playbackRate;\n  }\n\n  /**\n   * Gets the current playback speed of the audio/video.\n   * @returns {Number} - The current playback speed value.\n   * @public\n   */\n  get playbackRate(): number {\n    return this._el.playbackRate;\n  }\n\n  /**\n   * Sets the default playback speed of the audio/video.\n   * @param {Number} defaultPlaybackRate - The default playback speed value.\n   * @public\n   * @returns {void}\n   */\n  set defaultPlaybackRate(defaultPlaybackRate: number) {\n    this._el.defaultPlaybackRate = defaultPlaybackRate;\n  }\n\n  /**\n   * Gets the default playback speed of the audio/video.\n   * @returns {Number} - The default playback speed value.\n   * @public\n   */\n  get defaultPlaybackRate(): number {\n    return this._el.defaultPlaybackRate;\n  }\n\n  /**\n   * The ended property returns whether the playback of the audio/video has ended.\n   * @returns {boolean} - The ended value.\n   * @public\n   */\n  get ended(): boolean {\n    return this._el.ended;\n  }\n\n  /**\n   * The error property returns a MediaError object.\n   * @returns {MediaError} - The MediaError object has a code property containing the error state of the audio/video.\n   * @public\n   */\n  get error(): ?MediaError {\n    return this._el.error;\n  }\n\n  /**\n   * @returns {Number} - The current network state (activity) of the audio/video.\n   * @public\n   */\n  get networkState(): number {\n    return this._el.networkState;\n  }\n\n  /**\n   * Indicates if the audio/video is ready to play or not.\n   * @returns {Number} - The current ready state of the audio/video.\n   * 0 = HAVE_NOTHING - no information whether or not the audio/video is ready.\n   * 1 = HAVE_METADATA - metadata for the audio/video is ready.\n   * 2 = HAVE_CURRENT_DATA - data for the current playback position is available, but not enough data to play next frame/millisecond.\n   * 3 = HAVE_FUTURE_DATA - data for the current and at least the next frame is available.\n   * 4 = HAVE_ENOUGH_DATA - enough data available to start playing.\n   */\n  get readyState(): number {\n    return this._el.readyState;\n  }\n\n  /**\n   * @returns {Number} - The height of the video player, in pixels.\n   * @public\n   */\n  get videoHeight(): number {\n    return this._el.videoHeight;\n  }\n\n  /**\n   * @returns {Number} - The width of the video player, in pixels.\n   * @public\n   */\n  get videoWidth(): number {\n    return this._el.videoWidth;\n  }\n\n  /**\n   * Test video element to check if html5 engine is supported.\n   */\n  static TEST_VID: HTMLVideoElement;\n\n  /**\n   * Checks if the html5 engine is supported.\n   * @returns {boolean} - The isSupported result.\n   * @static\n   * @public\n   */\n  static isSupported() {\n    try {\n      Html5.TEST_VID = document.createElement('video');\n      Html5.TEST_VID.volume = 0.5;\n    } catch (e) {\n      return false;\n    }\n    return !!Html5.TEST_VID.canPlayType;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./engines/html5/html5.js","//@flow\nimport EventManager from '../../../../event/event-manager'\nimport {HTML5_EVENTS as Html5Events} from '../../../../event/events'\nimport Track from '../../../../track/track'\nimport VideoTrack from '../../../../track/video-track'\nimport AudioTrack from '../../../../track/audio-track'\nimport TextTrack from '../../../../track/text-track'\nimport BaseMediaSourceAdapter from '../base-media-source-adapter'\n\n/**\n * An illustration of media source extension for progressive download\n * @classdesc\n * @implements {IMediaSourceAdapter}\n */\nexport default class NativeAdapter extends BaseMediaSourceAdapter {\n  /**\n   * The id of the Adapter\n   * @member {string} id\n   * @static\n   * @public\n   */\n  static id: string = 'NativeAdapter';\n\n  /**\n   * The adapter logger\n   * @member {any} _logger\n   * @private\n   * @static\n   */\n  static _logger = BaseMediaSourceAdapter.getLogger(NativeAdapter.id);\n  /**\n   * The event manager of the class.\n   * @member {EventManager} - _eventManager\n   * @type {EventManager}\n   * @private\n   */\n  _eventManager: EventManager;\n  /**\n   * The load promise\n   * @member {Promise<Object>} - _loadPromise\n   * @type {Promise<Object>}\n   * @private\n   */\n  _loadPromise: ?Promise<Object>;\n\n  /**\n   * Checks if NativeAdapter can play a given mime type.\n   * @function canPlayType\n   * @param {string} mimeType - The mime type to check\n   * @returns {boolean} - Whether the native adapter can play a specific mime type\n   * @static\n   */\n  static canPlayType(mimeType: string): boolean {\n    let canPlayType = (typeof mimeType === 'string') ? !!(document.createElement(\"video\").canPlayType(mimeType.toLowerCase())) : false;\n    NativeAdapter._logger.debug('canPlayType result for mimeType:' + mimeType + ' is ' + canPlayType.toString());\n    return canPlayType;\n  }\n\n  /**\n   * @constructor\n   * @param {HTMLVideoElement} videoElement - The video element which bind to NativeAdapter\n   * @param {Source} source - The source object\n   * @param {Object} config - The media source adapter configuration\n   */\n  constructor(videoElement: HTMLVideoElement, source: Source, config: Object) {\n    NativeAdapter._logger.debug('Creating adapter');\n    super(videoElement, source, config);\n    this._eventManager = new EventManager();\n  }\n\n  /**\n   * Load the video source\n   * @function load\n   * @returns {Promise<Object>} - The loaded data\n   */\n  load(): Promise<Object> {\n    if (!this._loadPromise) {\n      this._loadPromise = new Promise((resolve, reject) => {\n        // We're using 'loadeddata' event for native hls (on 'loadedmetadata' native hls doesn't have tracks yet).\n        this._eventManager.listen(this._videoElement, Html5Events.LOADED_DATA, () => {\n          this._eventManager.unlisten(this._videoElement, Html5Events.LOADED_DATA);\n          let data = {tracks: this._getParsedTracks()};\n          NativeAdapter._logger.debug('The source has been loaded successfully');\n          resolve(data);\n        });\n        this._eventManager.listen(this._videoElement, Html5Events.ERROR, (error) => {\n          this._eventManager.unlisten(this._videoElement, Html5Events.ERROR);\n          NativeAdapter._logger.error(error);\n          reject(error);\n        });\n        if (this._sourceObj && this._sourceObj.url) {\n          this._videoElement.src = this._sourceObj.url;\n        }\n      });\n    }\n    return this._loadPromise;\n  }\n\n  /**\n   * Destroys the native adapter.\n   * @function destroy\n   * @returns {void}\n   */\n  destroy(): void {\n    NativeAdapter._logger.debug('destroy');\n    super.destroy();\n    this._eventManager.destroy();\n    this._loadPromise = null;\n  }\n\n  /**\n   * Get the parsed tracks\n   * @function _getParsedTracks\n   * @returns {Array<Track>} - The parsed tracks\n   * @private\n   */\n  _getParsedTracks(): Array<Track> {\n    let videoTracks = this._getParsedVideoTracks();\n    let audioTracks = this._getParsedAudioTracks();\n    let textTracks = this._getParsedTextTracks();\n    return videoTracks.concat(audioTracks).concat(textTracks);\n  }\n\n  /**\n   * Get the parsed video tracks\n   * @function _getParsedVideoTracks\n   * @returns {Array<Track>} - The parsed video tracks\n   * @private\n   */\n  _getParsedVideoTracks(): Array<Track> {\n    let videoTracks = this._videoElement.videoTracks;\n    let parsedTracks = [];\n    if (videoTracks) {\n      for (let i = 0; i < videoTracks.length; i++) {\n        let settings = {\n          id: videoTracks[i].id,\n          active: videoTracks[i].selected,\n          label: videoTracks[i].label,\n          language: videoTracks[i].language,\n          index: i\n        };\n        parsedTracks.push(new VideoTrack(settings));\n      }\n    }\n    return parsedTracks;\n  }\n\n  /**\n   * Get the parsed audio tracks\n   * @function _getParsedAudioTracks\n   * @returns {Array<Track>} - The parsed audio tracks\n   * @private\n   */\n  _getParsedAudioTracks(): Array<Track> {\n    let audioTracks = this._videoElement.audioTracks;\n    let parsedTracks = [];\n    if (audioTracks) {\n      for (let i = 0; i < audioTracks.length; i++) {\n        let settings = {\n          id: audioTracks[i].id,\n          active: audioTracks[i].enabled,\n          label: audioTracks[i].label,\n          language: audioTracks[i].language,\n          index: i\n        };\n        parsedTracks.push(new AudioTrack(settings));\n      }\n    }\n    return parsedTracks;\n  }\n\n  /**\n   * Get the parsed text tracks\n   * @function _getParsedTextTracks\n   * @returns {Array<Track>} - The parsed text tracks\n   * @private\n   */\n  _getParsedTextTracks(): Array<Track> {\n    let textTracks = this._videoElement.textTracks;\n    let parsedTracks = [];\n    if (textTracks) {\n      for (let i = 0; i < textTracks.length; i++) {\n        let settings = {\n          kind: textTracks[i].kind,\n          active: textTracks[i].mode === 'showing',\n          label: textTracks[i].label,\n          language: textTracks[i].language,\n          index: i\n        };\n        parsedTracks.push(new TextTrack(settings));\n      }\n    }\n    return parsedTracks;\n  }\n\n  /**\n   * Select a video track\n   * @function selectVideoTrack\n   * @param {VideoTrack} videoTrack - the track to select\n   * @returns {void}\n   * @public\n   */\n  selectVideoTrack(videoTrack: VideoTrack): void {\n    let videoTracks = this._videoElement.videoTracks;\n    if ((videoTrack instanceof VideoTrack) && videoTracks && videoTracks[videoTrack.index]) {\n      this._disableVideoTracks();\n      videoTracks[videoTrack.index].selected = true;\n      this._onTrackChanged(videoTrack);\n    }\n  }\n\n  /**\n   * Select an audio track\n   * @function selectAudioTrack\n   * @param {AudioTrack} audioTrack - the  audio track to select\n   * @returns {void}\n   * @public\n   */\n  selectAudioTrack(audioTrack: AudioTrack): void {\n    let audioTracks = this._videoElement.audioTracks;\n    if ((audioTrack instanceof AudioTrack) && audioTracks && audioTracks[audioTrack.index]) {\n      this._disableAudioTracks();\n      audioTracks[audioTrack.index].enabled = true;\n      this._onTrackChanged(audioTrack);\n    }\n  }\n\n  /**\n   * Select a text track\n   * @function selectTextTrack\n   * @param {TextTrack} textTrack - the track to select\n   * @returns {void}\n   * @public\n   */\n  selectTextTrack(textTrack: TextTrack): void {\n    let textTracks = this._videoElement.textTracks;\n    if ((textTrack instanceof TextTrack) && (textTrack.kind === 'subtitles' || textTrack.kind === 'captions') && textTracks && textTracks[textTrack.index]) {\n      this._disableTextTracks();\n      textTracks[textTrack.index].mode = 'showing';\n      this._onTrackChanged(textTrack);\n    }\n  }\n\n  /**\n   * Enables adaptive bitrate\n   * @function enableAdaptiveBitrate\n   * @returns {void}\n   * @public\n   */\n  enableAdaptiveBitrate(): void {\n    NativeAdapter._logger.debug('Enabling adaptive bitrate not supported');\n  }\n\n  /**\n   * Disables all the existing video tracks.\n   * @private\n   * @returns {void}\n   */\n  _disableVideoTracks(): void {\n    let videoTracks = this._videoElement.videoTracks;\n    if (videoTracks) {\n      for (let i = 0; i < videoTracks.length; i++) {\n        videoTracks[i].selected = false;\n      }\n    }\n  }\n\n  /**\n   * Disables all the existing audio tracks.\n   * @private\n   * @returns {void}\n   */\n  _disableAudioTracks(): void {\n    let audioTracks = this._videoElement.audioTracks;\n    if (audioTracks) {\n      for (let i = 0; i < audioTracks.length; i++) {\n        audioTracks[i].enabled = false;\n      }\n    }\n  }\n\n  /**\n   * Disables all the existing text tracks.\n   * @private\n   * @returns {void}\n   */\n  _disableTextTracks(): void {\n    let textTracks = this._videoElement.textTracks;\n    if (textTracks) {\n      for (let i = 0; i < textTracks.length; i++) {\n        textTracks[i].mode = 'disabled';\n      }\n    }\n  }\n\n  /**\n   * Getter for the src that the adapter plays on the video element.\n   * @public\n   * @returns {string} - The src url.\n   */\n  get src(): string {\n    return this._videoElement.src;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./engines/html5/media-source/adapters/native-adapter.js","//@flow\nimport Player from './player'\nimport LoggerFactory from './utils/logger'\nimport * as packageData from '../package.json'\nimport BaseMediaSourceAdapter from './engines/html5/media-source/base-media-source-adapter'\nimport {registerMediaSourceAdapter} from './engines/html5/media-source/media-source-provider'\nimport {registerPlugin} from './plugin/plugin-manager'\nimport BasePlugin from './plugin/base-plugin'\nimport Track from './track/track'\nimport VideoTrack from './track/video-track'\nimport AudioTrack from './track/audio-track'\nimport TextTrack from './track/text-track'\n\n// Playkit version\nlet VERSION = packageData.version;\n\nLoggerFactory.getLogger().log(\"%c Playkit \" + VERSION, \"color: yellow; font-size: large\");\nLoggerFactory.getLogger().log(\"%c For more details see https://github.com/kaltura/playkit-js\", \"color: yellow;\");\n\n/**\n * @param {Object} config - The configuration of the player\n * @returns {Player} - The player instance\n */\nexport function playkit(config: Object = {}) {\n  return new Player(config);\n}\n\n// Export the media source adapters necessary utils\nexport {registerMediaSourceAdapter, BaseMediaSourceAdapter};\n\n// Export the plugin framework\nexport {registerPlugin, BasePlugin};\n\n// Export the tracks classes\nexport {Track, VideoTrack, AudioTrack, TextTrack};\n\n//export version\nexport {VERSION};\nexport default playkit;\n\n\n\n// WEBPACK FOOTER //\n// ./playkit.js","//@flow\nimport Player from '../player'\nimport EventManager from '../event/event-manager'\nimport State from './state'\nimport PlayerStates from './state-types'\nimport {HTML5_EVENTS as Html5Events, CUSTOM_EVENTS as CustomEvents} from '../event/events'\nimport FakeEvent from '../event/fake-event'\nimport LoggerFactory from '../utils/logger'\n\n/**\n * Define a transition object.\n */\ntype Transition = {\n  [state: string]: {\n    [event: string]: Function\n  }\n}\n\n/**\n * This class responsible to manage all the state machine of the player.\n * @classdesc\n */\nexport default class StateManager {\n  /**\n   * The logger of the class.\n   * @member\n   * @type {any}\n   * @private\n   */\n  _logger: any;\n  /**\n   * Reference to the actual player.\n   * @member\n   * @type {Player}\n   * @private\n   */\n  _player: Player;\n  /**\n   * The event manager of the class.\n   * @member\n   * @type {EventManager}\n   * @private\n   */\n  _eventManager: EventManager;\n  /**\n   * Holds the current state of the player.\n   * @member\n   * @type {State}\n   * @private\n   */\n  _curState: State;\n  /**\n   * Holds the previous state of the player.\n   * @member\n   * @type {State | null}\n   * @private\n   */\n  _prevState: State | null;\n  /**\n   * Holds the state history of the player.\n   * @member\n   * @type {Array<State>}\n   * @private\n   */\n  _history: Array<State>;\n  /**\n   * The possible transitions from one state to another.\n   * @type {Array<Transition>}\n   * @private\n   */\n  _transitions: Transition = {\n    [PlayerStates.IDLE]: {\n      [Html5Events.LOAD_START]: () => {\n        this._updateState(PlayerStates.LOADING);\n        this._dispatchEvent();\n      },\n      [Html5Events.PLAY]: () => {\n        this._updateState(PlayerStates.BUFFERING);\n        this._dispatchEvent();\n      }\n    },\n    [PlayerStates.LOADING]: {\n      [Html5Events.LOADED_METADATA]: () => {\n        if (this._player.config.autoPlay) {\n          this._updateState(PlayerStates.PLAYING);\n        } else {\n          this._updateState(PlayerStates.PAUSED);\n        }\n        this._dispatchEvent();\n      },\n      [Html5Events.ERROR]: () => {\n        this._updateState(PlayerStates.IDLE);\n        this._dispatchEvent();\n      }\n    },\n    [PlayerStates.PAUSED]: {\n      [Html5Events.PLAY]: () => {\n        this._updateState(PlayerStates.PLAYING);\n        this._dispatchEvent();\n      },\n      [Html5Events.PLAYING]: () => {\n        this._updateState(PlayerStates.PLAYING);\n        this._dispatchEvent();\n      },\n      [Html5Events.ENDED]: () => {\n        this._updateState(PlayerStates.IDLE);\n        this._dispatchEvent();\n      }\n    },\n    [PlayerStates.PLAYING]: {\n      [Html5Events.PAUSE]: () => {\n        this._updateState(PlayerStates.PAUSED);\n        this._dispatchEvent();\n      },\n      [Html5Events.WAITING]: () => {\n        this._updateState(PlayerStates.BUFFERING);\n        this._dispatchEvent();\n      },\n      [Html5Events.ENDED]: () => {\n        this._updateState(PlayerStates.IDLE);\n        this._dispatchEvent();\n      },\n      [Html5Events.ERROR]: () => {\n        this._updateState(PlayerStates.IDLE);\n        this._dispatchEvent();\n      }\n    },\n    [PlayerStates.BUFFERING]: {\n      [Html5Events.PLAYING]: () => {\n        this._updateState(PlayerStates.PLAYING);\n        this._dispatchEvent();\n      },\n      [Html5Events.PAUSE]: () => {\n        this._updateState(PlayerStates.PAUSED);\n        this._dispatchEvent();\n      }\n    }\n  };\n\n  /**\n   * @constructor\n   * @param {Player} player - Reference to the player.\n   */\n  constructor(player: Player) {\n    this._player = player;\n    this._logger = LoggerFactory.getLogger(\"StateManager\");\n    this._eventManager = new EventManager();\n    this._history = [];\n    this._prevState = null;\n    this._curState = new State(PlayerStates.IDLE);\n    this._attachListeners();\n  }\n\n  /**\n   * Register to all necessary events which impacts on the player state.\n   * @private\n   * @returns {void}\n   */\n  _attachListeners(): void {\n    this._eventManager.listen(this._player, Html5Events.ERROR, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, Html5Events.ENDED, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, Html5Events.PLAY, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, Html5Events.LOAD_START, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, Html5Events.PLAYING, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, Html5Events.LOADED_METADATA, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, Html5Events.PAUSE, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, Html5Events.WAITING, this._doTransition.bind(this));\n  }\n\n  /**\n   * Performs a state transition depends on the event which occurs in the player system.\n   * @param {FakeEvent} event - The event occurs in the player system.\n   * @private\n   * @returns {void}\n   */\n  _doTransition(event: FakeEvent): void {\n    this._logger.debug('Do transition request', event);\n    let transition = this._transitions[this._curState.type];\n    if (typeof transition[event.type] === 'function') {\n      transition[event.type]();\n    }\n  }\n\n  /**\n   * Updates the player's state.\n   * @param {string} type - The type of the new state.\n   * @private\n   * @returns {void}\n   */\n  _updateState(type: string): void {\n    if (this._curState.type !== type) {\n      this._curState.duration = Date.now() / 1000;\n      this._history.push(this._curState);\n      this._prevState = this._curState;\n      this._curState = new State(type);\n      this._logger.debug(`Switch player state: from ${this._prevState.type} to ${this._curState.type}`)\n    }\n  }\n\n  /**\n   * Fires the playerStateChanged event after state has been changed.\n   * @private\n   * @returns {void}\n   */\n  _dispatchEvent(): void {\n    let event = new FakeEvent(CustomEvents.PLAYER_STATE_CHANGED, {\n      'oldState': this._prevState,\n      'newState': this._curState\n    });\n    this._player.dispatchEvent(event);\n  }\n\n  /**\n   * Destroys the state manager.\n   * @public\n   * @returns {void}\n   */\n  destroy(): void {\n    this._history = [];\n    this._eventManager.destroy();\n  }\n\n  /**\n   * Getter to the current state of the player.\n   * @public\n   * @returns {State} - The current state object\n   */\n  get currentState(): State {\n    return this._curState;\n  }\n\n  /**\n   * Getter to the previous state of the player.\n   * @public\n   * @returns {State|null} - The previous state object, or null if such doesn't exists\n   */\n  get previousState(): State | null {\n    return this._prevState;\n  }\n\n  /**\n   * Getter to the state history of the player.\n   * @public\n   * @returns {Array.<State>} - The full states history objects\n   */\n  get history(): Array<State> {\n    return this._history;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./state/state-manager.js","//@flow\n\n/**\n * This class describes a player state.\n * @classdesc\n */\nexport default class State {\n  /**\n   * The type of the state.\n   * Can be one of those describes in states.js\n   * @member\n   * @type {string}\n   * @public\n   */\n  type: string;\n  /**\n   * The duration that the player was in this state.\n   * @member\n   * @type {number}\n   * @private\n   */\n  _duration: number;\n  /**\n   * The timestamp that this state started.\n   * @member\n   * @type {number}\n   * @private\n   */\n  _timestamp: number;\n\n  /**\n   * @constructor\n   * @param {string} type - The type of the state.\n   */\n  constructor(type: string) {\n    this.type = type;\n    this._duration = 0;\n    this._timestamp = Date.now() / 1000;\n  }\n\n  /**\n   * Getter for the duration of the state.\n   * @returns {number} - The duration of the state\n   */\n  get duration(): number {\n    return this._duration;\n  }\n\n  /**\n   * Setter for the duration of the state.\n   * @param {number} endTime - The timestamp of the next state.\n   */\n  set duration(endTime: number): void {\n    this._duration = endTime - this._timestamp;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./state/state.js","//@flow\nconst TRACK_TYPES: {[track: string]: string} = {\n  VIDEO: \"video\",\n  AUDIO: \"audio\",\n  TEXT: \"text\"\n};\n\nexport default TRACK_TYPES;\n\n\n\n// WEBPACK FOOTER //\n// ./track/track-types.js","/*!\r\n * js-logger - http://github.com/jonnyreeves/js-logger\r\n * Jonny Reeves, http://jonnyreeves.co.uk/\r\n * js-logger may be freely distributed under the MIT license.\r\n */\r\n(function (global) {\r\n\t\"use strict\";\r\n\r\n\t// Top level module for the global, static logger instance.\r\n\tvar Logger = { };\r\n\r\n\t// For those that are at home that are keeping score.\r\n\tLogger.VERSION = \"1.3.0\";\r\n\r\n\t// Function which handles all incoming log messages.\r\n\tvar logHandler;\r\n\r\n\t// Map of ContextualLogger instances by name; used by Logger.get() to return the same named instance.\r\n\tvar contextualLoggersByNameMap = {};\r\n\r\n\t// Polyfill for ES5's Function.bind.\r\n\tvar bind = function(scope, func) {\r\n\t\treturn function() {\r\n\t\t\treturn func.apply(scope, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\t// Super exciting object merger-matron 9000 adding another 100 bytes to your download.\r\n\tvar merge = function () {\r\n\t\tvar args = arguments, target = args[0], key, i;\r\n\t\tfor (i = 1; i < args.length; i++) {\r\n\t\t\tfor (key in args[i]) {\r\n\t\t\t\tif (!(key in target) && args[i].hasOwnProperty(key)) {\r\n\t\t\t\t\ttarget[key] = args[i][key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\t// Helper to define a logging level object; helps with optimisation.\r\n\tvar defineLogLevel = function(value, name) {\r\n\t\treturn { value: value, name: name };\r\n\t};\r\n\r\n\t// Predefined logging levels.\r\n\tLogger.DEBUG = defineLogLevel(1, 'DEBUG');\r\n\tLogger.INFO = defineLogLevel(2, 'INFO');\r\n\tLogger.TIME = defineLogLevel(3, 'TIME');\r\n\tLogger.WARN = defineLogLevel(4, 'WARN');\r\n\tLogger.ERROR = defineLogLevel(8, 'ERROR');\r\n\tLogger.OFF = defineLogLevel(99, 'OFF');\r\n\r\n\t// Inner class which performs the bulk of the work; ContextualLogger instances can be configured independently\r\n\t// of each other.\r\n\tvar ContextualLogger = function(defaultContext) {\r\n\t\tthis.context = defaultContext;\r\n\t\tthis.setLevel(defaultContext.filterLevel);\r\n\t\tthis.log = this.info;  // Convenience alias.\r\n\t};\r\n\r\n\tContextualLogger.prototype = {\r\n\t\t// Changes the current logging level for the logging instance.\r\n\t\tsetLevel: function (newLevel) {\r\n\t\t\t// Ensure the supplied Level object looks valid.\r\n\t\t\tif (newLevel && \"value\" in newLevel) {\r\n\t\t\t\tthis.context.filterLevel = newLevel;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Is the logger configured to output messages at the supplied level?\r\n\t\tenabledFor: function (lvl) {\r\n\t\t\tvar filterLevel = this.context.filterLevel;\r\n\t\t\treturn lvl.value >= filterLevel.value;\r\n\t\t},\r\n\r\n\t\tdebug: function () {\r\n\t\t\tthis.invoke(Logger.DEBUG, arguments);\r\n\t\t},\r\n\r\n\t\tinfo: function () {\r\n\t\t\tthis.invoke(Logger.INFO, arguments);\r\n\t\t},\r\n\r\n\t\twarn: function () {\r\n\t\t\tthis.invoke(Logger.WARN, arguments);\r\n\t\t},\r\n\r\n\t\terror: function () {\r\n\t\t\tthis.invoke(Logger.ERROR, arguments);\r\n\t\t},\r\n\r\n\t\ttime: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'start' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttimeEnd: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'end' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Invokes the logger callback if it's not being filtered.\r\n\t\tinvoke: function (level, msgArgs) {\r\n\t\t\tif (logHandler && this.enabledFor(level)) {\r\n\t\t\t\tlogHandler(msgArgs, merge({ level: level }, this.context));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Protected instance which all calls to the to level `Logger` module will be routed through.\r\n\tvar globalLogger = new ContextualLogger({ filterLevel: Logger.OFF });\r\n\r\n\t// Configure the global Logger instance.\r\n\t(function() {\r\n\t\t// Shortcut for optimisers.\r\n\t\tvar L = Logger;\r\n\r\n\t\tL.enabledFor = bind(globalLogger, globalLogger.enabledFor);\r\n\t\tL.debug = bind(globalLogger, globalLogger.debug);\r\n\t\tL.time = bind(globalLogger, globalLogger.time);\r\n\t\tL.timeEnd = bind(globalLogger, globalLogger.timeEnd);\r\n\t\tL.info = bind(globalLogger, globalLogger.info);\r\n\t\tL.warn = bind(globalLogger, globalLogger.warn);\r\n\t\tL.error = bind(globalLogger, globalLogger.error);\r\n\r\n\t\t// Don't forget the convenience alias!\r\n\t\tL.log = L.info;\r\n\t}());\r\n\r\n\t// Set the global logging handler.  The supplied function should expect two arguments, the first being an arguments\r\n\t// object with the supplied log messages and the second being a context object which contains a hash of stateful\r\n\t// parameters which the logging function can consume.\r\n\tLogger.setHandler = function (func) {\r\n\t\tlogHandler = func;\r\n\t};\r\n\r\n\t// Sets the global logging filter level which applies to *all* previously registered, and future Logger instances.\r\n\t// (note that named loggers (retrieved via `Logger.get`) can be configured independently if required).\r\n\tLogger.setLevel = function(level) {\r\n\t\t// Set the globalLogger's level.\r\n\t\tglobalLogger.setLevel(level);\r\n\r\n\t\t// Apply this level to all registered contextual loggers.\r\n\t\tfor (var key in contextualLoggersByNameMap) {\r\n\t\t\tif (contextualLoggersByNameMap.hasOwnProperty(key)) {\r\n\t\t\t\tcontextualLoggersByNameMap[key].setLevel(level);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Retrieve a ContextualLogger instance.  Note that named loggers automatically inherit the global logger's level,\r\n\t// default context and log handler.\r\n\tLogger.get = function (name) {\r\n\t\t// All logger instances are cached so they can be configured ahead of use.\r\n\t\treturn contextualLoggersByNameMap[name] ||\r\n\t\t\t(contextualLoggersByNameMap[name] = new ContextualLogger(merge({ name: name }, globalLogger.context)));\r\n\t};\r\n\r\n\t// CreateDefaultHandler returns a handler function which can be passed to `Logger.setHandler()` which will\r\n\t// write to the window's console object (if present); the optional options object can be used to customise the\r\n\t// formatter used to format each log message.\r\n\tLogger.createDefaultHandler = function (options) {\r\n\t\toptions = options || {};\r\n\r\n\t\toptions.formatter = options.formatter || function defaultMessageFormatter(messages, context) {\r\n\t\t\t// Prepend the logger's name to the log message for easy identification.\r\n\t\t\tif (context.name) {\r\n\t\t\t\tmessages.unshift(\"[\" + context.name + \"]\");\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Map of timestamps by timer labels used to track `#time` and `#timeEnd()` invocations in environments\r\n\t\t// that don't offer a native console method.\r\n\t\tvar timerStartTimeByLabelMap = {};\r\n\r\n\t\t// Support for IE8+ (and other, slightly more sane environments)\r\n\t\tvar invokeConsoleMethod = function (hdlr, messages) {\r\n\t\t\tFunction.prototype.apply.call(hdlr, console, messages);\r\n\t\t};\r\n\r\n\t\t// Check for the presence of a logger.\r\n\t\tif (typeof console === \"undefined\") {\r\n\t\t\treturn function () { /* no console */ };\r\n\t\t}\r\n\r\n\t\treturn function(messages, context) {\r\n\t\t\t// Convert arguments object to Array.\r\n\t\t\tmessages = Array.prototype.slice.call(messages);\r\n\r\n\t\t\tvar hdlr = console.log;\r\n\t\t\tvar timerLabel;\r\n\r\n\t\t\tif (context.level === Logger.TIME) {\r\n\t\t\t\ttimerLabel = (context.name ? '[' + context.name + '] ' : '') + messages[0];\r\n\r\n\t\t\t\tif (messages[1] === 'start') {\r\n\t\t\t\t\tif (console.time) {\r\n\t\t\t\t\t\tconsole.time(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttimerStartTimeByLabelMap[timerLabel] = new Date().getTime();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (console.timeEnd) {\r\n\t\t\t\t\t\tconsole.timeEnd(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinvokeConsoleMethod(hdlr, [ timerLabel + ': ' +\r\n\t\t\t\t\t\t\t(new Date().getTime() - timerStartTimeByLabelMap[timerLabel]) + 'ms' ]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Delegate through to custom warn/error loggers if present on the console.\r\n\t\t\t\tif (context.level === Logger.WARN && console.warn) {\r\n\t\t\t\t\thdlr = console.warn;\r\n\t\t\t\t} else if (context.level === Logger.ERROR && console.error) {\r\n\t\t\t\t\thdlr = console.error;\r\n\t\t\t\t} else if (context.level === Logger.INFO && console.info) {\r\n\t\t\t\t\thdlr = console.info;\r\n\t\t\t\t}\r\n\r\n\t\t\t\toptions.formatter(messages, context);\r\n\t\t\t\tinvokeConsoleMethod(hdlr, messages);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t// Configure and example a Default implementation which writes to the `window.console` (if present).  The\r\n\t// `options` hash can be used to configure the default logLevel and provide a custom message formatter.\r\n\tLogger.useDefaults = function(options) {\r\n\t\tLogger.setLevel(options && options.defaultLevel || Logger.DEBUG);\r\n\t\tLogger.setHandler(Logger.createDefaultHandler(options));\r\n\t};\r\n\r\n\t// Export to popular environments boilerplate.\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine(Logger);\r\n\t}\r\n\telse if (typeof module !== 'undefined' && module.exports) {\r\n\t\tmodule.exports = Logger;\r\n\t}\r\n\telse {\r\n\t\tLogger._prevLogger = global.Logger;\r\n\r\n\t\tLogger.noConflict = function () {\r\n\t\t\tglobal.Logger = Logger._prevLogger;\r\n\t\t\treturn Logger;\r\n\t\t};\r\n\r\n\t\tglobal.Logger = Logger;\r\n\t}\r\n}(this));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/js-logger/src/logger.js\n// module id = 25\n// module chunks = 0","module.exports = {\n\t\"id\": 0,\n\t\"type\": \"VOD\",\n\t\"session\": {\n\t\t\"id\": \"\"\n\t},\n\t\"metadata\": {\n\t\t\"key\": \"value\"\n\t},\n\t\"playback\": {\n\t\t\"autoplay\": false,\n\t\t\"muted\": false,\n\t\t\"textLanguage\": \"en\",\n\t\t\"audioLanguage\": \"en\",\n\t\t\"mediaSourceAdapterPriority\": [\n\t\t\t{\n\t\t\t\t\"engine\": \"html5\",\n\t\t\t\t\"mediaSourceAdapter\": \"hls\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"engine\": \"html5\",\n\t\t\t\t\"mediaSourceAdapter\": \"dash\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"engine\": \"html5\",\n\t\t\t\t\"mediaSourceAdapter\": \"native\"\n\t\t\t}\n\t\t]\n\t},\n\t\"plugins\": {}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./default-config.json\n// module id = 26\n// module chunks = 0"],"sourceRoot":""}