{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap e139b73322420d2dbedb","webpack:///./utils/logger.js","webpack:///./event/fake-event.js","webpack:///./engines/adapters/base-adapter.js","webpack:///./player.js","webpack:///./event/event-manager.js","webpack:///./event/events.js","webpack:///./utils/player-error.js","webpack:///./engines/adapters/adapter-manager.js","webpack:///./plugin/base-plugin.js","webpack:///./plugin/plugin-manager.js","webpack:///./event/fake-event-target.js","webpack:///./utils/multi-map.js","webpack:///./utils/util.js","webpack:///../package.json","webpack:///./engines/adapters/native-adapter.js","webpack:///./engines/html5.js","webpack:///./playkit.js","webpack:///./state/state-manager.js","webpack:///./state/state-types.js","webpack:///./state/state.js","webpack:///./utils/string-util.js","webpack:///../~/js-logger/src/logger.js"],"names":["JsLogger","LOG_LEVEL","DEBUG","INFO","TIME","WARN","ERROR","OFF","LoggerFactory","options","useDefaults","name","get","lf","defaultLevel","FakeEvent","type","payload","bubbles","cancelable","defaultPrevented","timeStamp","window","performance","now","Date","isTrusted","currentTarget","target","stopped","BaseMediaSourceAdapter","mimeType","_mimeTypes","includes","engine","source","config","_engine","_config","TYPE","NOT_IMPLEMENTED_METHOD","getError","logger","getLogger","Player","_stateManager","_pluginManager","_eventManager","_engineEventHandlers","Map","playerEvent","hasOwnProperty","set","event","dispatchEvent","defaultConfig_","loadPlugins","selectEngine","attachMedia","info","destroy","plugins","load","sources","i","length","canPlayType","mimetype","loadEngine","preload","handler","listen","play","pause","to","boundedTo","duration","currentTime","vol","boundedVol","volume","paused","seeking","mute","muted","EventManager","_bindingMap","removeAll","Promise","resolve","listener","binding","Binding_","push","list","unlisten","remove","listeners","getAll","clear","addEventListener","removeEventListener","PLAYER_EVENTS","PLAY","PAUSE","PLAYING","PROGRESS","ABORT","SUSPEND","EMPTIED","ENDED","WAITING","STALLED","LOAD_START","LOADED_METADATA","LOADED_DATA","TIME_UPDATE","RATE_CHANGE","VOLUME_CHANGE","TEXT_TRACK_CHANGE","PLAYER_STATE_CHANGED","PlayerError","error","param","message","NOT_REGISTERED_PLUGIN","NOT_VALID_HANDLER","method","MediaSourceAdapterManager","adapter","_mediaSourceAdapters","_logger","debug","index","indexOf","splice","adapters","createAdapter","engines","registerAdapter","register","BasePlugin","player","eventManager","constructor","defaultConfig","attr","update","PluginManager","_plugins","_registry","has","pluginClass","isValid","createPlugin","forEach","_destroy","bind","plugin","delete","prototype","registerPlugin","FakeEventTarget","_listeners","dispatchTarget","handleEvent","call","exception","MultiMap","_map","key","value","Array","isArray","values","slice","concat","keys","isNumber","n","Number","isInt","isFloat","merge","obj1","obj2","Object","assign","NativeAdapter","document","createElement","_msPlayer","getVideoElement","_source","url","src","_name","Html5","createVideoElement","setSource","attach","detach","_mediaSourceAdapter","_el","removeAttribute","parentNode","removeChild","style","width","height","backgroundColor","controls","body","appendChild","loadMediaSourceAdapter","getMediaSourceAdapter","seekable","played","buffered","defaultMuted","poster","autoplay","loop","playbackRate","defaultPlaybackRate","ended","networkState","readyState","videoHeight","videoWidth","TEST_VID","e","EngineName","playkit","packageData","VERSION","version","log","StateManager","_transitions","IDLE","_updateState","LOADING","_dispatchEvent","BUFFERING","_player","autoPlay","PAUSED","_history","_prevState","_curState","_attachListeners","_doTransition","transition","PLAYER_STATE_TYPES","State","_duration","_timestamp","endTime","capitlize","string","charAt","toUpperCase","endsWith","searchString"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC/DA;;IAAYA,Q;;;;;;AAEZ,IAAMC,YAAyC;AAC7C,WAASD,SAASE,KAD2B;AAE7C,UAAQF,SAASG,IAF4B;AAG7C,UAAQH,SAASI,IAH4B;AAI7C,UAAQJ,SAASK,IAJ4B;AAK7C,WAASL,SAASM,KAL2B;AAM7C,SAAON,SAASO;AAN6B,CAA/C;;IASMC,a;AACJ,yBAAYC,OAAZ,EAA8B;AAAA;;AAC5BT,aAASU,WAAT,CAAqBD,WAAW,EAAhC;AACD;;;;8BAESE,I,EAAe;AACvB,UAAI,CAACA,IAAL,EAAW;AACT,eAAOX,QAAP;AACD;AACD,aAAOA,SAASY,GAAT,CAAaD,IAAb,CAAP;AACD;;;;;;AAGH,IAAME,KAAK,IAAIL,aAAJ,CAAkB,EAACM,cAAcd,SAASE,KAAxB,EAAlB,CAAX;;kBAEeW,E;QACPZ,S,GAAAA,S;;;;;;;;;;;;;;;;;AC3BR;;;;;;;;IAQMc,S;;AA+BJ;;;;;;AANA;;;AANA;;;AAZA;;AANA;AAsCA,qBAAYC,IAAZ,EAA0BC,OAA1B,EAAwC;AAAA;;AACtC;AACA;;AAEA;AACA,SAAKC,OAAL,GAAe,KAAf;;AAEA;AACA,SAAKC,UAAL,GAAkB,KAAlB;;AAEA;AACA,SAAKC,gBAAL,GAAwB,KAAxB;;AAEA;;;;;;;AAOA,SAAKC,SAAL,GAAiBC,OAAOC,WAAP,GAAqBD,OAAOC,WAAP,CAAmBC,GAAnB,EAArB,GAAgDC,KAAKD,GAAL,EAAjE;;AAEA;AACA,SAAKR,IAAL,GAAYA,IAAZ;;AAEA;AACA,SAAKU,SAAL,GAAiB,KAAjB;;AAEA;AACA,SAAKC,aAAL,GAAqB,IAArB;;AAEA;AACA,SAAKC,MAAL,GAAc,IAAd;;AAGA;;;;AAIA,SAAKC,OAAL,GAAe,KAAf;;AAEA,SAAKZ,OAAL,GAAeA,OAAf;AACD;;AAED;;;;;;;AAvDA;;;AANA;;;AAZA;;;;;;;;;AANA;;;;;qCAoFiB,CAChB;;AAED;;;;;;;;+CAK2B;AACzB,WAAKY,OAAL,GAAe,IAAf;AACD;;AAED;;;;;;;;sCAKkB,CACjB;;;;;;kBAGYd,S;;;;;;;;;;;;;;;ACrHf;;;;;;;;AAEA;;;;IAIqBe,sB;;;;;AA6CnB;;;;;;;;AAdA;;;;;;;AAdA;;;;;;AAhBA;;;;;;kCAkD8B;AAC5B,aAAO,IAAP;AACD;;AAED;;;;;;;;;AAjBA;;;;;;;AAdA;;;;;;;AAfA;;;;;;;;;gCAqDmBC,Q,EAA2B;AAC5C,aAAO,CAAC,EAAE,KAAKC,UAAL,IAAmB,KAAKA,UAAL,CAAgBC,QAAhB,CAAyBF,QAAzB,CAArB,CAAR;AACD;;AAED;;;;;;;;;;;;kCASqBG,M,EAAiBC,M,EAAgBC,M,EAAwC;AAC5F,aAAO,IAAI,IAAJ,CAASF,MAAT,EAAiBC,MAAjB,EAAyBC,MAAzB,CAAP;AACD;;AAED;;;;;;;;;AAMA,kCAAYF,MAAZ,EAA6BC,MAA7B,EAA6CC,MAA7C,EAA6D;AAAA;;AAC3D,SAAKC,OAAL,GAAeH,MAAf;AACA,SAAKI,OAAL,GAAeF,MAAf;AACD;;AAED;;;;;;;;;;2BAMa;AACX,YAAM,0BAAgB,sBAAYG,IAAZ,CAAiBC,sBAAjC,EAAyD,MAAzD,EAAiEC,QAAjE,EAAN;AACD;;AAED;;;;;;;;8BAKU;AACR;AACD;;;;;;kBA3GkBX,sB;;;;;;;;;;;;;;;ACNrB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA,IAAIY,SAAS,iBAAcC,SAAd,CAAwB,QAAxB,CAAb;;IAGMC,M;;;AAQJ,kBAAYR,MAAZ,EAA4B;AAAA;;AAAA;;AAE1B,UAAKS,aAAL,GAAqB,iCAArB;AACA,UAAKC,cAAL,GAAsB,6BAAtB;AACA,UAAKC,aAAL,GAAqB,4BAArB;AACA,UAAKC,oBAAL,GAA4B,IAAIC,GAAJ,EAA5B;AACA,SAAK,IAAIC,WAAT,sBAAsC;AACpC,UAAI,iBAAaC,cAAb,CAA4BD,WAA5B,CAAJ,EAA8C;AAC5C,cAAKF,oBAAL,CAA0BI,GAA1B,cAAyC,2BAAU,iBAAaF,WAAb,CAAV,CAAzC,QAAkF,UAACG,KAAD,EAAW;AAC3F,iBAAO,MAAKC,aAAL,CAAmBD,KAAnB,CAAP;AACD,SAFD;AAGD;AACF;AACD,UAAKf,OAAL,GAAeF,UAAUQ,OAAOW,cAAP,EAAzB;AACA,UAAKC,WAAL,CAAiB,MAAKlB,OAAtB;AACA,UAAKmB,YAAL,CAAkB,MAAKnB,OAAvB;AACA,UAAKoB,WAAL;AACAhB,WAAOiB,IAAP,CAAY,kBAAZ;AAjB0B;AAkB3B;;;;8BAES;AACR,WAAKtB,OAAL,CAAauB,OAAb;AACA,WAAKb,aAAL,CAAmBa,OAAnB;AACA,WAAKd,cAAL,CAAoBc,OAApB;AACA,WAAKf,aAAL,CAAmBe,OAAnB;AACA;AACA;AACA,WAAKtB,OAAL,GAAe,IAAf;AACD;;;gCAMWF,M,EAAsB;AAChC,UAAIyB,UAAUzB,OAAOyB,OAArB;AACA,WAAK,IAAIlD,IAAT,IAAiBkD,OAAjB,EAA0B;AACxB,YAAIA,QAAQV,cAAR,CAAuBxC,IAAvB,CAAJ,EAAkC;AAChC,eAAKmC,cAAL,CAAoBgB,IAApB,CAAyBnD,IAAzB,EAA+B,IAA/B,EAAqCkD,QAAQlD,IAAR,CAArC;AACD;AACF;AACF;;;iCAEYyB,M,EAAgB;AAC3B,UAAIA,UAAUA,OAAO2B,OAArB,EAA8B;AAC5B,YAAIA,UAAU3B,OAAO2B,OAArB;AACA,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAID,QAAQE,MAA5B,EAAoCD,GAApC,EAAyC;AACvC,cAAI,eAAME,WAAN,CAAkBH,QAAQC,CAAR,EAAWG,QAA7B,CAAJ,EAA4C;AAC1C,iBAAKC,UAAL,CAAgBL,QAAQC,CAAR,CAAhB,EAA4B5B,MAA5B;AACA;AACD;AACF;AACF;AACF;;;+BAEUD,M,EAAgBC,M,EAAgB;AACzC,WAAKC,OAAL,GAAe,mBAAUF,MAAV,EAAkBC,MAAlB,CAAf;AACA,UAAIA,OAAOiC,OAAP,KAAmB,MAAvB,EAA+B;AAC7B,aAAKP,IAAL;AACD;AACF;;;kCAEa;AACZ;AACA,WAAK,IAAIZ,WAAT,sBAAsC;AACpC,YAAI,iBAAaC,cAAb,CAA4BD,WAA5B,CAAJ,EAA8C;AAC5C,cAAMoB,UAAU,KAAKtB,oBAAL,CAA0BpC,GAA1B,cAAyC,2BAAU,iBAAasC,WAAb,CAAV,CAAzC,OAAhB;AACA,cAAIoB,OAAJ,EAAa;AACX,iBAAKvB,aAAL,CAAmBwB,MAAnB,CAA0B,KAAKlC,OAA/B,EAAwC,iBAAaa,WAAb,CAAxC,EAAmEoB,OAAnE;AACD;AACF;AACF;AACF;;AAED;;;;;;;;;AAQA;AACA;;;;2BAIa;AACX,aAAO,KAAKjC,OAAL,CAAamC,IAAb,EAAP;AACD;;AAED;;;;;;;4BAIc;AACZ,aAAO,KAAKnC,OAAL,CAAaoC,KAAb,EAAP;AACD;;AAED;;;;;;;2BAIa;AACX,WAAKpC,OAAL,CAAayB,IAAb;AACD;;AAED;;;;;;;;;AA2DA;;AAEA;4BACQ,CACP;;AAED;;;;;;;+BAgBW,CACV;;AAED;;;;;;;wBAjHqB;AACnB,aAAO,KAAKxB,OAAZ;AACD;;;sBA+BeoC,E,EAAY;AAC1B,UAAI,oBAASA,EAAT,CAAJ,EAAkB;AAChB,YAAIC,YAAYD,EAAhB;AACA,YAAIA,KAAK,CAAT,EAAY;AACVC,sBAAY,CAAZ;AACD;AACD,YAAIA,YAAY,KAAKtC,OAAL,CAAauC,QAA7B,EAAuC;AACrCD,sBAAY,KAAKtC,OAAL,CAAauC,QAAzB;AACD;AACD,aAAKvC,OAAL,CAAawC,WAAb,GAA2BF,SAA3B;AACD;AACF;;AAED;;;;;wBAI0B;AACxB,aAAO,KAAKtC,OAAL,CAAawC,WAApB;AACD;;AAED;;;;;;;;wBAKuB;AACrB,aAAO,KAAKxC,OAAL,CAAauC,QAApB;AACD;;AAED;;;;;;;sBAIWE,G,EAAa;AACtB,UAAI,mBAAQA,GAAR,CAAJ,EAAkB;AAChB,YAAIC,aAAaD,GAAjB;AACA,YAAIC,aAAa,CAAjB,EAAoB;AAClBA,uBAAa,CAAb;AACD;AACD,YAAIA,aAAa,CAAjB,EAAoB;AAClBA,uBAAa,CAAb;AACD;AACD,aAAK1C,OAAL,CAAa2C,MAAb,GAAsBD,UAAtB;AACD;AACF;;AAED;;;;;wBAIqB;AACnB,aAAO,KAAK1C,OAAL,CAAa2C,MAApB;AACD;;;wBAYqB;AACpB,aAAO,KAAK3C,OAAL,CAAa4C,MAApB;AACD;;AAED;;;;;;;wBAIuB;AACrB,aAAO,KAAK5C,OAAL,CAAa6C,OAApB;AACD;;;sBASSC,I,EAAe;AACvB,WAAK9C,OAAL,CAAa+C,KAAb,GAAqBD,IAArB;AACD;;AAED;;;;;wBAIqB;AACnB,aAAO,KAAK9C,OAAL,CAAa+C,KAApB;AACD;;AAEH;;;;qCAjL0B;AACtB,aAAO,EAAP;AACD;;;;;;kBAkLYxC,M;;;;;;;;;;;;;;;ACxOf;;;;AACA;;;;;;;;AAEA;;;;;;;;IAQMyC,Y;AAGJ,0BAAc;AAAA;;AACZ;;;;AAIA,SAAKC,WAAL,GAAmB,wBAAnB;AACD;;AAED;;;;;;;;8BAIU;AACR,WAAKC,SAAL;AACA,WAAKD,WAAL,GAAmB,IAAnB;AACA,aAAOE,QAAQC,OAAR,EAAP;AACD;;AAGD;;;;;;;;;;2BAOO7D,M,EAAaZ,I,EAAc0E,Q,EAA8B;AAC9D,UAAIC,UAAU,IAAIC,QAAJ,CAAahE,MAAb,EAAqBZ,IAArB,EAA2B0E,QAA3B,CAAd;AACA,UAAI,KAAKJ,WAAT,EAAsB;AACpB,aAAKA,WAAL,CAAiBO,IAAjB,CAAsB7E,IAAtB,EAA4B2E,OAA5B;AACD;AACF;;AAGD;;;;;;;;;6BAMS/D,M,EAAaZ,I,EAAoB;AACxC,UAAI,KAAKsE,WAAT,EAAsB;AACpB,YAAIQ,OAAO,KAAKR,WAAL,CAAiB1E,GAAjB,CAAqBI,IAArB,CAAX;;AAEA,aAAK,IAAIgD,IAAI,CAAb,EAAgBA,IAAI8B,KAAK7B,MAAzB,EAAiC,EAAED,CAAnC,EAAsC;AACpC,cAAI2B,UAAUG,KAAK9B,CAAL,CAAd;;AAEA,cAAI2B,QAAQ/D,MAAR,IAAkBA,MAAtB,EAA8B;AAC5B+D,oBAAQI,QAAR;AACA,gBAAI,KAAKT,WAAT,EAAsB;AACpB,mBAAKA,WAAL,CAAiBU,MAAjB,CAAwBhF,IAAxB,EAA8B2E,OAA9B;AACD;AACF;AACF;AACF;AACF;;AAED;;;;;;;gCAIkB;AAChB,UAAI,KAAKL,WAAT,EAAsB;AACpB,YAAIW,YAAY,KAAKX,WAAL,CAAiBY,MAAjB,EAAhB;;AADoB;AAAA;AAAA;;AAAA;AAGpB,+BAAqBD,SAArB,8HAAgC;AAAA,gBAAvBP,QAAuB;;AAC9BA,qBAASK,QAAT;AACD;AALmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMpB,YAAI,KAAKT,WAAT,EAAsB;AACpB,eAAKA,WAAL,CAAiBa,KAAjB;AACD;AACF;AACF;;;;;;AAGH;;;;;AAKA;;;;;;;;IAQMP,Q;AAKJ,oBAAYhE,MAAZ,EAAoBZ,IAApB,EAA0B0E,QAA1B,EAAoC;AAAA;;AAClC;AACA,SAAK9D,MAAL,GAAcA,MAAd;;AAEA;AACA,SAAKZ,IAAL,GAAYA,IAAZ;;AAEA;AACA,SAAK0E,QAAL,GAAgBA,QAAhB;;AAEA,SAAK9D,MAAL,CAAYwE,gBAAZ,CAA6BpF,IAA7B,EAAmC0E,QAAnC,EAA6C,KAA7C;AACD;;AAGD;;;;;;;;;+BAKiB;AACf,UAAI,CAAC,KAAK9D,MAAV,EACE;;AAEF,WAAKA,MAAL,CAAYyE,mBAAZ,CAAgC,KAAKrF,IAArC,EAA2C,KAAK0E,QAAhD,EAA0D,KAA1D;;AAEA,WAAK9D,MAAL,GAAc,IAAd;AACA,WAAK8D,QAAL,GAAgB,IAAhB;AACD;;;;;;kBAGYL,Y;;;;;;;;;;;;ACzIf,IAAMiB,gBAAgB;AACpBC,QAAM,MADc;AAEpBC,SAAO,OAFa;AAGpB;;;AAGAC,WAAS,SANW;AAOpB;;;AAGAC,YAAU,UAVU;AAWpB;;;AAGAC,SAAO,OAda;AAepB;;;AAGArG,SAAO,OAlBa;AAmBpB;;;AAGAsG,WAAS,SAtBW;AAuBpB;;;AAGAC,WAAS,SA1BW;AA2BpB;;;AAGAC,SAAO,OA9Ba;AA+BpB;;;AAGAC,WAAS,SAlCW;AAmCpB;;;AAGAC,WAAS,SAtCW;AAuCpB;;;AAGAC,cAAY,WA1CQ;AA2CpB;;;AAGAC,mBAAiB,gBA9CG;AA+CpB;;;AAGAC,eAAa,YAlDO;AAmDpB;;;AAGAC,eAAa,YAtDO;AAuDpB;;;AAGAC,eAAa,YA1DO;AA2DpB;;;AAGAC,iBAAe,cA9DK;AA+DpB;;;AAGAC,qBAAmB,iBAlEC;AAmEpB;;;AAGAC,wBAAsB;AAtEF,CAAtB;;kBAyEelB,a;;;;;;;;;;;;;;;;;ICzEMmB,W;AAyBnB,uBAAYC,KAAZ,EAA2BC,KAA3B,EAAwC;AAAA;;AACtC,SAAKhH,IAAL,GAAY+G,MAAM/G,IAAlB;AACA,SAAKiH,OAAL,GAAeF,MAAME,OAAN,CAAcD,KAAd,CAAf;AACD;;;;+BAEU;AACT,aAAO;AACLhH,cAAM,KAAKA,IADN;AAELiH,iBAAS,KAAKA;AAFT,OAAP;AAID;;;;;;AAnCkBH,W,CACZlF,I,GAAiC;AACtCsF,yBAAuB;AACrBlH,UAAM,8BADe;AAErBiH,aAAS,iBAAUjH,IAAV,EAAgB;AACvB,8BAAsBA,IAAtB;AACD;AAJoB,GADe;AAOtCmH,qBAAmB;AACjBnH,UAAM,kCADW;AAEjBiH,aAAS,mBAAY;AACnB,aAAO,qEAAP;AACD;AAJgB,GAPmB;AAatCpF,0BAAwB;AACtB7B,UAAM,yBADgB;AAEtBiH,aAAS,iBAAUG,MAAV,EAAkB;AACzB,aAAUA,MAAV;AACD;AAJqB;AAbc,C;kBADrBN,W;;;;;;;;;;;;;;;;ACArB;;;;AACA;;;;AACA;;;;;;;;AAEA;;;;IAIqBO,yB;;;;;;;;;AAgBnB;;;;;;;;AAfA;;;;;;6BAsBgBC,O,EAA8C;AAC5D,UAAIA,WAAW,CAACD,0BAA0BE,oBAA1B,CAA+CjG,QAA/C,CAAwDgG,OAAxD,CAAhB,EAAkF;AAChFD,kCAA0BG,OAA1B,CAAkCC,KAAlC,eAAoDH,QAAQtH,IAA5D;AACAqH,kCAA0BE,oBAA1B,CAA+CrC,IAA/C,CAAoDoC,OAApD;AACD;AACF;;AAED;;;;;;;;AAtBA;;;;;;;;;+BA6BkBA,O,EAA8C;AAC9D,UAAII,QAAQL,0BAA0BE,oBAA1B,CAA+CI,OAA/C,CAAuDL,OAAvD,CAAZ;AACA,UAAII,QAAQ,CAAC,CAAb,EAAgB;AACdL,kCAA0BG,OAA1B,CAAkCC,KAAlC,oBAAyDH,QAAQtH,IAAjE;AACAqH,kCAA0BE,oBAA1B,CAA+CK,MAA/C,CAAsDF,KAAtD,EAA6D,CAA7D;AACD;AACF;;AAED;;;;;;;;;;gCAOmBtG,Q,EAA2B;AAC5C,UAAIyG,WAAWR,0BAA0BE,oBAAzC;AACA,WAAK,IAAIlE,IAAI,CAAb,EAAgBA,IAAIwE,SAASvE,MAA7B,EAAqCD,GAArC,EAA0C;AACxCgE,kCAA0BG,OAA1B,CAAkCC,KAAlC,gCAAqEI,SAASxE,CAAT,EAAYrD,IAAjF;AACA,YAAI6H,SAASxE,CAAT,EAAYE,WAAZ,CAAwBnC,QAAxB,CAAJ,EAAuC;AACrC,iBAAO,IAAP;AACD;AACF;AACD,aAAO,KAAP;AACD;;AAED;;;;;;;;;;;;0CAS6BG,M,EAAiBC,M,EAAgBC,M,EAAyC;AACrG,UAAIF,UAAUC,MAAV,IAAoBC,MAAxB,EAAgC;AAC9B,YAAIoG,WAAWR,0BAA0BE,oBAAzC;AACA,aAAK,IAAIlE,IAAI,CAAb,EAAgBA,IAAIwE,SAASvE,MAA7B,EAAqCD,GAArC,EAA0C;AACxCgE,oCAA0BG,OAA1B,CAAkCC,KAAlC,gCAAqEI,SAASxE,CAAT,EAAYrD,IAAjF;AACA,cAAI6H,SAASxE,CAAT,EAAYE,WAAZ,CAAwB/B,OAAOgC,QAA/B,CAAJ,EAA8C;AAC5C6D,sCAA0BG,OAA1B,CAAkCC,KAAlC,gBAAqDI,SAASxE,CAAT,EAAYrD,IAAjE;AACA,mBAAO6H,SAASxE,CAAT,EAAYyE,aAAZ,CAA0BvG,MAA1B,EAAkCC,MAAlC,EAA0CC,OAAOsG,OAAjD,CAAP;AACD;AACF;AACF;AACD,aAAO,IAAP;AACD;;;;;;AApFkBV,yB,CAOZG,O,GAAe,iBAAcxF,SAAd,CAAwB,2BAAxB,C;AAPHqF,yB,CAcZE,oB,GAA6D,yB;kBAdjDF,yB;;;AAuFrB,IAAMW,kBAAkBX,0BAA0BY,QAAlD;QACQD,e,GAAAA,e;;;;;;;;;;;;;;;AChGR;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;;;AAEA;;;;;IAKqBE,U;;;;;AAmCnB;;;;;;;;;;AAdA;;;;;AAVA;;;;;AAVA;;;;iCA2CoBlI,I,EAAcmI,M,EAAiD;AAAA,UAAjC1G,MAAiC,uEAAhB,EAAgB;;AACjF,aAAO,IAAI,IAAJ,CAASzB,IAAT,EAAemI,MAAf,EAAuB1G,MAAvB,CAAP;AACD;;AAED;;;;;;;;;AAtBA;;;;;;;;AAVA;;;;;AAVA;;;;;;;8BAkD0B;AACxB,YAAM,0BAAgB,sBAAYG,IAAZ,CAAiBC,sBAAjC,EAAyD,WAAzD,EAAsEC,QAAtE,EAAN;AACD;;AAED;;;;;;;;;;;AAQA,sBAAY9B,IAAZ,EAA0BmI,MAA1B,EAA0C1G,MAA1C,EAA0D;AAAA;;AACxD,SAAKzB,IAAL,GAAYA,IAAZ;AACA,SAAKmI,MAAL,GAAcA,MAAd;AACA,SAAKC,YAAL,GAAoB,4BAApB;AACA,SAAKrG,MAAL,GAAc,iBAAcC,SAAd,CAAwB,KAAKhC,IAA7B,CAAd;AACA,SAAKyB,MAAL,GAAc,iBAAM,KAAK4G,WAAL,CAAiBC,aAAvB,EAAsC7G,MAAtC,CAAd;AACD;;AAED;;;;;;;;;;8BAMU8G,I,EAAoB;AAC5B,UAAIA,IAAJ,EAAU;AACR,eAAO,KAAK9G,MAAL,CAAY8G,IAAZ,CAAP;AACD;AACD,aAAO,KAAK9G,MAAZ;AACD;;AAED;;;;;;;;;iCAMa+G,M,EAAsB;AACjC,WAAK/G,MAAL,GAAc,iBAAM,KAAKA,MAAX,EAAmB+G,MAAnB,CAAd;AACD;;AAED;;;;;;;;;;8BAOgB;AACd,YAAM,0BAAgB,sBAAY5G,IAAZ,CAAiBC,sBAAjC,EAAyD,WAAzD,EAAsEC,QAAtE,EAAN;AACD;;AAED;;;;;;;;8BAKkB;AAChB,aAAO,KAAK9B,IAAZ;AACD;;;;;;AArHkBkI,U,CAiCZI,a,GAAwB,E;kBAjCZJ,U;;;;;;;;;;;;;;;;ACXrB;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA;;;;;AAKA,IAAMnG,SAAS,iBAAcC,SAAd,CAAwB,eAAxB,CAAf;;AAEA;;;;IAGqByG,a;;;;SAenBC,Q,GAAoC,IAAIpG,GAAJ,E;;AAdpC;;;;;;;;AAQA;;;;;;;;;;;;AA4CA;;;;;;;;yBAQKtC,I,EAAcmI,M,EAA8C;AAAA,UAA9B1G,MAA8B,uEAAb,EAAa;;AAC/D,UAAI,CAACgH,cAAcE,SAAd,CAAwBC,GAAxB,CAA4B5I,IAA5B,CAAL,EAAwC;AACtC,cAAM,0BAAgB,sBAAY4B,IAAZ,CAAiBsF,qBAAjC,EAAwDlH,IAAxD,EAA8D8B,QAA9D,EAAN;AACD;AACD,UAAI+G,cAAcJ,cAAcE,SAAd,CAAwB1I,GAAxB,CAA4BD,IAA5B,CAAlB;AACA,UAAI6I,eAAe,IAAf,IAAuBA,YAAYC,OAAZ,EAA3B,EAAkD;AAChD,aAAKJ,QAAL,CAAcjG,GAAd,CAAkBzC,IAAlB,EAAwB6I,YAAYE,YAAZ,CAAyB/I,IAAzB,EAA+BmI,MAA/B,EAAuC1G,MAAvC,CAAxB;AACAM,eAAO0F,KAAP,cAAwBzH,IAAxB;AACA,eAAO,IAAP;AACD;AACD+B,aAAO0F,KAAP,cAAwBzH,IAAxB;AACA,aAAO,KAAP;AACD;;AAED;;;;;;;;8BAKgB;AACd,WAAK0I,QAAL,CAAcM,OAAd,CAAsB,KAAKC,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAtB;AACD;;AAED;;;;;;;;;;6BAOSC,M,EAAoBnJ,I,EAAoB;AAC/CmJ,aAAOlG,OAAP;AACA,WAAKyF,QAAL,CAAcU,MAAd,CAAqBpJ,IAArB;AACD;;AAED;;;;;;;;;wBAMIA,I,EAA2B;AAC7B,aAAO,KAAK0I,QAAL,CAAczI,GAAd,CAAkBD,IAAlB,CAAP;AACD;;;;;AAvFD;;;;;;;;;6BASgBA,I,EAAc2D,O,EAA4B;AACxD,UAAI,OAAOA,OAAP,KAAmB,UAAnB,IAAiCA,QAAQ0F,SAAR,qCAA4C,KAAjF,EAAwF;AACtF,cAAM,0BAAgB,sBAAYzH,IAAZ,CAAiBuF,iBAAjC,EAAoDrF,QAApD,EAAN;AACD;AACD,UAAI,CAAC2G,cAAcE,SAAd,CAAwBC,GAAxB,CAA4B5I,IAA5B,CAAL,EAAwC;AACtCyI,sBAAcE,SAAd,CAAwBlG,GAAxB,CAA4BzC,IAA5B,EAAkC2D,OAAlC;AACA5B,eAAO0F,KAAP,cAAwBzH,IAAxB;AACA,eAAO,IAAP;AACD;AACD+B,aAAO0F,KAAP,cAAwBzH,IAAxB;AACA,aAAO,KAAP;AACD;;AAED;;;;;;;;;;+BAOkBA,I,EAAoB;AACpC,UAAIyI,cAAcE,SAAd,CAAwBC,GAAxB,CAA4B5I,IAA5B,CAAJ,EAAuC;AACrCyI,sBAAcE,SAAd,CAAwBS,MAAxB,CAA+BpJ,IAA/B;AACA+B,eAAO0F,KAAP,oBAA8BzH,IAA9B;AACD;AACF;;;;;;AAwDH;;;;;;;AA3GqByI,a,CAQZE,S,GAAmC,IAAIrG,GAAJ,E;kBARvBmG,a;AAgHrB,IAAMa,iBAAiBb,cAAcR,QAArC;QACQqB,c,GAAAA,c;;;;;;;;;;;;;;;AChIR;;;;AACA;;;;;;;;AAEA;;;;;;;;;;IAUMC,e;AAIJ,6BAAc;AAAA;;AACZ;;;AAGA,SAAKC,UAAL,GAAkB,wBAAlB;;AAEA;;;;AAIA,SAAKC,cAAL,GAAsB,IAAtB;AACD;;AAED;;;;;;;;;;;;;;;qCAWiBpJ,I,EAAc0E,Q,EAAwB;AACrD,WAAKyE,UAAL,CAAgBtE,IAAhB,CAAqB7E,IAArB,EAA2B0E,QAA3B;AACD;;AAED;;;;;;;;;;;;;;wCAWoB1E,I,EAAc0E,Q,EAAwB;AACxD,WAAKyE,UAAL,CAAgBnE,MAAhB,CAAuBhF,IAAvB,EAA6B0E,QAA7B;AACD;;AAED;;;;;;;;;;;kCAQcrC,K,EAAkB;AAC9B;AACA;AACA;AACA;;AAEA,UAAIyC,OAAO,KAAKqE,UAAL,CAAgBvJ,GAAhB,CAAoByC,MAAMrC,IAA1B,KAAmC,EAA9C;;AAEA,WAAK,IAAIgD,IAAI,CAAb,EAAgBA,IAAI8B,KAAK7B,MAAzB,EAAiC,EAAED,CAAnC,EAAsC;AACpC;AACAX,cAAMzB,MAAN,GAAe,KAAKwI,cAApB;AACA/G,cAAM1B,aAAN,GAAsB,KAAKyI,cAA3B;;AAEA,YAAI1E,WAAWI,KAAK9B,CAAL,CAAf;AACA,YAAI;AACF,cAAI0B,SAAS2E,WAAb,EAA0B;AACxB3E,qBAAS2E,WAAT,CAAqBhH,KAArB;AACD,WAFD,MAEO;AACLqC,qBAAS4E,IAAT,CAAc,IAAd,EAAoBjH,KAApB;AACD;AACF,SAND,CAME,OAAOkH,SAAP,EAAkB;AAClB;AACA;AACA;AACA;AACD;;AAED,YAAIlH,MAAMxB,OAAV,EAAmB;AACjB;AACD;AACF;;AAED,aAAOwB,MAAMjC,gBAAb;AACD;;;;;;AAGH;;;;;;kBAMe8I,e;;;;;;;;;;;;;;;;;AC7Gf;;;;;;IAMMM,Q;AAGJ,sBAAc;AAAA;;AACZ;AACA,SAAKC,IAAL,GAAY,IAAIxH,GAAJ,EAAZ;AACD;;AAED;;;;;;;;;;yBAMKyH,G,EAAaC,K,EAAgB;AAChC,UAAI,KAAKF,IAAL,CAAUlB,GAAV,CAAcmB,GAAd,CAAJ,EAAwB;AACtB,YAAI5E,OAAO,KAAK2E,IAAL,CAAU7J,GAAV,CAAc8J,GAAd,CAAX;AACA,YAAIE,MAAMC,OAAN,CAAc/E,IAAd,CAAJ,EAAyB;AACvBA,eAAKD,IAAL,CAAU8E,KAAV;AACA,eAAKF,IAAL,CAAUrH,GAAV,CAAcsH,GAAd,EAAmB5E,IAAnB;AACD;AACF,OAND,MAMO;AACL,aAAK2E,IAAL,CAAUrH,GAAV,CAAcsH,GAAd,EAAmB,CAACC,KAAD,CAAnB;AACD;AACF;;AAED;;;;;;;;;wBAMID,G,EAAaI,M,EAAmB;AAClC,WAAKL,IAAL,CAAUrH,GAAV,CAAcsH,GAAd,EAAmBI,MAAnB;AACD;;AAED;;;;;;;;wBAKIJ,G,EAAsB;AACxB,aAAO,KAAKD,IAAL,CAAUlB,GAAV,CAAcmB,GAAd,CAAP;AACD;;AAED;;;;;;;;wBAKIA,G,EAAuB;AACzB,UAAI5E,OAAO,KAAK2E,IAAL,CAAU7J,GAAV,CAAc8J,GAAd,CAAX;AACA;AACA;AACA,aAAO5E,OAAOA,KAAKiF,KAAL,EAAP,GAAsB,EAA7B;AACD;;AAED;;;;;;;6BAIc;AACZ,UAAIjF,OAAY,EAAhB;AADY;AAAA;AAAA;;AAAA;AAEZ,6BAAkB,KAAK2E,IAAL,CAAUK,MAAV,EAAlB,8HAAsC;AAAA,cAA7BH,KAA6B;;AACpC7E,iBAAOA,KAAKkF,MAAL,CAAYL,KAAZ,CAAP;AACD;AAJW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKZ,aAAO7E,IAAP;AACD;;AAED;;;;;;;;;2BAMO4E,G,EAAaC,K,EAAgB;AAClC,UAAI,CAAC,KAAKF,IAAL,CAAUlB,GAAV,CAAcmB,GAAd,CAAL,EAAyB;AACzB,UAAI5E,OAAO,KAAK2E,IAAL,CAAU7J,GAAV,CAAc8J,GAAd,CAAX;AACA,UAAIE,MAAMC,OAAN,CAAc/E,IAAd,CAAJ,EAAyB;AACvB,aAAK,IAAI9B,IAAI,CAAb,EAAgBA,IAAI8B,KAAK7B,MAAzB,EAAiC,EAAED,CAAnC,EAAsC;AACpC,cAAI8B,KAAK9B,CAAL,KAAW2G,KAAf,EAAsB;AACpB7E,iBAAKyC,MAAL,CAAYvE,CAAZ,EAAe,CAAf;AACA,cAAEA,CAAF;AACD;AACF;AACF;AACF;;AAED;;;;AAIA;;;;2BACyB;AACvB,aAAO,KAAKyG,IAAL,CAAUQ,IAAV,EAAP;AACD;;AAGD;;;;;;;4BAIc;AACZ,WAAKR,IAAL,CAAUtE,KAAV;AACD;;;;;;kBAGYqE,Q;;;;;;;AClHf;;AAEA;;;;;;;;AAIA,SAASU,QAAT,CAAkBC,CAAlB,EAAsC;AACpC,SAAOC,OAAOD,CAAP,MAAcA,CAArB;AACD;;AAED;;;;AAIA,SAASE,KAAT,CAAeF,CAAf,EAAmC;AACjC,SAAOD,SAASC,CAAT,KAAeA,IAAI,CAAJ,KAAU,CAAhC;AACD;;AAED;;;;AAIA,SAASG,OAAT,CAAiBH,CAAjB,EAAqC;AACnC,SAAOD,SAASC,CAAT,KAAeA,IAAI,CAAJ,KAAU,CAAhC;AACD;;AAED;;;;;AAKA,SAASI,KAAT,CAAeC,IAAf,EAA6BC,IAA7B,EAAmD;AACjD,MAAI,CAACD,IAAD,IAAS,CAACC,IAAd,EAAoB,OAAO,EAAP;AACpB,MAAI,CAACD,IAAL,EAAW,OAAOC,IAAP;AACX,MAAI,CAACA,IAAL,EAAW,OAAOD,IAAP;AACX,SAAOE,OAAOC,MAAP,CAAcH,IAAd,EAAoBC,IAApB,CAAP;AACD;;QAEOP,Q,GAAAA,Q;QAAUG,K,GAAAA,K;QAAOC,O,GAAAA,O;QAASC,K,GAAAA,K;;;;;;ACvClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,E;;;;;;;;;;;;;;;ACrEA;;;;;;;;;;;;AAEA;;;;;IAKqBK,a;;;;;;;AASnB;;;;;;;;gCAQmB7J,Q,EAA2B;AAC5C,aAAO,CAAC,CAAE8J,SAASC,aAAT,CAAuB,OAAvB,EAAgC5H,WAAhC,CAA4CnC,QAA5C,CAAV;AACD;;AAED;;;;;;;AApBA;;;;;;;;;AA0BA,yBAAYG,MAAZ,EAA6BC,MAA7B,EAA6CC,MAA7C,EAA6D;AAAA;;AAAA,8HACrDF,MADqD,EAC7CC,MAD6C,EACrCC,MADqC;;AAE3D,UAAK2J,SAAL,GAAiB7J,OAAO8J,eAAP,EAAjB;AACA,UAAKC,OAAL,GAAe9J,OAAO+J,GAAtB;AACA,QAAI/J,MAAJ,EAAY;AACV,YAAK4J,SAAL,CAAeI,GAAf,GAAqBhK,OAAO+J,GAA5B;AACD;AAN0D;AAO5D;;AAED;;;;;;;;;2BAKa;AACX,WAAKH,SAAL,CAAejI,IAAf;AACD;;;;;;AA3CkB8H,a,CAOZQ,K,GAAQ,e;kBAPIR,a;;;;;;;;;;;;;;;ACPrB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEqBS,K;;;;;gCAOAtK,Q,EAAU;AAC3B,aAAO,yBAAWmC,WAAX,CAAuBnC,QAAvB,CAAP;AACD;;;AAED,iBAAYI,MAAZ,EAA4BC,MAA5B,EAA4C;AAAA;;AAAA;;AAE1C,UAAKkK,kBAAL;AACA,UAAKvJ,aAAL,GAAqB,4BAArB;AACA,UAAKwJ,SAAL,CAAepK,MAAf,EAAuBC,MAAvB;AACA,UAAKoK,MAAL;AAL0C;AAM3C;;;;8BAES;AACR,WAAKC,MAAL;AACA,UAAI,KAAKC,mBAAT,EAA8B;AAC5B,aAAKA,mBAAL,CAAyB9I,OAAzB;AACD;AACD,UAAI,KAAK+I,GAAT,EAAc;AACZ,aAAKlI,KAAL;AACA,aAAKkI,GAAL,CAASC,eAAT,CAAyB,KAAzB;AACA,YAAI,KAAKD,GAAL,CAASE,UAAb,EAAyB;AACvB,eAAKF,GAAL,CAASE,UAAT,CAAoBC,WAApB,CAAgC,KAAKH,GAArC;AACD;AACF;AACF;;;6BAEQ;AAAA;;AAAA,iCACEzJ,WADF;AAEL,YAAI,iBAAaC,cAAb,CAA4BD,WAA5B,CAAJ,EAA8C;AAC5C,iBAAKH,aAAL,CAAmBwB,MAAnB,CAA0B,OAAKoI,GAA/B,EAAoC,iBAAazJ,WAAb,CAApC,EAA+D,YAAM;AACnE,mBAAKI,aAAL,CAAmB,wBAAc,iBAAaJ,WAAb,CAAd,CAAnB;AACD,WAFD;AAGD;AANI;;AACP,WAAK,IAAIA,WAAT,sBAAsC;AAAA,cAA7BA,WAA6B;AAMrC;AACF;;;6BAEQ;AACP,WAAK,IAAIA,WAAT,sBAAsC;AACpC,YAAI,iBAAaC,cAAb,CAA4BD,WAA5B,CAAJ,EAA8C;AAC5C,eAAKH,aAAL,CAAmBgD,QAAnB,CAA4B,KAAK4G,GAAjC,EAAsC,iBAAazJ,WAAb,CAAtC;AACD;AACF;AACF;;;yCAEoB;AACnB,WAAKyJ,GAAL,GAAWd,SAASC,aAAT,CAAuB,OAAvB,CAAX;AACA;AACA,WAAKa,GAAL,CAASI,KAAT,CAAeC,KAAf,GAAuB,OAAvB;AACA,WAAKL,GAAL,CAASI,KAAT,CAAeE,MAAf,GAAwB,OAAxB;AACA,WAAKN,GAAL,CAASI,KAAT,CAAeG,eAAf,GAAiC,OAAjC;AACA,WAAKP,GAAL,CAASQ,QAAT,GAAoB,IAApB;AACA,UAAItB,YAAYA,SAASuB,IAAzB,EAA+B;AAC7BvB,iBAASuB,IAAT,CAAcC,WAAd,CAA0B,KAAKV,GAA/B;AACD;AACF;;;sCAEmC;AAClC,aAAO,KAAKA,GAAZ;AACD;;;8BAESxK,M,EAAgBC,M,EAAgB;AACxC,WAAKkL,sBAAL,CAA4BnL,MAA5B,EAAoCC,MAApC;AACD;;;2CAEsBD,M,EAAgBC,M,EAAgB;AACrD,WAAKsK,mBAAL,GAA2B,yBAAWa,qBAAX,CAAkC,IAAlC,EAAgDpL,MAAhD,EAAwDC,MAAxD,CAA3B;AACD;;;;;AAWD;AACA;;;;2BAIa;AACX,aAAO,KAAKuK,GAAL,CAASnI,IAAT,EAAP;AACD;;AAED;;;;;;;4BAIc;AACZ,aAAO,KAAKmI,GAAL,CAASlI,KAAT,EAAP;AACD;;AAED;;;;;;;2BAIa;AACX,UAAI,KAAKiI,mBAAT,EAA8B;AAC5B,aAAKA,mBAAL,CAAyB5I,IAAzB;AACD;AACF;;AAED;;;;;;;;;AAwCA;4BACQ,CACP;;AAED;;;;;;;sBAhFQ3B,M,EAAsB;AAC5B;AACA,WAAKwK,GAAL,CAASR,GAAT,GAAehK,MAAf;AACD,K;wBAEiB;AAChB,aAAO,KAAKwK,GAAL,CAASR,GAAhB;AACD;;;wBAiCyB;AACxB,aAAO,KAAKQ,GAAL,CAAS9H,WAAhB;AACD;;AAED;;;;;sBAIgBH,E,EAAY;AAC1B,WAAKiI,GAAL,CAAS9H,WAAT,GAAuBH,EAAvB;AACD;;AAED;;;;;;;wBAIuB;AACrB,aAAO,KAAKiI,GAAL,CAAS/H,QAAhB;AACD;;AAED;;;;;;;sBAIWE,G,EAAa;AACtB,WAAK6H,GAAL,CAAS3H,MAAT,GAAkBF,GAAlB;AACD;;AAED;;;;;wBAIqB;AACnB,aAAO,KAAK6H,GAAL,CAAS3H,MAAhB;AACD;;;wBAUqB;AACpB,aAAO,KAAK2H,GAAL,CAAS1H,MAAhB;AACD;;AAED;;;;;;;wBAIuB;AACrB,aAAO,KAAK0H,GAAL,CAASzH,OAAhB;AACD;;;wBAE0B;AACzB,aAAO,KAAKyH,GAAL,CAASa,QAAhB;AACD;;;wBAEwB;AACvB,aAAO,KAAKb,GAAL,CAASc,MAAhB;AACD;;;wBAE0B;AACzB,aAAO,KAAKd,GAAL,CAASe,QAAhB;AACD;;AAED;;;;;;;sBAIUvI,I,EAAe;AACvB,WAAKwH,GAAL,CAASvH,KAAT,GAAiBD,IAAjB;AACD;;AAED;;;;;wBAIqB;AACnB,aAAO,KAAKwH,GAAL,CAASvH,KAAhB;AACD;;;wBAE2B;AAC1B,aAAO,KAAKuH,GAAL,CAASgB,YAAhB;AACD;;;sBAEUC,M,EAAgB;AACzB,WAAKjB,GAAL,CAASiB,MAAT,GAAkBA,MAAlB;AACD,K;wBAEoB;AACnB,aAAO,KAAKjB,GAAL,CAASiB,MAAhB;AACD;;;sBAEWvJ,O,EAAiB;AAC3B,WAAKsI,GAAL,CAAStI,OAAT,GAAmBA,OAAnB;AACD,K;wBAEqB;AACpB,aAAO,KAAKsI,GAAL,CAAStI,OAAhB;AACD;;;sBAEYwJ,Q,EAAmB;AAC9B,WAAKlB,GAAL,CAASkB,QAAT,GAAoBA,QAApB;AACD,K;wBAEuB;AACtB,aAAO,KAAKlB,GAAL,CAASkB,QAAhB;AACD;;;sBAEQC,I,EAAe;AACtB,WAAKnB,GAAL,CAASmB,IAAT,GAAgBA,IAAhB;AACD,K;wBAEmB;AAClB,aAAO,KAAKnB,GAAL,CAASmB,IAAhB;AACD;;;sBAEYX,Q,EAAmB;AAC9B,WAAKR,GAAL,CAASQ,QAAT,GAAoBA,QAApB;AACD,K;wBAEuB;AACtB,aAAO,KAAKR,GAAL,CAASQ,QAAhB;AACD;;;sBAEgBY,Y,EAAsB;AACrC,WAAKpB,GAAL,CAASoB,YAAT,GAAwBA,YAAxB;AACD,K;wBAE0B;AACzB,aAAO,KAAKpB,GAAL,CAASoB,YAAhB;AACD;;;sBAEuBC,mB,EAA6B;AACnD,WAAKrB,GAAL,CAASqB,mBAAT,GAA+BA,mBAA/B;AACD,K;wBAEiC;AAChC,aAAO,KAAKrB,GAAL,CAASqB,mBAAhB;AACD;;;wBAEoB;AACnB,aAAO,KAAKrB,GAAL,CAASsB,KAAhB;AACD;;;wBAEwB;AACvB,aAAO,KAAKtB,GAAL,CAASjF,KAAhB;AACD;;;wBAE0B;AACzB,aAAO,KAAKiF,GAAL,CAASuB,YAAhB;AACD;;;wBAEwB;AACvB,aAAO,KAAKvB,GAAL,CAASwB,UAAhB;AACD;;;wBAEyB;AACxB,aAAO,KAAKxB,GAAL,CAASyB,WAAhB;AACD;;;wBAEwB;AACvB,aAAO,KAAKzB,GAAL,CAAS0B,UAAhB;AACD;;;kCAIoB;AACnB,UAAI;AACFhC,cAAMiC,QAAN,GAAiBzC,SAASC,aAAT,CAAuB,OAAvB,CAAjB;AACAO,cAAMiC,QAAN,CAAetJ,MAAf,GAAwB,GAAxB;AACD,OAHD,CAGE,OAAOuJ,CAAP,EAAU;AACV,eAAO,KAAP;AACD;;AAED,aAAO,CAAC,CAAClC,MAAMiC,QAAN,CAAepK,WAAxB;AACD;;;;;;AAGH;;;AAzSqBmI,K,CAKZmC,U,GAAqB,O;kBALTnC,K;;;;;;;;;;;;;QCWLoC,O,GAAAA,O;;AAlBhB;;;;AACA;;;;AACA;;IAAYC,W;;AACZ;;AACA;;;;AACA;;AACA;;;;;;;;AAEA;AACA,IAAIC,UAAUD,YAAYE,OAA1B;;;AAEA,iBAAcjM,SAAd,GAA0BkM,GAA1B,CAA8B,gBAAgBF,OAA9C,EAAuD,iCAAvD;AACA,iBAAchM,SAAd,GAA0BkM,GAA1B,CAA8B,+DAA9B,EAA+F,gBAA/F;;AAEA;;;;AAIO,SAASJ,OAAT,GAAsC;AAAA,MAArBrM,MAAqB,uEAAJ,EAAI;;AAC3C,SAAO,qBAAWA,MAAX,CAAP;AACD;;AAED;QACQuG,e;QAAiB7G,sB;;AAEzB;;QACQmI,c;QAAgBpB,U;;AAExB;;QACQ8F,O,GAAAA,O;kBACOF,O;;;;;;;;;;;;;;;AC9Bf;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;AAWA;;;;;;AATA;;;IAaqBK,Y;;AAqHnB;;;;;AAjFA;;;;;;;AAdA;;;;;;;AAdA;;;;;;AAiHA,wBAAYhG,MAAZ,EAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA,SAzE5BiG,YAyE4B,qDAxEzB,qBAAaC,IAwEY,gEAvEvB,iBAAa/H,UAuEU,EAvEG,YAAM;AAC/B,YAAKgI,YAAL,CAAkB,qBAAaC,OAA/B;AACA,YAAKC,cAAL;AACD,KAoEuB,uCAnEvB,iBAAa5I,IAmEU,EAnEH,YAAM;AACzB,YAAK0I,YAAL,CAAkB,qBAAaG,SAA/B;AACA,YAAKD,cAAL;AACD,KAgEuB,uDA9DzB,qBAAaD,OA8DY,sEA7DvB,iBAAahI,eA6DU,EA7DQ,YAAM;AACpC,UAAI,MAAKmI,OAAL,CAAajN,MAAb,CAAoBkN,QAAxB,EAAkC;AAChC,cAAKL,YAAL,CAAkB,qBAAaxI,OAA/B;AACD,OAFD,MAEO;AACL,cAAKwI,YAAL,CAAkB,qBAAaM,MAA/B;AACD;AACD,YAAKJ,cAAL;AACD,KAsDuB,0CArDvB,iBAAa7O,KAqDU,EArDF,YAAM;AAC1B,YAAK2O,YAAL,CAAkB,qBAAaD,IAA/B;AACA,YAAKG,cAAL;AACD,KAkDuB,0DAhDzB,qBAAaI,MAgDY,oEA/CvB,iBAAahJ,IA+CU,EA/CH,YAAM;AACzB,YAAK0I,YAAL,CAAkB,qBAAaxI,OAA/B;AACA,YAAK0I,cAAL;AACD,KA4CuB,yCA3CvB,iBAAa1I,OA2CU,EA3CA,YAAM;AAC5B,YAAKwI,YAAL,CAAkB,qBAAaxI,OAA/B;AACA,YAAK0I,cAAL;AACD,KAwCuB,yCAvCvB,iBAAarI,KAuCU,EAvCF,YAAM;AAC1B,YAAKmI,YAAL,CAAkB,qBAAaD,IAA/B;AACA,YAAKG,cAAL;AACD,KAoCuB,yDAlCzB,qBAAa1I,OAkCY,sEAjCvB,iBAAaD,KAiCU,EAjCF,YAAM;AAC1B,YAAKyI,YAAL,CAAkB,qBAAaM,MAA/B;AACA,YAAKJ,cAAL;AACD,KA8BuB,0CA7BvB,iBAAapI,OA6BU,EA7BA,YAAM;AAC5B,YAAKkI,YAAL,CAAkB,qBAAaG,SAA/B;AACA,YAAKD,cAAL;AACD,KA0BuB,0CAzBvB,iBAAarI,KAyBU,EAzBF,YAAM;AAC1B,YAAKmI,YAAL,CAAkB,qBAAaD,IAA/B;AACA,YAAKG,cAAL;AACD,KAsBuB,0CArBvB,iBAAa7O,KAqBU,EArBF,YAAM;AAC1B,YAAK2O,YAAL,CAAkB,qBAAaD,IAA/B;AACA,YAAKG,cAAL;AACD,KAkBuB,0DAhBzB,qBAAaC,SAgBY,sEAfvB,iBAAa3I,OAeU,EAfA,YAAM;AAC5B,YAAKwI,YAAL,CAAkB,qBAAaxI,OAA/B;AACA,YAAK0I,cAAL;AACD,KAYuB,0CAXvB,iBAAa3I,KAWU,EAXF,YAAM;AAC1B,YAAKyI,YAAL,CAAkB,qBAAaM,MAA/B;AACA,YAAKJ,cAAL;AACD,KAQuB;;AAC1B,SAAKE,OAAL,GAAevG,MAAf;AACA,SAAKX,OAAL,GAAe,iBAAcxF,SAAd,CAAwB,cAAxB,CAAf;AACA,SAAKI,aAAL,GAAqB,4BAArB;AACA,SAAKyM,QAAL,GAAgB,EAAhB;AACA,SAAKC,UAAL,GAAkB,IAAlB;AACA,SAAKC,SAAL,GAAiB,oBAAU,qBAAaV,IAAvB,CAAjB;AACA,SAAKW,gBAAL;AACD;;AAED;;;;;;AAxFA;;;;;;AAdA;;;;;;;AAdA;;;;;;;AAdA;;;;;;;;;;uCAuIyB;AACvB,WAAK5M,aAAL,CAAmBwB,MAAnB,CAA0B,KAAK8K,OAA/B,EAAwC,iBAAa/O,KAArD,EAA4D,KAAKsP,aAAL,CAAmB/F,IAAnB,CAAwB,IAAxB,CAA5D;AACA,WAAK9G,aAAL,CAAmBwB,MAAnB,CAA0B,KAAK8K,OAA/B,EAAwC,iBAAavI,KAArD,EAA4D,KAAK8I,aAAL,CAAmB/F,IAAnB,CAAwB,IAAxB,CAA5D;AACA,WAAK9G,aAAL,CAAmBwB,MAAnB,CAA0B,KAAK8K,OAA/B,EAAwC,iBAAa9I,IAArD,EAA2D,KAAKqJ,aAAL,CAAmB/F,IAAnB,CAAwB,IAAxB,CAA3D;AACA,WAAK9G,aAAL,CAAmBwB,MAAnB,CAA0B,KAAK8K,OAA/B,EAAwC,iBAAapI,UAArD,EAAiE,KAAK2I,aAAL,CAAmB/F,IAAnB,CAAwB,IAAxB,CAAjE;AACA,WAAK9G,aAAL,CAAmBwB,MAAnB,CAA0B,KAAK8K,OAA/B,EAAwC,iBAAa5I,OAArD,EAA8D,KAAKmJ,aAAL,CAAmB/F,IAAnB,CAAwB,IAAxB,CAA9D;AACA,WAAK9G,aAAL,CAAmBwB,MAAnB,CAA0B,KAAK8K,OAA/B,EAAwC,iBAAanI,eAArD,EAAsE,KAAK0I,aAAL,CAAmB/F,IAAnB,CAAwB,IAAxB,CAAtE;AACA,WAAK9G,aAAL,CAAmBwB,MAAnB,CAA0B,KAAK8K,OAA/B,EAAwC,iBAAa7I,KAArD,EAA4D,KAAKoJ,aAAL,CAAmB/F,IAAnB,CAAwB,IAAxB,CAA5D;AACA,WAAK9G,aAAL,CAAmBwB,MAAnB,CAA0B,KAAK8K,OAA/B,EAAwC,iBAAatI,OAArD,EAA8D,KAAK6I,aAAL,CAAmB/F,IAAnB,CAAwB,IAAxB,CAA9D;AACD;;AAED;;;;;;;;;kCAMcxG,K,EAAwB;AACpC,WAAK8E,OAAL,CAAaC,KAAb,CAAmB,uBAAnB,EAA4C/E,KAA5C;AACA,UAAIwM,aAAa,KAAKd,YAAL,CAAkB,KAAKW,SAAL,CAAe1O,IAAjC,CAAjB;AACA,UAAI,OAAO6O,WAAWxM,MAAMrC,IAAjB,CAAP,KAAkC,UAAtC,EAAkD;AAChD6O,mBAAWxM,MAAMrC,IAAjB;AACD;AACF;;AAED;;;;;;;;;iCAMaA,I,EAAoB;AAC/B,UAAI,KAAK0O,SAAL,CAAe1O,IAAf,KAAwBA,IAA5B,EAAkC;AAChC,aAAK0O,SAAL,CAAe9K,QAAf,GAA0BnD,KAAKD,GAAL,KAAa,IAAvC;AACA,aAAKgO,QAAL,CAAc3J,IAAd,CAAmB,KAAK6J,SAAxB;AACA,aAAKD,UAAL,GAAkB,KAAKC,SAAvB;AACA,aAAKA,SAAL,GAAiB,oBAAU1O,IAAV,CAAjB;AACA,aAAKmH,OAAL,CAAaC,KAAb,gCAAgD,KAAKqH,UAAL,CAAgBzO,IAAhE,YAA2E,KAAK0O,SAAL,CAAe1O,IAA1F;AACD;AACF;;AAED;;;;;;;;qCAKuB;AACrB,UAAIqC,QAAQ,wBAAc,iBAAamE,oBAA3B,EAAiD;AAC3D,oBAAY,KAAKiI,UAD0C;AAE3D,oBAAY,KAAKC;AAF0C,OAAjD,CAAZ;AAIA,WAAKL,OAAL,CAAa/L,aAAb,CAA2BD,KAA3B;AACD;;AAED;;;;;;;;8BAKgB;AACd,WAAKmM,QAAL,GAAgB,EAAhB;AACA,WAAKzM,aAAL,CAAmBa,OAAnB;AACD;;AAED;;;;;;;;wBAK0B;AACxB,aAAO,KAAK8L,SAAZ;AACD;;AAED;;;;;;;;wBAKkC;AAChC,aAAO,KAAKD,UAAZ;AACD;;AAED;;;;;;;;wBAK4B;AAC1B,aAAO,KAAKD,QAAZ;AACD;;;;;;kBAjOkBV,Y;;;;;;;;;;;;ACfrB,IAAMgB,qBAAkD;AACtDd,QAAM,MADgD;AAEtDE,WAAS,SAF6C;AAGtDzI,WAAS,SAH6C;AAItD8I,UAAQ,QAJ8C;AAKtDH,aAAW;AAL2C,CAAxD;;kBAQeU,kB;;;;;;;;;;;;;;;;;ACbf;;;;IAIqBC,K;;AAwBnB;;;;;AAfA;;;;;;AAmBA,iBAAY/O,IAAZ,EAA0B;AAAA;;AACxB,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKgP,SAAL,GAAiB,CAAjB;AACA,SAAKC,UAAL,GAAkBxO,KAAKD,GAAL,KAAa,IAA/B;AACD;;AAED;;;;;AAlBA;;;;;;;AAfA;;;;;;;;;;;wBAqCuB;AACrB,aAAO,KAAKwO,SAAZ;AACD;;AAED;;;;;sBAIaE,O,EAAuB;AAClC,WAAKF,SAAL,GAAiBE,UAAU,KAAKD,UAAhC;AACD;;;;;;kBAhDkBF,K;;;;;;;ACLrB;;AAEA;;;;;;;;;;;AAOA,SAASI,SAAT,CAAmBC,MAAnB,EAA2C;AACzC,MAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,WAAOA,MAAP;AACD;AACD,SAAOA,OAAOC,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCF,OAAOrF,KAAP,CAAa,CAAb,CAAxC;AACD;;AAED;;;;;AAKA,SAASwF,QAAT,CAAkBH,MAAlB,EAAkCI,YAAlC,EAAiE;AAC/D,MAAI,OAAOJ,MAAP,KAAkB,QAAlB,IAA8B,OAAOI,YAAP,KAAwB,QAA1D,EAAoE;AAClE,WAAO,KAAP;AACD;AACD,SAAOJ,OAAO9H,OAAP,CAAekI,YAAf,EAA6BJ,OAAOnM,MAAP,GAAgBuM,aAAavM,MAA1D,KAAqE,CAAC,CAA7E;AACD;;QAEOkM,S,GAAAA,S;QAAWI,Q,GAAAA,Q;;;;;;AC7BnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;;AAEf;AACA;;AAEA;AACA;;AAEA,8CAA8C;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C;AAC5C;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oDAAoD;AACpD;AACA;AACA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;;AAEA;AACA,0CAA0C,0BAA0B;;AAEpE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mEAAmE,aAAa;AAChF;;AAEA;AACA,sDAAsD;AACtD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC","file":"playkit.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Playkit\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Playkit\"] = factory();\n\telse\n\t\troot[\"Playkit\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e139b73322420d2dbedb","//@flow\nimport * as JsLogger from 'js-logger';\n\nconst LOG_LEVEL: { [level: string]: Object } = {\n  \"DEBUG\": JsLogger.DEBUG,\n  \"INFO\": JsLogger.INFO,\n  \"TIME\": JsLogger.TIME,\n  \"WARN\": JsLogger.WARN,\n  \"ERROR\": JsLogger.ERROR,\n  \"OFF\": JsLogger.OFF\n};\n\nclass LoggerFactory {\n  constructor(options?: Object) {\n    JsLogger.useDefaults(options || {});\n  }\n\n  getLogger(name?: string) {\n    if (!name) {\n      return JsLogger;\n    }\n    return JsLogger.get(name);\n  }\n}\n\nconst lf = new LoggerFactory({defaultLevel: JsLogger.DEBUG});\n\nexport default lf;\nexport {LOG_LEVEL};\n\n\n\n// WEBPACK FOOTER //\n// ./utils/logger.js","//@flow\n/**\n * Create an Event work-alike object based on the dictionary.\n * The event should contain all of the same properties from the dict.\n * @param {string} type -\n * @param {Object=} opt_dict -\n * @constructor\n * @extends {Event}\n */\nclass FakeEvent {\n  /** @const {boolean} */\n  bubbles: boolean;\n\n  /** @const {boolean} */\n  cancelable: boolean;\n\n  /** @const {boolean} */\n  defaultPrevented: boolean;\n\n  /**\n   * According to MDN, Chrome uses high-res timers instead of epoch time.\n   * Follow suit so that timeStamps on FakeEvents use the same base as\n   * on native Events.\n   * @const {number}\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Event/timeStamp\n   */\n  timeStamp: number | Date;\n\n  /** @const {string} */\n  type: string;\n\n  /** @const {boolean} */\n  isTrusted: boolean;\n\n  /** @type {EventTarget} */\n  currentTarget: any;\n\n  /** @type {EventTarget} */\n  target: any;\n\n  /**\n   * Non-standard property read by FakeEventTarget to stop processing listeners.\n   * @type {boolean}\n   */\n  stopped: boolean;\n\n  payload: any;\n\n  constructor(type: string, payload: any) {\n    // These Properties below cannot be set by dict.  They are all provided for\n    // compatibility with native events.\n\n    /** @const {boolean} */\n    this.bubbles = false;\n\n    /** @const {boolean} */\n    this.cancelable = false;\n\n    /** @const {boolean} */\n    this.defaultPrevented = false;\n\n    /**\n     * According to MDN, Chrome uses high-res timers instead of epoch time.\n     * Follow suit so that timeStamps on FakeEvents use the same base as\n     * on native Events.\n     * @const {number}\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Event/timeStamp\n     */\n    this.timeStamp = window.performance ? window.performance.now() : Date.now();\n\n    /** @const {string} */\n    this.type = type;\n\n    /** @const {boolean} */\n    this.isTrusted = false;\n\n    /** @type {EventTarget} */\n    this.currentTarget = null;\n\n    /** @type {EventTarget} */\n    this.target = null;\n\n\n    /**\n     * Non-standard property read by FakeEventTarget to stop processing listeners.\n     * @type {boolean}\n     */\n    this.stopped = false;\n\n    this.payload = payload;\n  }\n\n  /**\n   * Does nothing, since FakeEvents have no default.  Provided for compatibility\n   * with native Events.\n   * @override\n   */\n  preventDefault() {\n  }\n\n  /**\n   * Stops processing event listeners for this event.  Provided for compatibility\n   * with native Events.\n   * @override\n   */\n  stopImmediatePropagation() {\n    this.stopped = true;\n  }\n\n  /**\n   * Does nothing, since FakeEvents do not bubble.  Provided for compatibility\n   * with native Events.\n   * @override\n   */\n  stopPropagation() {\n  }\n}\n\nexport default FakeEvent;\n\n\n\n// WEBPACK FOOTER //\n// ./event/fake-event.js","//@flow\nimport PlayerError from \"../../utils/player-error\"\n\n/**\n * Base of media source adapters\n * @classdesc\n */\nexport default class BaseMediaSourceAdapter {\n  /**\n   * The supported mime types by the media source adapter\n   * @member {Array} _mimeTypes\n   * @static\n   * @private\n   */\n  static _mimeTypes: Array<string>;\n\n  /**\n   * The name of the media source adapter\n   * @member {string} _name\n   * @static\n   * @private\n   */\n  static _name: string;\n\n  /**\n   * The adapter config\n   * @member {Object} _config\n   * @private\n   */\n  _config: Object;\n\n  /**\n   * The owning engine\n   * @member {IEngine} _engine\n   * @private\n   */\n  _engine: IEngine;\n\n  /**\n   * The player wrapper of the media source adapter\n   * @member {any} _msPlayer\n   * @private\n   */\n  _msPlayer: any;\n\n  /**\n   * The source URL\n   * @member {string} _source\n   * @private\n   */\n  _source: string;\n\n  /**\n   * Checks if the media source adapter is supported\n   * @function isSupported\n   * @returns {boolean} - Whether the media source adapter is supported. Default implementation is true\n   * @static\n   */\n  static isSupported(): boolean {\n    return true;\n  }\n\n  /**\n   * Checks if the media source adapter can play a given mime type\n   * @function canPlayType\n   * @param {string} mimeType - The mime type to check\n   * @returns {boolean} - Whether the media source adapter can play the specific mime type. Default implementation is to check if the mime type include in the media source mime types array\n   * @static\n   */\n  static canPlayType(mimeType: string): boolean {\n    return !!(this._mimeTypes && this._mimeTypes.includes(mimeType));\n  }\n\n  /**\n   * Factory method to create media source adapter\n   * @function createAdapter\n   * @param {IEngine} engine - The video engine that the media source adapter work with\n   * @param {Object} source - The source Object\n   * @param {Object} config - The media source adapter configuration\n   * @returns {BaseMediaSourceAdapter} - New instance of the run time media source adapter\n   * @static\n   */\n  static createAdapter(engine: IEngine, source: Object, config: Object): BaseMediaSourceAdapter {\n    return new this(engine, source, config);\n  }\n\n  /**\n   * @constructor\n   * @param {IEngine} engine - The video engine that the media source adapter work with\n   * @param {Object} source - The source object\n   * @param {Object} config - The media source adapter configuration\n   */\n  constructor(engine: IEngine, source: Object, config: Object) {\n    this._engine = engine;\n    this._config = config;\n  }\n\n  /**\n   * Load the video source\n   * @function load\n   * @abstract\n   * @returns {void}\n   */\n  load(): void {\n    throw new PlayerError(PlayerError.TYPE.NOT_IMPLEMENTED_METHOD, 'load').getError();\n  }\n\n  /**\n   * Destroying the _msPlayer\n   * @function destroy\n   * @returns {void}\n   */\n  destroy() {\n    // should do nothing. implemented by the inheritor if necessary.\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./engines/adapters/base-adapter.js","//@flow\nimport EventManager from './event/event-manager'\nimport FakeEventTarget from './event/fake-event-target'\nimport FakeEvent from './event/fake-event'\nimport PlayerEvents from './event/events'\nimport {isNumber, isFloat} from './utils/util'\nimport {capitlize} from './utils/string-util'\nimport LoggerFactory from './utils/logger'\nimport Html5 from './engines/html5'\nimport PluginManager from './plugin/plugin-manager'\nimport StateManager from './state/state-manager'\n\nlet logger = LoggerFactory.getLogger('Player');\ntype ListenerType = (event: FakeEvent) => any;\n\nclass Player extends FakeEventTarget {\n  _pluginManager: PluginManager;\n  _eventManager: EventManager;\n  _config: any;\n  _engine: IEngine;\n  _engineEventHandlers: Map<string, ListenerType>;\n  _stateManager: StateManager;\n\n  constructor(config: Object) {\n    super();\n    this._stateManager = new StateManager(this);\n    this._pluginManager = new PluginManager();\n    this._eventManager = new EventManager();\n    this._engineEventHandlers = new Map();\n    for (let playerEvent in PlayerEvents) {\n      if (PlayerEvents.hasOwnProperty(playerEvent)) {\n        this._engineEventHandlers.set(`onEngine${capitlize(PlayerEvents[playerEvent])}_`, (event) => {\n          return this.dispatchEvent(event);\n        });\n      }\n    }\n    this._config = config || Player.defaultConfig_();\n    this.loadPlugins(this._config);\n    this.selectEngine(this._config);\n    this.attachMedia();\n    logger.info('player is ready!');\n  }\n\n  destroy() {\n    this._engine.destroy();\n    this._eventManager.destroy();\n    this._pluginManager.destroy();\n    this._stateManager.destroy();\n    // this.engine_ = null;\n    // this.eventManager_ = null;\n    this._config = null;\n  }\n\n  static defaultConfig_() {\n    return {};\n  }\n\n  loadPlugins(config: Object): void {\n    let plugins = config.plugins;\n    for (let name in plugins) {\n      if (plugins.hasOwnProperty(name)) {\n        this._pluginManager.load(name, this, plugins[name]);\n      }\n    }\n  }\n\n  selectEngine(config: Object) {\n    if (config && config.sources) {\n      let sources = config.sources;\n      for (let i = 0; i < sources.length; i++) {\n        if (Html5.canPlayType(sources[i].mimetype)) {\n          this.loadEngine(sources[i], config);\n          break;\n        }\n      }\n    }\n  }\n\n  loadEngine(source: Object, config: Object) {\n    this._engine = new Html5(source, config);\n    if (config.preload === \"auto\") {\n      this.load();\n    }\n  }\n\n  attachMedia() {\n    // Listen to all HTML5-defined events and trigger them on the player\n    for (let playerEvent in PlayerEvents) {\n      if (PlayerEvents.hasOwnProperty(playerEvent)) {\n        const handler = this._engineEventHandlers.get(`onEngine${capitlize(PlayerEvents[playerEvent])}_`);\n        if (handler) {\n          this._eventManager.listen(this._engine, PlayerEvents[playerEvent], handler);\n        }\n      }\n    }\n  }\n\n  /**\n   * Get the player config\n   * @returns {Object} - The player configuration\n   */\n  get config(): Object {\n    return this._config;\n  }\n\n  //  <editor-fold desc=\"Playback Interface\">\n  /**\n   * Start/resume playback\n   * @returns {void}\n   */\n  play(): void {\n    return this._engine.play();\n  }\n\n  /**\n   * Pause playback\n   * @returns {void}\n   */\n  pause(): void {\n    return this._engine.pause();\n  }\n\n  /**\n   * Load media\n   * @returns {void}\n   */\n  load(): void {\n    this._engine.load();\n  }\n\n  /**\n   * Set the current time in seconds\n   * @param {Number} to - The number to set in seconds\n   */\n  set currentTime(to: number) {\n    if (isNumber(to)) {\n      let boundedTo = to;\n      if (to < 0) {\n        boundedTo = 0;\n      }\n      if (boundedTo > this._engine.duration) {\n        boundedTo = this._engine.duration;\n      }\n      this._engine.currentTime = boundedTo;\n    }\n  }\n\n  /**\n   * Get the current time in seconds\n   * @returns {Number} - The playback current time\n   */\n  get currentTime(): number {\n    return this._engine.currentTime;\n  }\n\n  /**\n   * /**\n   * Get the duration in seconds\n   * @returns {Number} - The playback duration\n   */\n  get duration(): number {\n    return this._engine.duration;\n  }\n\n  /**\n   * Set playback volume\n   * @param {Number} vol - The volume to set\n   */\n  set volume(vol: number) {\n    if (isFloat(vol)) {\n      let boundedVol = vol;\n      if (boundedVol < 0) {\n        boundedVol = 0;\n      }\n      if (boundedVol > 1) {\n        boundedVol = 1;\n      }\n      this._engine.volume = boundedVol;\n    }\n  }\n\n  /**\n   * Get playback volume\n   * @returns {Number} - The playback volume\n   */\n  get volume(): number {\n    return this._engine.volume;\n  }\n\n  // </editor-fold>\n\n  // <editor-fold desc=\"State\">\n  ready() {\n  }\n\n  /**\n   * Get paused state\n   * @returns {boolean} - Whether the video is paused or not\n   */\n  get paused(): boolean {\n    return this._engine.paused;\n  }\n\n  /**\n   * Get seeking state\n   * @returns {boolean} - Whether the video is seeking or not\n   */\n  get seeking(): boolean {\n    return this._engine.seeking;\n  }\n\n  buffered() {\n  }\n\n  /**\n   * Set player muted state\n   * @param {boolean} mute - The mute value\n   */\n  set muted(mute: boolean) {\n    this._engine.muted = mute;\n  }\n\n  /**\n   * Get player muted state\n   * @returns {boolean} - Whether the video is muted or not\n   */\n  get muted(): boolean {\n    return this._engine.muted;\n  }\n\n// </editor-fold>\n}\n\nexport default Player;\n\n\n\n// WEBPACK FOOTER //\n// ./player.js","//@flow\nimport MultiMap from '../utils/multi-map'\nimport FakeEvent from './fake-event'\n\n/**\n * Creates a new EventManager. An EventManager maintains a collection of \"event\n * bindings\" between event targets and event listeners.\n *\n * @struct\n * @constructor\n * @implements {IDestroyable}\n */\nclass EventManager {\n  _bindingMap: MultiMap<Binding_> | null;\n\n  constructor() {\n    /**\n     * Maps an event type to an array of event bindings.\n     * @private {MultiMap.<!EventManager.Binding_>}\n     */\n    this._bindingMap = new MultiMap();\n  }\n\n  /**\n   * Detaches all event listeners.\n   * @override\n   */\n  destroy() {\n    this.removeAll();\n    this._bindingMap = null;\n    return Promise.resolve();\n  }\n\n\n  /**\n   * Attaches an event listener to an event target.\n   * @param {EventTarget} target The event target.\n   * @param {string} type The event type.\n   * @param {EventManager.ListenerType} listener The event listener.\n   * @returns {void}\n   */\n  listen(target: any, type: string, listener: ListenerType): void {\n    let binding = new Binding_(target, type, listener);\n    if (this._bindingMap) {\n      this._bindingMap.push(type, binding);\n    }\n  }\n\n\n  /**\n   * Detaches an event listener from an event target.\n   * @param {EventTarget} target The event target.\n   * @param {string} type The event type.\n   * @returns {void}\n   */\n  unlisten(target: any, type: string): void {\n    if (this._bindingMap) {\n      let list = this._bindingMap.get(type);\n\n      for (let i = 0; i < list.length; ++i) {\n        let binding = list[i];\n\n        if (binding.target == target) {\n          binding.unlisten();\n          if (this._bindingMap) {\n            this._bindingMap.remove(type, binding);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Detaches all event listeners from all targets.\n   * @returns {void}\n   */\n  removeAll(): void {\n    if (this._bindingMap) {\n      let listeners = this._bindingMap.getAll();\n\n      for (let listener of listeners) {\n        listener.unlisten();\n      }\n      if (this._bindingMap) {\n        this._bindingMap.clear();\n      }\n    }\n  }\n}\n\n/**\n * @typedef {function(!Event)}\n */\ntype ListenerType = (event: FakeEvent) => any;\n\n/**\n * Creates a new Binding_ and attaches the event listener to the event target.\n * @param {EventTarget} target The event target.\n * @param {string} type The event type.\n * @param {EventManager.ListenerType} listener The event listener.\n * @constructor\n * @private\n */\nclass Binding_ {\n  target: any;\n  type: string;\n  listener: ?ListenerType;\n\n  constructor(target, type, listener) {\n    /** @type {EventTarget} */\n    this.target = target;\n\n    /** @type {string} */\n    this.type = type;\n\n    /** @type {?EventManager.ListenerType} */\n    this.listener = listener;\n\n    this.target.addEventListener(type, listener, false);\n  }\n\n\n  /**\n   * Detaches the event listener from the event target. This does nothing if the\n   * event listener is already detached.\n   * @returns {void}\n   */\n  unlisten(): void {\n    if (!this.target)\n      return;\n\n    this.target.removeEventListener(this.type, this.listener, false);\n\n    this.target = null;\n    this.listener = null;\n  }\n}\n\nexport default EventManager;\n\n\n\n// WEBPACK FOOTER //\n// ./event/event-manager.js","//@flow\nconst PLAYER_EVENTS = {\n  PLAY: 'play',\n  PAUSE: 'pause',\n  /**\n   * Fired when the media begins to play (either for the first time, after having been paused, or after ending and then restarting)\n   */\n  PLAYING: 'playing',\n  /**\n   * Fired while the user agent is downloading media data\n   */\n  PROGRESS: 'progress',\n  /**\n   * Fires when the loading of an audio/video is aborted\n   */\n  ABORT: 'abort',\n  /**\n   * Fires when an error occurs.  The element's error attribute contains more information\n   */\n  ERROR: 'error',\n  /**\n   * Fires when the browser is intentionally not getting media data\n   */\n  SUSPEND: 'suspend',\n  /**\n   * Fires when the current playlist is empty\n   */\n  EMPTIED: 'emptied',\n  /**\n   * Fires when playback completes\n   */\n  ENDED: 'ended',\n  /**\n   * Fires when the requested operation (such as playback) is delayed pending the completion of another operation (such as a seek)\n   */\n  WAITING: 'waiting',\n  /**\n   * Fires when the browser is trying to get media data, but data is not available\n   */\n  STALLED: 'stalled',\n  /**\n   * Fires when the video is starting to load\n   */\n  LOAD_START: 'loadstart',\n  /**\n   * Fires when the browser has loaded meta data for the audio/video\n   */\n  LOADED_METADATA: 'loadedmetadata',\n  /**\n   * Fires when the browser has loaded the current frame of the audio/video\n   */\n  LOADED_DATA: 'loadeddata',\n  /**\n   * Fires when the current playback position has changed\n   */\n  TIME_UPDATE: 'timeupdate',\n  /**\n   * Fires when the playing speed of the audio/video is changed\n   */\n  RATE_CHANGE: 'ratechange',\n  /**\n   * Fires when the volume has been changed\n   */\n  VOLUME_CHANGE: 'volumechange',\n  /**\n   * Fires when the text track has been changed\n   */\n  TEXT_TRACK_CHANGE: 'texttrackchange',\n  /**\n   * Fires when the player state has been changed\n   */\n  PLAYER_STATE_CHANGED: 'playerStateChanged'\n};\n\nexport default PLAYER_EVENTS;\n\n\n\n\n// WEBPACK FOOTER //\n// ./event/events.js","//@flow\nexport default class PlayerError {\n  static TYPE: {[name: string]: Object} = {\n    NOT_REGISTERED_PLUGIN: {\n      name: \"PluginNotRegisteredException\",\n      message: function (name) {\n        return `Cannot load ${name} plugin. Name not found in the registry`;\n      }\n    },\n    NOT_VALID_HANDLER: {\n      name: \"PluginHandlerIsNotValidException\",\n      message: function () {\n        return \"To activate plugin you must provide a class derived from BasePlugin\";\n      }\n    },\n    NOT_IMPLEMENTED_METHOD: {\n      name: \"NotImplementedException\",\n      message: function (method) {\n        return `${method} method not implemented`;\n      }\n    }\n  };\n\n  name: string;\n  message: string;\n\n  constructor(error: Object, param?: any) {\n    this.name = error.name;\n    this.message = error.message(param);\n  }\n\n  getError() {\n    return {\n      name: this.name,\n      message: this.message\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./utils/player-error.js","//@flow\nimport BaseMediaSourceAdapter from './base-adapter'\nimport NativeAdapter from './native-adapter'\nimport LoggerFactory from '../../utils/logger'\n\n/**\n * Media source adapter manager\n * @classdesc\n */\nexport default class MediaSourceAdapterManager {\n  /**\n   * The logger of the media source manager\n   * @member {any} _logger\n   * @static\n   * @private\n   */\n  static _logger: any = LoggerFactory.getLogger('MediaSourceAdapterManager');\n  /**\n   * The media source adapter registry\n   * @member {Array<BaseMediaSourceAdapter>} _mediaSourceAdapters\n   * @static\n   * @private\n   */\n  static _mediaSourceAdapters: Array<typeof BaseMediaSourceAdapter> = [NativeAdapter];\n\n  /**\n   * Add a media source adapter to the registry\n   * @function register\n   * @param {BaseMediaSourceAdapter} adapter - The media source adapter to register\n   * @static\n   * @returns {void}\n   */\n  static register(adapter: typeof BaseMediaSourceAdapter): void {\n    if (adapter && !MediaSourceAdapterManager._mediaSourceAdapters.includes(adapter)) {\n      MediaSourceAdapterManager._logger.debug(`Adapter <${adapter.name}> has been registered successfully.`);\n      MediaSourceAdapterManager._mediaSourceAdapters.push(adapter);\n    }\n  }\n\n  /**\n   * Remove a media source adapter from the registry\n   * @function unRegister\n   * @param {BaseMediaSourceAdapter} adapter - The media source adapter to unRegister\n   * @static\n   * @returns {void}\n   */\n  static unRegister(adapter: typeof BaseMediaSourceAdapter): void {\n    let index = MediaSourceAdapterManager._mediaSourceAdapters.indexOf(adapter);\n    if (index > -1) {\n      MediaSourceAdapterManager._logger.debug(`Unregistered <${adapter.name}> adapter.`);\n      MediaSourceAdapterManager._mediaSourceAdapters.splice(index, 1);\n    }\n  }\n\n  /**\n   * Checks if one of the registered media source adapters can play a given mime type\n   * @function canPlayType\n   * @param {string} mimeType - The mime type to check\n   * @static\n   * @returns {boolean} - If one of the adapters can play the specific mime type\n   */\n  static canPlayType(mimeType: string): boolean {\n    let adapters = MediaSourceAdapterManager._mediaSourceAdapters;\n    for (let i = 0; i < adapters.length; i++) {\n      MediaSourceAdapterManager._logger.debug(`Checking canPlayType for <${adapters[i].name}> adapter.`);\n      if (adapters[i].canPlayType(mimeType)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the appropriate media source adapter to the video source\n   * @function getMediaSourceAdapter\n   * @param {IEngine} engine - The video engine which requires adapter for a given mimeType\n   * @param {Object} source - The video source\n   * @param {Object} config - The player configuration\n   * @returns {BaseMediaSourceAdapter|null} - The selected media source adapter, or null if such doesn't exists\n   * @static\n   */\n  static getMediaSourceAdapter(engine: IEngine, source: Object, config: Object): ?BaseMediaSourceAdapter {\n    if (engine && source && config) {\n      let adapters = MediaSourceAdapterManager._mediaSourceAdapters;\n      for (let i = 0; i < adapters.length; i++) {\n        MediaSourceAdapterManager._logger.debug(`Checking canPlayType for <${adapters[i].name}> adapter.`);\n        if (adapters[i].canPlayType(source.mimetype)) {\n          MediaSourceAdapterManager._logger.debug(`Creating <${adapters[i].name}> adapter.`);\n          return adapters[i].createAdapter(engine, source, config.engines);\n        }\n      }\n    }\n    return null;\n  }\n}\n\nconst registerAdapter = MediaSourceAdapterManager.register;\nexport {registerAdapter};\n\n\n\n\n// WEBPACK FOOTER //\n// ./engines/adapters/adapter-manager.js","//@flow\nimport Player from '../player'\nimport LoggerFactory from '../utils/logger'\nimport {merge} from '../utils/util'\nimport EventManager from '../event/event-manager'\nimport PlayerError from '../utils/player-error'\n\n/** The BasePlugin responsible to implement the plugin interface.\n * Contains several default implementations.\n * Other plugins should extend this class.\n * @classdesc\n */\nexport default class BasePlugin implements IPlugin {\n  /**\n   * The runtime configuration of the plugin.\n   * @member\n   */\n  config: Object;\n  /**\n   * The name of the plugin.\n   * @member\n   */\n  name: string;\n  /**\n   * The logger of the plugin.\n   * @member\n   */\n  logger: any;\n  /**\n   * Reference to the actual player.\n   * @member\n   */\n  player: Player;\n  /**\n   * The event manager of the plugin.\n   * @member\n   */\n  eventManager: EventManager;\n  /**\n   * The default configuration of the plugin.\n   * Inherited plugins should override this property.\n   * @type {Object}\n   * @static\n   * @member\n   */\n  static defaultConfig: Object = {};\n\n  /**\n   * Factory method to create the actual plugin.\n   * @param {string} name - The plugin name\n   * @param {Player} player - The player reference\n   * @param {Object} config - The plugin configuration\n   * @returns {BasePlugin} - New runtime plugin instance\n   * @static\n   * @public\n   */\n  static createPlugin(name: string, player: Player, config: Object = {}): BasePlugin {\n    return new this(name, player, config);\n  }\n\n  /**\n   * Returns under what conditions the plugin is valid.\n   * Plugin must implement this method.\n   * @returns {boolean} - Whether the plugin is valid and can be initiated. Default implementation is true\n   * @static\n   * @public\n   * @abstract\n   */\n  static isValid(): boolean {\n    throw new PlayerError(PlayerError.TYPE.NOT_IMPLEMENTED_METHOD, 'isValid()').getError();\n  }\n\n  /**\n   * constructor\n   * @param {string} name - The plugin name\n   * @param {Player} player - The player reference\n   * @param {Object} config - The plugin configuration\n   * @constructor\n   * @private\n   */\n  constructor(name: string, player: Player, config: Object) {\n    this.name = name;\n    this.player = player;\n    this.eventManager = new EventManager();\n    this.logger = LoggerFactory.getLogger(this.name);\n    this.config = merge(this.constructor.defaultConfig, config);\n  }\n\n  /**\n   * Getter for the configuration of the plugin.\n   * @param {string} attr - The key in the plugin configuration (optional).\n   * @returns {*} - If attribute is provided, returns its value. Else, Returns the config of the plugin.\n   * @public\n   */\n  getConfig(attr?: string): any {\n    if (attr) {\n      return this.config[attr];\n    }\n    return this.config;\n  }\n\n  /**\n   * Updates the config of the plugin.\n   * @param {Object} update - The updated configuration.\n   * @public\n   * @returns {void}\n   */\n  updateConfig(update: Object): void {\n    this.config = merge(this.config, update);\n  }\n\n  /**\n   * Runs the destroy logic of the plugin.\n   * plugin must implement this method.\n   * @public\n   * @abstract\n   * @returns {void}\n   */\n  destroy(): void {\n    throw new PlayerError(PlayerError.TYPE.NOT_IMPLEMENTED_METHOD, 'destroy()').getError();\n  }\n\n  /**\n   * Getter for the plugin's name.\n   * @returns {string} - The name of the plugin.\n   * @public\n   */\n  getName(): string {\n    return this.name;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./plugin/base-plugin.js","//@flow\nimport BasePlugin from './base-plugin'\nimport PlayerError from '../utils/player-error'\nimport Player from '../player'\nimport LoggerFactory from '../utils/logger'\n\n/**\n * The logger of the PluginManager class.\n * @private\n * @const\n */\nconst logger = LoggerFactory.getLogger(\"PluginManager\");\n\n/** The PluginManager responsible for register plugins definitions and store plugins instances.\n * @classdesc\n */\nexport default class PluginManager {\n  /**\n   * The registry of the plugins.\n   * Maps plugin's name to his class.\n   * @type {Map}\n   * @static\n   * @private\n   */\n  static _registry: Map<string, Function> = new Map();\n  /**\n   * The active plugins in the player.\n   * Maps plugin's name to his instance.\n   * @type {Map}\n   * @private\n   */\n  _plugins: Map<string, BasePlugin> = new Map();\n\n  /**\n   * Writes the plugin in the registry.\n   * Maps: plugin name -> plugin class.\n   * @param {string} name - The plugin name\n   * @param {Function} handler - The plugin class\n   * @returns {boolean} - If the registration request succeeded\n   * @static\n   * @public\n   */\n  static register(name: string, handler: Function): boolean {\n    if (typeof handler !== 'function' || handler.prototype instanceof BasePlugin === false) {\n      throw new PlayerError(PlayerError.TYPE.NOT_VALID_HANDLER).getError();\n    }\n    if (!PluginManager._registry.has(name)) {\n      PluginManager._registry.set(name, handler);\n      logger.debug(`Plugin <${name}> has been registered successfully.`);\n      return true;\n    }\n    logger.debug(`Plugin <${name}> is already registered, do not register again.`);\n    return false;\n  }\n\n  /**\n   * Removes the plugin from the registry.\n   * @param {string} name - The plugin name\n   * @static\n   * @public\n   * @returns {void}\n   */\n  static unRegister(name: string): void {\n    if (PluginManager._registry.has(name)) {\n      PluginManager._registry.delete(name);\n      logger.debug(`Unregistered <${name}> plugin.`);\n    }\n  }\n\n  /**\n   * Creates and store new instance of the plugin in case isValid() of the plugin returns true.\n   * @param {string} name - The plugin name\n   * @param {Player} player - The player reference\n   * @param {Object} [config={}] - The plugin configuration\n   * @returns {boolean} - Whether the plugin load was successful\n   * @public\n   */\n  load(name: string, player: Player, config: Object = {}): boolean {\n    if (!PluginManager._registry.has(name)) {\n      throw new PlayerError(PlayerError.TYPE.NOT_REGISTERED_PLUGIN, name).getError();\n    }\n    let pluginClass = PluginManager._registry.get(name);\n    if (pluginClass != null && pluginClass.isValid()) {\n      this._plugins.set(name, pluginClass.createPlugin(name, player, config));\n      logger.debug(`Plugin <${name}> has been loaded.`);\n      return true;\n    }\n    logger.debug(`Plugin <${name}> isn\\'t loaded, isValid()=false.`);\n    return false;\n  }\n\n  /**\n   * Iterates over all the plugins and calls private _destroy.\n   * @public\n   * @returns {void}\n   */\n  destroy(): void {\n    this._plugins.forEach(this._destroy.bind(this));\n  }\n\n  /**\n   * Calls destroy() method of the plugin's impl.\n   * @param {BasePlugin} plugin - The plugin instance\n   * @param {string} name - The plugin name\n   * @private\n   * @returns {void}\n   */\n  _destroy(plugin: BasePlugin, name: string): void {\n    plugin.destroy();\n    this._plugins.delete(name);\n  }\n\n  /**\n   * Returns the plugin's instance.\n   * @param {string} name - The plugin name\n   * @returns {BasePlugin} - The plugin instance\n   * @public\n   */\n  get(name: string): ?BasePlugin {\n    return this._plugins.get(name);\n  }\n}\n\n/**\n * Export the register method.\n * @type {function}\n * @constant\n */\nconst registerPlugin = PluginManager.register;\nexport {registerPlugin};\n\n\n\n// WEBPACK FOOTER //\n// ./plugin/plugin-manager.js","//@flow\nimport FakeEvent from './fake-event'\nimport MultiMap from '../utils/multi-map'\n\n/**\n * A work-alike for EventTarget.  Only DOM elements may be true EventTargets,\n * but this can be used as a base class to provide event dispatch to non-DOM\n * classes.  Only FakeEvents should be dispatched.\n *\n * @struct\n * @constructor\n * @implements {EventTarget}\n * @export\n */\nclass FakeEventTarget {\n  _listeners: MultiMap<ListenerType>;\n  dispatchTarget: FakeEventTarget;\n\n  constructor() {\n    /**\n     * @private {!MultiMap.<FakeEventTarget.ListenerType>}\n     */\n    this._listeners = new MultiMap();\n\n    /**\n     * The target of all dispatched events.  Defaults to |this|.\n     * @type {EventTarget}\n     */\n    this.dispatchTarget = this;\n  }\n\n  /**\n   * Add an event listener to this object.\n   *\n   * @param {string} type The event type to listen for.\n   * @param {FakeEventTarget.ListenerType} listener The callback or\n   *   listener object to invoke.\n   * @param {boolean=} opt_capturing Ignored.  FakeEventTargets do not have\n   *   parents, so events neither capture nor bubble.\n   * @override\n   * @export\n   */\n  addEventListener(type: string, listener: ListenerType) {\n    this._listeners.push(type, listener);\n  }\n\n  /**\n   * Remove an event listener from this object.\n   *\n   * @param {string} type The event type for which you wish to remove a listener.\n   * @param {FakeEventTarget.ListenerType} listener The callback or\n   *   listener object to remove.\n   * @param {boolean=} opt_capturing Ignored.  FakeEventTargets do not have\n   *   parents, so events neither capture nor bubble.\n   * @override\n   * @export\n   */\n  removeEventListener(type: string, listener: ListenerType) {\n    this._listeners.remove(type, listener);\n  }\n\n  /**\n   * Dispatch an event from this object.\n   *\n   * @param {!Event} event The event to be dispatched from this object.\n   * @return {boolean} True if the default action was prevented.\n   * @override\n   * @export\n   */\n  dispatchEvent(event: FakeEvent) {\n    // In many browsers, it is complex to overwrite properties of actual Events.\n    // Here we expect only to dispatch FakeEvents, which are simpler.\n    //goog.asserts.assert(event instanceof FakeEvent,\n    //    'FakeEventTarget can only dispatch FakeEvents!');\n\n    let list = this._listeners.get(event.type) || [];\n\n    for (let i = 0; i < list.length; ++i) {\n      // Do this every time, since events can be re-dispatched from handlers.\n      event.target = this.dispatchTarget;\n      event.currentTarget = this.dispatchTarget;\n\n      let listener = list[i];\n      try {\n        if (listener.handleEvent) {\n          listener.handleEvent(event);\n        } else {\n          listener.call(this, event);\n        }\n      } catch (exception) {\n        // Exceptions during event handlers should not affect the caller,\n        // but should appear on the console as uncaught, according to MDN:\n        // http://goo.gl/N6Ff27\n        // TODO: add log\n      }\n\n      if (event.stopped) {\n        break;\n      }\n    }\n\n    return event.defaultPrevented;\n  }\n}\n\n/**\n * These are the listener types defined in the closure extern for EventTarget.\n * @typedef {EventListener|function(!Event):(boolean|undefined)}\n */\ndeclare function ListenerType(event: FakeEvent): (boolean | void);\n\nexport default FakeEventTarget;\n\n\n\n// WEBPACK FOOTER //\n// ./event/fake-event-target.js","//@flow\n\n/**\n * A simple multimap template.\n * @constructor\n * @struct\n * @template T\n */\nclass MultiMap<T> {\n  _map: Map<string, T[]>;\n\n  constructor() {\n    /** @private {!Object.<string, !Array.<T>>} */\n    this._map = new Map();\n  }\n\n  /**\n   * Add a key, value pair to the map.\n   * @param {string} key -\n   * @param {T} value  -\n   * @returns {void}\n   */\n  push(key: string, value: T): void {\n    if (this._map.has(key)) {\n      let list = this._map.get(key);\n      if (Array.isArray(list)) {\n        list.push(value);\n        this._map.set(key, list);\n      }\n    } else {\n      this._map.set(key, [value]);\n    }\n  }\n\n  /**\n   * Set an array of values for the key, overwriting any previous data.\n   * @param {string} key -\n   * @param {!Array.<T>} values -\n   * @returns {void}\n   */\n  set(key: string, values: T[]): void {\n    this._map.set(key, values);\n  }\n\n  /**\n   * Check for a key.\n   * @param {string} key -\n   * @return {boolean} true if the key exists.\n   */\n  has(key: string): boolean {\n    return this._map.has(key);\n  }\n\n  /**\n   * Get a list of values by key.\n   * @param {string} key -\n   * @return {Array.<T>} or null if no suZch key exists.\n   */\n  get(key: string): Array<T> {\n    let list = this._map.get(key);\n    // slice() clones the list so that it and the map can each be modified\n    // without affecting the other.\n    return list ? list.slice() : [];\n  }\n\n  /**\n   * Get a list of all values.\n   * @returns {!Array.<T>} -\n   */\n  getAll(): T[] {\n    let list: T[] = [];\n    for (var value of this._map.values()) {\n      list = list.concat(value);\n    }\n    return list;\n  }\n\n  /**\n   * Remove a specific value, if it exists.\n   * @param {string} key -\n   * @param {T} value -\n   * @returns {void}\n   */\n  remove(key: string, value: T): void {\n    if (!this._map.has(key)) return;\n    let list = this._map.get(key);\n    if (Array.isArray(list)) {\n      for (let i = 0; i < list.length; ++i) {\n        if (list[i] == value) {\n          list.splice(i, 1);\n          --i;\n        }\n      }\n    }\n  }\n\n  /**\n   * Get all keys from the multimap.\n   * @return {!Array.<string>}\n   */\n  // eslint-disable-next-line no-undef\n  keys(): Iterator<string> {\n    return this._map.keys();\n  }\n\n\n  /**\n   * Clear all keys and values from the multimap.\n   * @returns {void}\n   */\n  clear(): void {\n    this._map.clear();\n  }\n}\n\nexport default MultiMap;\n\n\n\n// WEBPACK FOOTER //\n// ./utils/multi-map.js","//@flow\n\"use strict\";\n\n/**\n * @param {number} n - A certain number\n * @returns {boolean} - If the input is a number\n */\nfunction isNumber(n: number): boolean {\n  return Number(n) === n;\n}\n\n/**\n * @param {number} n - A certain number\n * @returns {boolean} - If the input is an integer\n */\nfunction isInt(n: number): boolean {\n  return isNumber(n) && n % 1 === 0;\n}\n\n/**\n * @param {number} n - A certain number\n * @returns {boolean} - If the input is a float\n */\nfunction isFloat(n: number): boolean {\n  return isNumber(n) && n % 1 !== 0;\n}\n\n/**\n * @param {Object} obj1 - Certain object\n * @param {Object} obj2 - Certain object\n * @returns {*} - The merged object.\n */\nfunction merge(obj1: Object, obj2: Object): Object {\n  if (!obj1 && !obj2) return {};\n  if (!obj1) return obj2;\n  if (!obj2) return obj1;\n  return Object.assign(obj1, obj2);\n}\n\nexport {isNumber, isInt, isFloat, merge};\n\n\n\n// WEBPACK FOOTER //\n// ./utils/util.js","module.exports = {\n\t\"name\": \"playkit-js\",\n\t\"version\": \"0.0.1\",\n\t\"main\": \"dist/playkit.js\",\n\t\"scripts\": {\n\t\t\"clean\": \"rm -rf ./dist\",\n\t\t\"prebuild\": \"npm run clean\",\n\t\t\"build\": \"webpack\",\n\t\t\"dev\": \"webpack --progress --colors --watch\",\n\t\t\"test\": \"NODE_ENV=test ./node_modules/.bin/karma start --single-run\",\n\t\t\"test:watch\": \"NODE_ENV=test ./node_modules/.bin/karma start --auto-watch\",\n\t\t\"start\": \"webpack-dev-server\",\n\t\t\"release\": \"npm run build && standard-version\",\n\t\t\"eslint\": \"eslint . --color\",\n\t\t\"flow\": \"flow check\",\n\t\t\"prepush\": \"npm run eslint & npm run test & npm run flow\"\n\t},\n\t\"devDependencies\": {\n\t\t\"babel-cli\": \"^6.18.0\",\n\t\t\"babel-core\": \"^6.18.2\",\n\t\t\"babel-eslint\": \"^7.1.1\",\n\t\t\"babel-loader\": \"^6.2.7\",\n\t\t\"babel-plugin-istanbul\": \"^4.0.0\",\n\t\t\"babel-plugin-transform-class-properties\": \"^6.22.0\",\n\t\t\"babel-plugin-transform-flow-strip-types\": \"^6.22.0\",\n\t\t\"babel-preset-es2015\": \"^6.18.0\",\n\t\t\"babel-register\": \"^6.23.0\",\n\t\t\"chai\": \"^3.5.0\",\n\t\t\"cross-env\": \"^3.1.4\",\n\t\t\"eslint\": \"^3.10.0\",\n\t\t\"eslint-loader\": \"^1.6.1\",\n\t\t\"eslint-plugin-flowtype\": \"^2.30.0\",\n\t\t\"eslint-plugin-import\": \"^2.2.0\",\n\t\t\"eslint-plugin-mocha-no-only\": \"^0.0.5\",\n\t\t\"flow-bin\": \"latest\",\n\t\t\"istanbul\": \"^0.4.5\",\n\t\t\"karma\": \"^1.5.0\",\n\t\t\"karma-chai\": \"^0.1.0\",\n\t\t\"karma-chrome-launcher\": \"^2.0.0\",\n\t\t\"karma-cli\": \"^1.0.1\",\n\t\t\"karma-coverage\": \"^1.1.1\",\n\t\t\"karma-mocha\": \"^1.3.0\",\n\t\t\"karma-sourcemap-loader\": \"^0.3.7\",\n\t\t\"karma-webpack\": \"^2.0.2\",\n\t\t\"mocha\": \"^3.2.0\",\n\t\t\"mocha-cli\": \"^1.0.1\",\n\t\t\"nyc\": \"^10.1.2\",\n\t\t\"sinon\": \"^2.0.0\",\n\t\t\"sinon-chai\": \"^2.8.0\",\n\t\t\"standard-version\": \"^4.0.0\",\n\t\t\"webpack\": \"latest\",\n\t\t\"webpack-dev-server\": \"latest\"\n\t},\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"https://github.com/kaltura/playkit-js\"\n\t},\n\t\"keywords\": [\n\t\t\"kaltura\",\n\t\t\"player\",\n\t\t\"html5 player\"\n\t],\n\t\"license\": \"AGPLV3\",\n\t\"bugs\": {\n\t\t\"url\": \"https://github.com/kaltura/playkit-js/issues\"\n\t},\n\t\"homepage\": \"https://github.com/kaltura/playkit-js\",\n\t\"dependencies\": {\n\t\t\"js-logger\": \"^1.3.0\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../package.json\n// module id = 13\n// module chunks = 0","//@flow\nimport BaseMediaSourceAdapter from './base-adapter'\n\n/**\n * An illustration of media source extension for progressive download\n * @classdesc\n * @extends BaseMediaSourceAdapter\n */\nexport default class NativeAdapter extends BaseMediaSourceAdapter {\n  /**\n   * The name of Adapter\n   * @member {string} _name\n   * @static\n   * @private\n   */\n  static _name = 'NativeAdapter';\n\n  /**\n   * Checks if NativeAdapter can play a given mime type\n   * @function canPlayType\n   * @param {string} mimeType - The mime type to check\n   * @returns {boolean} - Whether the native adapter can play a specific mime type\n   * @static\n   * @override\n   */\n  static canPlayType(mimeType: string): boolean {\n    return !!(document.createElement(\"video\").canPlayType(mimeType));\n  }\n\n  /**\n   * @constructor\n   * @param {IEngine} engine - The video element which bind to NativeAdapter\n   * @param {string} source - The source URL\n   * @param {Object} config - The media source adapter configuration\n   */\n  constructor(engine: IEngine, source: Object, config: Object) {\n    super(engine, source, config);\n    this._msPlayer = engine.getVideoElement();\n    this._source = source.url;\n    if (source) {\n      this._msPlayer.src = source.url;\n    }\n  }\n\n  /**\n   * Load the video source\n   * @function load\n   * @override\n   */\n  load(): void {\n    this._msPlayer.load();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./engines/adapters/native-adapter.js","//@flow\nimport FakeEventTarget from '../event/fake-event-target'\nimport FakeEvent from '../event/fake-event'\nimport EventManager from '../event/event-manager'\nimport PlayerEvents from '../event/events'\nimport MSAManager from './adapters/adapter-manager'\nimport BaseMediaSourceAdapter from './adapters/base-adapter'\n\nexport default class Html5 extends FakeEventTarget implements IEngine {\n  _el: HTMLVideoElement;\n  _eventManager: EventManager;\n  _mediaSourceAdapter: ?BaseMediaSourceAdapter;\n\n  static EngineName: string = \"html5\";\n\n  static canPlayType(mimeType) {\n    return MSAManager.canPlayType(mimeType);\n  }\n\n  constructor(source: Object, config: Object) {\n    super();\n    this.createVideoElement();\n    this._eventManager = new EventManager();\n    this.setSource(source, config);\n    this.attach();\n  }\n\n  destroy() {\n    this.detach();\n    if (this._mediaSourceAdapter) {\n      this._mediaSourceAdapter.destroy();\n    }\n    if (this._el) {\n      this.pause();\n      this._el.removeAttribute('src');\n      if (this._el.parentNode) {\n        this._el.parentNode.removeChild(this._el);\n      }\n    }\n  }\n\n  attach() {\n    for (let playerEvent in PlayerEvents) {\n      if (PlayerEvents.hasOwnProperty(playerEvent)) {\n        this._eventManager.listen(this._el, PlayerEvents[playerEvent], () => {\n          this.dispatchEvent(new FakeEvent(PlayerEvents[playerEvent]));\n        });\n      }\n    }\n  }\n\n  detach() {\n    for (let playerEvent in PlayerEvents) {\n      if (PlayerEvents.hasOwnProperty(playerEvent)) {\n        this._eventManager.unlisten(this._el, PlayerEvents[playerEvent]);\n      }\n    }\n  }\n\n  createVideoElement() {\n    this._el = document.createElement(\"video\");\n    //Set attributes\n    this._el.style.width = \"640px\";\n    this._el.style.height = \"360px\";\n    this._el.style.backgroundColor = \"black\";\n    this._el.controls = true;\n    if (document && document.body) {\n      document.body.appendChild(this._el);\n    }\n  }\n\n  getVideoElement(): HTMLVideoElement {\n    return this._el;\n  }\n\n  setSource(source: Object, config: Object) {\n    this.loadMediaSourceAdapter(source, config);\n  }\n\n  loadMediaSourceAdapter(source: Object, config: Object) {\n    this._mediaSourceAdapter = MSAManager.getMediaSourceAdapter((this: Html5), source, config);\n  }\n\n  set src(source: string): void {\n    //Set source\n    this._el.src = source;\n  }\n\n  get src(): string {\n    return this._el.src;\n  }\n\n  //playback interface\n  /**\n   * Start/resume playback\n   * @returns {void}\n   */\n  play(): void {\n    return this._el.play();\n  }\n\n  /**\n   * Pause playback\n   * @returns {void}\n   */\n  pause(): void {\n    return this._el.pause();\n  }\n\n  /**\n   * Load media\n   * @returns {void}\n   */\n  load(): void {\n    if (this._mediaSourceAdapter) {\n      this._mediaSourceAdapter.load();\n    }\n  }\n\n  /**\n   * Get the current time in seconds\n   * @returns {Number} - The current playback time\n   */\n  get currentTime(): number {\n    return this._el.currentTime;\n  }\n\n  /**\n   * Set the current time in seconds\n   * @param {Number} to - The number to set in seconds\n   */\n  set currentTime(to: number) {\n    this._el.currentTime = to;\n  }\n\n  /**\n   * Get the duration in seconds\n   * @returns {Number} - The playback duration\n   */\n  get duration(): number {\n    return this._el.duration;\n  }\n\n  /**\n   * Set playback volume\n   * @param {Number} vol - The volume to set\n   */\n  set volume(vol: number) {\n    this._el.volume = vol;\n  }\n\n  /**\n   * Get playback volume\n   * @returns {Number} - The volume value of the video element\n   */\n  get volume(): number {\n    return this._el.volume;\n  }\n\n  //state\n  ready() {\n  }\n\n  /**\n   * Get paused state\n   * @returns {boolean} - The paused value of the video element\n   */\n  get paused(): boolean {\n    return this._el.paused;\n  }\n\n  /**\n   * Get seeking state\n   * @returns {boolean} - The seeking value of the video element\n   */\n  get seeking(): boolean {\n    return this._el.seeking;\n  }\n\n  get seekable(): TimeRanges {\n    return this._el.seekable;\n  }\n\n  get played(): TimeRanges {\n    return this._el.played;\n  }\n\n  get buffered(): TimeRanges {\n    return this._el.buffered;\n  }\n\n  /**\n   * Set player muted state\n   * @param {boolean} mute - The new mute value\n   */\n  set muted(mute: boolean) {\n    this._el.muted = mute;\n  }\n\n  /**\n   * Get player muted state\n   * @returns {boolean} - The muted value of the video element\n   */\n  get muted(): boolean {\n    return this._el.muted;\n  }\n\n  get defaultMuted(): boolean {\n    return this._el.defaultMuted;\n  }\n\n  set poster(poster: string) {\n    this._el.poster = poster;\n  }\n\n  get poster(): string {\n    return this._el.poster;\n  }\n\n  set preload(preload: string) {\n    this._el.preload = preload;\n  }\n\n  get preload(): string {\n    return this._el.preload;\n  }\n\n  set autoplay(autoplay: boolean) {\n    this._el.autoplay = autoplay;\n  }\n\n  get autoplay(): boolean {\n    return this._el.autoplay;\n  }\n\n  set loop(loop: boolean) {\n    this._el.loop = loop;\n  }\n\n  get loop(): boolean {\n    return this._el.loop;\n  }\n\n  set controls(controls: boolean) {\n    this._el.controls = controls;\n  }\n\n  get controls(): boolean {\n    return this._el.controls;\n  }\n\n  set playbackRate(playbackRate: number) {\n    this._el.playbackRate = playbackRate;\n  }\n\n  get playbackRate(): number {\n    return this._el.playbackRate;\n  }\n\n  set defaultPlaybackRate(defaultPlaybackRate: number) {\n    this._el.defaultPlaybackRate = defaultPlaybackRate;\n  }\n\n  get defaultPlaybackRate(): number {\n    return this._el.defaultPlaybackRate;\n  }\n\n  get ended(): boolean {\n    return this._el.ended;\n  }\n\n  get error(): ?MediaError {\n    return this._el.error;\n  }\n\n  get networkState(): number {\n    return this._el.networkState;\n  }\n\n  get readyState(): number {\n    return this._el.readyState;\n  }\n\n  get videoHeight(): number {\n    return this._el.videoHeight;\n  }\n\n  get videoWidth(): number {\n    return this._el.videoWidth;\n  }\n\n  static TEST_VID: HTMLVideoElement;\n\n  static isSupported() {\n    try {\n      Html5.TEST_VID = document.createElement('video');\n      Html5.TEST_VID.volume = 0.5;\n    } catch (e) {\n      return false;\n    }\n\n    return !!Html5.TEST_VID.canPlayType;\n  }\n}\n\n//Engine.register(\"html5\", Html5);\n\n\n\n// WEBPACK FOOTER //\n// ./engines/html5.js","//@flow\nimport Player from './player'\nimport LoggerFactory from './utils/logger'\nimport * as packageData from '../package.json'\nimport {registerAdapter} from './engines/adapters/adapter-manager'\nimport BaseMediaSourceAdapter from './engines/adapters/base-adapter'\nimport {registerPlugin} from './plugin/plugin-manager'\nimport BasePlugin from './plugin/base-plugin'\n\n// Playkit version\nlet VERSION = packageData.version;\n\nLoggerFactory.getLogger().log(\"%c Playkit \" + VERSION, \"color: yellow; font-size: large\");\nLoggerFactory.getLogger().log(\"%c For more details see https://github.com/kaltura/playkit-js\", \"color: yellow;\");\n\n/**\n * @param {Object} config - The configuration of the player\n * @returns {Player} - The player instance\n */\nexport function playkit(config: Object = {}) {\n  return new Player(config);\n}\n\n// Registration for media source adapter\nexport {registerAdapter, BaseMediaSourceAdapter};\n\n// Export the plugin framework\nexport {registerPlugin, BasePlugin};\n\n//export version\nexport {VERSION};\nexport default playkit;\n\n\n\n// WEBPACK FOOTER //\n// ./playkit.js","//@flow\nimport Player from '../player'\nimport EventManager from '../event/event-manager'\nimport State from './state'\nimport PlayerStates from './state-types'\nimport PlayerEvents from '../event/events'\nimport FakeEvent from '../event/fake-event'\nimport LoggerFactory from '../utils/logger'\n\n/**\n * Define a transition object.\n */\ntype Transition = {\n  [state: string]: {\n    [event: string]: Function\n  }\n}\n\n/**\n * This class responsible to manage all the state machine of the player.\n * @classdesc\n */\nexport default class StateManager {\n  /**\n   * The logger of the class.\n   * @member\n   * @type {any}\n   * @private\n   */\n  _logger: any;\n  /**\n   * Reference to the actual player.\n   * @member\n   * @type {Player}\n   * @private\n   */\n  _player: Player;\n  /**\n   * The event manager of the class.\n   * @member\n   * @type {EventManager}\n   * @private\n   */\n  _eventManager: EventManager;\n  /**\n   * Holds the current state of the player.\n   * @member\n   * @type {State}\n   * @private\n   */\n  _curState: State;\n  /**\n   * Holds the previous state of the player.\n   * @member\n   * @type {State | null}\n   * @private\n   */\n  _prevState: State | null;\n  /**\n   * Holds the state history of the player.\n   * @member\n   * @type {Array<State>}\n   * @private\n   */\n  _history: Array<State>;\n  /**\n   * The possible transitions from one state to another.\n   * @type {Array<Transition>}\n   * @private\n   */\n  _transitions: Transition = {\n    [PlayerStates.IDLE]: {\n      [PlayerEvents.LOAD_START]: () => {\n        this._updateState(PlayerStates.LOADING);\n        this._dispatchEvent();\n      },\n      [PlayerEvents.PLAY]: () => {\n        this._updateState(PlayerStates.BUFFERING);\n        this._dispatchEvent();\n      }\n    },\n    [PlayerStates.LOADING]: {\n      [PlayerEvents.LOADED_METADATA]: () => {\n        if (this._player.config.autoPlay) {\n          this._updateState(PlayerStates.PLAYING);\n        } else {\n          this._updateState(PlayerStates.PAUSED);\n        }\n        this._dispatchEvent();\n      },\n      [PlayerEvents.ERROR]: () => {\n        this._updateState(PlayerStates.IDLE);\n        this._dispatchEvent();\n      }\n    },\n    [PlayerStates.PAUSED]: {\n      [PlayerEvents.PLAY]: () => {\n        this._updateState(PlayerStates.PLAYING);\n        this._dispatchEvent();\n      },\n      [PlayerEvents.PLAYING]: () => {\n        this._updateState(PlayerStates.PLAYING);\n        this._dispatchEvent();\n      },\n      [PlayerEvents.ENDED]: () => {\n        this._updateState(PlayerStates.IDLE);\n        this._dispatchEvent();\n      }\n    },\n    [PlayerStates.PLAYING]: {\n      [PlayerEvents.PAUSE]: () => {\n        this._updateState(PlayerStates.PAUSED);\n        this._dispatchEvent();\n      },\n      [PlayerEvents.WAITING]: () => {\n        this._updateState(PlayerStates.BUFFERING);\n        this._dispatchEvent();\n      },\n      [PlayerEvents.ENDED]: () => {\n        this._updateState(PlayerStates.IDLE);\n        this._dispatchEvent();\n      },\n      [PlayerEvents.ERROR]: () => {\n        this._updateState(PlayerStates.IDLE);\n        this._dispatchEvent();\n      }\n    },\n    [PlayerStates.BUFFERING]: {\n      [PlayerEvents.PLAYING]: () => {\n        this._updateState(PlayerStates.PLAYING);\n        this._dispatchEvent();\n      },\n      [PlayerEvents.PAUSE]: () => {\n        this._updateState(PlayerStates.PAUSED);\n        this._dispatchEvent();\n      }\n    }\n  };\n\n  /**\n   * @constructor\n   * @param {Player} player - Reference to the player.\n   */\n  constructor(player: Player) {\n    this._player = player;\n    this._logger = LoggerFactory.getLogger(\"StateManager\");\n    this._eventManager = new EventManager();\n    this._history = [];\n    this._prevState = null;\n    this._curState = new State(PlayerStates.IDLE);\n    this._attachListeners();\n  }\n\n  /**\n   * Register to all necessary events which impacts on the player state.\n   * @private\n   * @returns {void}\n   */\n  _attachListeners(): void {\n    this._eventManager.listen(this._player, PlayerEvents.ERROR, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, PlayerEvents.ENDED, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, PlayerEvents.PLAY, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, PlayerEvents.LOAD_START, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, PlayerEvents.PLAYING, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, PlayerEvents.LOADED_METADATA, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, PlayerEvents.PAUSE, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, PlayerEvents.WAITING, this._doTransition.bind(this));\n  }\n\n  /**\n   * Performs a state transition depends on the event which occurs in the player system.\n   * @param {FakeEvent} event - The event occurs in the player system.\n   * @private\n   * @returns {void}\n   */\n  _doTransition(event: FakeEvent): void {\n    this._logger.debug('Do transition request', event);\n    let transition = this._transitions[this._curState.type];\n    if (typeof transition[event.type] === 'function') {\n      transition[event.type]();\n    }\n  }\n\n  /**\n   * Updates the player's state.\n   * @param {string} type - The type of the new state.\n   * @private\n   * @returns {void}\n   */\n  _updateState(type: string): void {\n    if (this._curState.type !== type) {\n      this._curState.duration = Date.now() / 1000;\n      this._history.push(this._curState);\n      this._prevState = this._curState;\n      this._curState = new State(type);\n      this._logger.debug(`Switch player state: from ${this._prevState.type} to ${this._curState.type}`)\n    }\n  }\n\n  /**\n   * Fires the playerStateChanged event after state has been changed.\n   * @private\n   * @returns {void}\n   */\n  _dispatchEvent(): void {\n    let event = new FakeEvent(PlayerEvents.PLAYER_STATE_CHANGED, {\n      'oldState': this._prevState,\n      'newState': this._curState\n    });\n    this._player.dispatchEvent(event);\n  }\n\n  /**\n   * Destroys the state manager.\n   * @public\n   * @returns {void}\n   */\n  destroy(): void {\n    this._history = [];\n    this._eventManager.destroy();\n  }\n\n  /**\n   * Getter to the current state of the player.\n   * @public\n   * @returns {State} - The current state object\n   */\n  get currentState(): State {\n    return this._curState;\n  }\n\n  /**\n   * Getter to the previous state of the player.\n   * @public\n   * @returns {State|null} - The previous state object, or null if such doesn't exists\n   */\n  get previousState(): State | null {\n    return this._prevState;\n  }\n\n  /**\n   * Getter to the state history of the player.\n   * @public\n   * @returns {Array.<State>} - The full states history objects\n   */\n  get history(): Array<State> {\n    return this._history;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./state/state-manager.js","//@flow\n\n/**\n * The possible player state types.\n * @const\n * @type {{IDLE: string, LOADING: string, PLAYING: string, PAUSED: string, BUFFERING: string}}\n */\nconst PLAYER_STATE_TYPES: { [state: string]: string } = {\n  IDLE: \"idle\",\n  LOADING: \"loading\",\n  PLAYING: \"playing\",\n  PAUSED: \"paused\",\n  BUFFERING: \"buffering\"\n};\n\nexport default PLAYER_STATE_TYPES;\n\n\n\n// WEBPACK FOOTER //\n// ./state/state-types.js","//@flow\n\n/**\n * This class describes a player state.\n * @classdesc\n */\nexport default class State {\n  /**\n   * The type of the state.\n   * Can be one of those describes in states.js\n   * @member\n   * @type {string}\n   * @public\n   */\n  type: string;\n  /**\n   * The duration that the player was in this state.\n   * @member\n   * @type {number}\n   * @private\n   */\n  _duration: number;\n  /**\n   * The timestamp that this state started.\n   * @member\n   * @type {number}\n   * @private\n   */\n  _timestamp: number;\n\n  /**\n   * @constructor\n   * @param {string} type - The type of the state.\n   */\n  constructor(type: string) {\n    this.type = type;\n    this._duration = 0;\n    this._timestamp = Date.now() / 1000;\n  }\n\n  /**\n   * Getter for the duration of the state.\n   * @returns {number} - The duration of the state\n   */\n  get duration(): number {\n    return this._duration;\n  }\n\n  /**\n   * Setter for the duration of the state.\n   * @param {number} endTime - The timestamp of the next state.\n   */\n  set duration(endTime: number): void {\n    this._duration = endTime - this._timestamp;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./state/state.js","//@flow\n\"use strict\";\n\n/**\n * Uppercase the first letter of a string\n * @param  {String} string - String to be uppercased\n * @return {String} - The uppercased string\n * @private\n * @method toTitleCase\n */\nfunction capitlize(string: string): string {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n/**\n * @param {string} string - Certain string\n * @param {string} searchString - Certain string\n * @returns {boolean} - Whether the string: string is ending with string: searchString\n */\nfunction endsWith(string: string, searchString: string): boolean {\n  if (typeof string !== 'string' || typeof searchString !== 'string') {\n    return false;\n  }\n  return string.indexOf(searchString, string.length - searchString.length) != -1;\n}\n\nexport {capitlize, endsWith};\n\n\n\n// WEBPACK FOOTER //\n// ./utils/string-util.js","/*!\r\n * js-logger - http://github.com/jonnyreeves/js-logger\r\n * Jonny Reeves, http://jonnyreeves.co.uk/\r\n * js-logger may be freely distributed under the MIT license.\r\n */\r\n(function (global) {\r\n\t\"use strict\";\r\n\r\n\t// Top level module for the global, static logger instance.\r\n\tvar Logger = { };\r\n\r\n\t// For those that are at home that are keeping score.\r\n\tLogger.VERSION = \"1.3.0\";\r\n\r\n\t// Function which handles all incoming log messages.\r\n\tvar logHandler;\r\n\r\n\t// Map of ContextualLogger instances by name; used by Logger.get() to return the same named instance.\r\n\tvar contextualLoggersByNameMap = {};\r\n\r\n\t// Polyfill for ES5's Function.bind.\r\n\tvar bind = function(scope, func) {\r\n\t\treturn function() {\r\n\t\t\treturn func.apply(scope, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\t// Super exciting object merger-matron 9000 adding another 100 bytes to your download.\r\n\tvar merge = function () {\r\n\t\tvar args = arguments, target = args[0], key, i;\r\n\t\tfor (i = 1; i < args.length; i++) {\r\n\t\t\tfor (key in args[i]) {\r\n\t\t\t\tif (!(key in target) && args[i].hasOwnProperty(key)) {\r\n\t\t\t\t\ttarget[key] = args[i][key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\t// Helper to define a logging level object; helps with optimisation.\r\n\tvar defineLogLevel = function(value, name) {\r\n\t\treturn { value: value, name: name };\r\n\t};\r\n\r\n\t// Predefined logging levels.\r\n\tLogger.DEBUG = defineLogLevel(1, 'DEBUG');\r\n\tLogger.INFO = defineLogLevel(2, 'INFO');\r\n\tLogger.TIME = defineLogLevel(3, 'TIME');\r\n\tLogger.WARN = defineLogLevel(4, 'WARN');\r\n\tLogger.ERROR = defineLogLevel(8, 'ERROR');\r\n\tLogger.OFF = defineLogLevel(99, 'OFF');\r\n\r\n\t// Inner class which performs the bulk of the work; ContextualLogger instances can be configured independently\r\n\t// of each other.\r\n\tvar ContextualLogger = function(defaultContext) {\r\n\t\tthis.context = defaultContext;\r\n\t\tthis.setLevel(defaultContext.filterLevel);\r\n\t\tthis.log = this.info;  // Convenience alias.\r\n\t};\r\n\r\n\tContextualLogger.prototype = {\r\n\t\t// Changes the current logging level for the logging instance.\r\n\t\tsetLevel: function (newLevel) {\r\n\t\t\t// Ensure the supplied Level object looks valid.\r\n\t\t\tif (newLevel && \"value\" in newLevel) {\r\n\t\t\t\tthis.context.filterLevel = newLevel;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Is the logger configured to output messages at the supplied level?\r\n\t\tenabledFor: function (lvl) {\r\n\t\t\tvar filterLevel = this.context.filterLevel;\r\n\t\t\treturn lvl.value >= filterLevel.value;\r\n\t\t},\r\n\r\n\t\tdebug: function () {\r\n\t\t\tthis.invoke(Logger.DEBUG, arguments);\r\n\t\t},\r\n\r\n\t\tinfo: function () {\r\n\t\t\tthis.invoke(Logger.INFO, arguments);\r\n\t\t},\r\n\r\n\t\twarn: function () {\r\n\t\t\tthis.invoke(Logger.WARN, arguments);\r\n\t\t},\r\n\r\n\t\terror: function () {\r\n\t\t\tthis.invoke(Logger.ERROR, arguments);\r\n\t\t},\r\n\r\n\t\ttime: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'start' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttimeEnd: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'end' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Invokes the logger callback if it's not being filtered.\r\n\t\tinvoke: function (level, msgArgs) {\r\n\t\t\tif (logHandler && this.enabledFor(level)) {\r\n\t\t\t\tlogHandler(msgArgs, merge({ level: level }, this.context));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Protected instance which all calls to the to level `Logger` module will be routed through.\r\n\tvar globalLogger = new ContextualLogger({ filterLevel: Logger.OFF });\r\n\r\n\t// Configure the global Logger instance.\r\n\t(function() {\r\n\t\t// Shortcut for optimisers.\r\n\t\tvar L = Logger;\r\n\r\n\t\tL.enabledFor = bind(globalLogger, globalLogger.enabledFor);\r\n\t\tL.debug = bind(globalLogger, globalLogger.debug);\r\n\t\tL.time = bind(globalLogger, globalLogger.time);\r\n\t\tL.timeEnd = bind(globalLogger, globalLogger.timeEnd);\r\n\t\tL.info = bind(globalLogger, globalLogger.info);\r\n\t\tL.warn = bind(globalLogger, globalLogger.warn);\r\n\t\tL.error = bind(globalLogger, globalLogger.error);\r\n\r\n\t\t// Don't forget the convenience alias!\r\n\t\tL.log = L.info;\r\n\t}());\r\n\r\n\t// Set the global logging handler.  The supplied function should expect two arguments, the first being an arguments\r\n\t// object with the supplied log messages and the second being a context object which contains a hash of stateful\r\n\t// parameters which the logging function can consume.\r\n\tLogger.setHandler = function (func) {\r\n\t\tlogHandler = func;\r\n\t};\r\n\r\n\t// Sets the global logging filter level which applies to *all* previously registered, and future Logger instances.\r\n\t// (note that named loggers (retrieved via `Logger.get`) can be configured independently if required).\r\n\tLogger.setLevel = function(level) {\r\n\t\t// Set the globalLogger's level.\r\n\t\tglobalLogger.setLevel(level);\r\n\r\n\t\t// Apply this level to all registered contextual loggers.\r\n\t\tfor (var key in contextualLoggersByNameMap) {\r\n\t\t\tif (contextualLoggersByNameMap.hasOwnProperty(key)) {\r\n\t\t\t\tcontextualLoggersByNameMap[key].setLevel(level);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Retrieve a ContextualLogger instance.  Note that named loggers automatically inherit the global logger's level,\r\n\t// default context and log handler.\r\n\tLogger.get = function (name) {\r\n\t\t// All logger instances are cached so they can be configured ahead of use.\r\n\t\treturn contextualLoggersByNameMap[name] ||\r\n\t\t\t(contextualLoggersByNameMap[name] = new ContextualLogger(merge({ name: name }, globalLogger.context)));\r\n\t};\r\n\r\n\t// CreateDefaultHandler returns a handler function which can be passed to `Logger.setHandler()` which will\r\n\t// write to the window's console object (if present); the optional options object can be used to customise the\r\n\t// formatter used to format each log message.\r\n\tLogger.createDefaultHandler = function (options) {\r\n\t\toptions = options || {};\r\n\r\n\t\toptions.formatter = options.formatter || function defaultMessageFormatter(messages, context) {\r\n\t\t\t// Prepend the logger's name to the log message for easy identification.\r\n\t\t\tif (context.name) {\r\n\t\t\t\tmessages.unshift(\"[\" + context.name + \"]\");\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Map of timestamps by timer labels used to track `#time` and `#timeEnd()` invocations in environments\r\n\t\t// that don't offer a native console method.\r\n\t\tvar timerStartTimeByLabelMap = {};\r\n\r\n\t\t// Support for IE8+ (and other, slightly more sane environments)\r\n\t\tvar invokeConsoleMethod = function (hdlr, messages) {\r\n\t\t\tFunction.prototype.apply.call(hdlr, console, messages);\r\n\t\t};\r\n\r\n\t\t// Check for the presence of a logger.\r\n\t\tif (typeof console === \"undefined\") {\r\n\t\t\treturn function () { /* no console */ };\r\n\t\t}\r\n\r\n\t\treturn function(messages, context) {\r\n\t\t\t// Convert arguments object to Array.\r\n\t\t\tmessages = Array.prototype.slice.call(messages);\r\n\r\n\t\t\tvar hdlr = console.log;\r\n\t\t\tvar timerLabel;\r\n\r\n\t\t\tif (context.level === Logger.TIME) {\r\n\t\t\t\ttimerLabel = (context.name ? '[' + context.name + '] ' : '') + messages[0];\r\n\r\n\t\t\t\tif (messages[1] === 'start') {\r\n\t\t\t\t\tif (console.time) {\r\n\t\t\t\t\t\tconsole.time(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttimerStartTimeByLabelMap[timerLabel] = new Date().getTime();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (console.timeEnd) {\r\n\t\t\t\t\t\tconsole.timeEnd(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinvokeConsoleMethod(hdlr, [ timerLabel + ': ' +\r\n\t\t\t\t\t\t\t(new Date().getTime() - timerStartTimeByLabelMap[timerLabel]) + 'ms' ]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Delegate through to custom warn/error loggers if present on the console.\r\n\t\t\t\tif (context.level === Logger.WARN && console.warn) {\r\n\t\t\t\t\thdlr = console.warn;\r\n\t\t\t\t} else if (context.level === Logger.ERROR && console.error) {\r\n\t\t\t\t\thdlr = console.error;\r\n\t\t\t\t} else if (context.level === Logger.INFO && console.info) {\r\n\t\t\t\t\thdlr = console.info;\r\n\t\t\t\t}\r\n\r\n\t\t\t\toptions.formatter(messages, context);\r\n\t\t\t\tinvokeConsoleMethod(hdlr, messages);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t// Configure and example a Default implementation which writes to the `window.console` (if present).  The\r\n\t// `options` hash can be used to configure the default logLevel and provide a custom message formatter.\r\n\tLogger.useDefaults = function(options) {\r\n\t\tLogger.setLevel(options && options.defaultLevel || Logger.DEBUG);\r\n\t\tLogger.setHandler(Logger.createDefaultHandler(options));\r\n\t};\r\n\r\n\t// Export to popular environments boilerplate.\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine(Logger);\r\n\t}\r\n\telse if (typeof module !== 'undefined' && module.exports) {\r\n\t\tmodule.exports = Logger;\r\n\t}\r\n\telse {\r\n\t\tLogger._prevLogger = global.Logger;\r\n\r\n\t\tLogger.noConflict = function () {\r\n\t\t\tglobal.Logger = Logger._prevLogger;\r\n\t\t\treturn Logger;\r\n\t\t};\r\n\r\n\t\tglobal.Logger = Logger;\r\n\t}\r\n}(this));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/js-logger/src/logger.js\n// module id = 21\n// module chunks = 0"],"sourceRoot":""}