{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 739b51cb41029936e10b","webpack:///./track/track.js","webpack:///./utils/logger.js","webpack:///./event/fake-event.js","webpack:///./track/audio-track.js","webpack:///./track/text-track.js","webpack:///./track/video-track.js","webpack:///./event/event-manager.js","webpack:///./event/events.js","webpack:///./player.js","webpack:///./event/fake-event-target.js","webpack:///./utils/player-error.js","webpack:///./utils/util.js","webpack:///./engines/html5/media-source/base-media-source-adapter.js","webpack:///./engines/html5/media-source/media-source-provider.js","webpack:///./plugin/base-plugin.js","webpack:///./plugin/plugin-manager.js","webpack:///./state/state-types.js","webpack:///./utils/multi-map.js","webpack:///../package.json","webpack:///./engines/html5/html5.js","webpack:///./engines/html5/media-source/adapters/native-adapter.js","webpack:///./playkit.js","webpack:///./state/state-manager.js","webpack:///./state/state.js","webpack:///./track/track-types.js","webpack:///../~/js-logger/src/logger.js"],"names":["Track","_id","_active","value","_label","_language","_index","settings","id","active","label","language","index","JsLogger","LOG_LEVEL","DEBUG","INFO","TIME","WARN","ERROR","OFF","LoggerFactory","options","useDefaults","name","get","lf","defaultLevel","FakeEvent","type","payload","bubbles","cancelable","defaultPrevented","timeStamp","window","performance","now","Date","isTrusted","currentTarget","target","stopped","AudioTrack","TextTrack","_kind","kind","VideoTrack","_bandwidth","bandwidth","EventManager","_bindingMap","removeAll","Promise","resolve","listener","binding","Binding_","push","list","i","length","unlisten","remove","listeners","getAll","clear","addEventListener","removeEventListener","HTML5_EVENTS","ABORT","CAN_PLAY","CAN_PLAY_THROUGH","DURATION_CHANGE","EMPTIED","ENDED","LOADED_DATA","LOADED_METADATA","LOAD_START","PAUSE","PLAY","PLAYING","PROGRESS","RATE_CHANGE","SEEKED","SEEKING","STALLED","SUSPEND","TIME_UPDATE","VOLUME_CHANGE","WAITING","CUSTOM_EVENTS","VIDEO_TRACK_CHANGED","AUDIO_TRACK_CHANGED","TEXT_TRACK_CHANGED","PLAYER_STATE_CHANGED","PLAYER_EVENTS","Player","config","_tracks","_logger","getLogger","_stateManager","_pluginManager","_eventManager","configure","_config","_defaultConfig","_loadPlugins","_selectEngine","_attachMedia","_engine","destroy","plugins","load","sources","canPlayType","mimetype","_loadEngine","source","preload","playerEvent","listen","event","dispatchEvent","_markActiveTrack","selectedVideoTrack","selectedAudioTrack","selectedTextTrack","_getTracksByType","filter","track","VIDEO","AUDIO","TEXT","selectVideoTrack","selectAudioTrack","selectTextTrack","enableAdaptiveBitrate","tracks","getTracks","src","play","then","pause","data","to","boundedTo","duration","currentTime","vol","boundedVol","volume","paused","seeking","mute","muted","FakeEventTarget","_listeners","dispatchTarget","handleEvent","call","exception","PlayerError","error","param","message","TYPE","NOT_REGISTERED_PLUGIN","NOT_VALID_HANDLER","NOT_IMPLEMENTED_METHOD","method","isNumber","n","Number","isInt","isFloat","merge","obj1","obj2","Object","assign","BaseMediaSourceAdapter","videoElement","_videoElement","_sourceObj","_trigger","CustomEvents","getError","videoTrack","audioTrack","textTrack","mimeType","MediaSourceProvider","mediaSourceAdapter","_mediaSourceAdapters","includes","debug","indexOf","splice","mediaSourceAdapters","_selectedAdapter","createAdapter","engines","registerMediaSourceAdapter","register","BasePlugin","player","eventManager","logger","constructor","defaultConfig","attr","update","PluginManager","_plugins","Map","_registry","has","pluginClass","isValid","set","createPlugin","forEach","_destroy","bind","plugin","delete","handler","prototype","registerPlugin","PLAYER_STATE_TYPES","IDLE","LOADING","PAUSED","BUFFERING","MultiMap","_map","key","Array","isArray","values","slice","concat","keys","Html5","_createVideoElement","_loadMediaSourceAdapter","attach","detach","_mediaSourceAdapter","_el","removeAttribute","parentNode","removeChild","document","createElement","style","width","height","backgroundColor","controls","body","appendChild","getMediaSourceAdapter","getVideoElement","seekable","played","buffered","defaultMuted","poster","autoplay","loop","playbackRate","defaultPlaybackRate","ended","networkState","readyState","videoHeight","videoWidth","TEST_VID","e","EngineName","NativeAdapter","toLowerCase","toString","_loadPromise","reject","_getParsedTracks","url","videoTracks","_getParsedVideoTracks","audioTracks","_getParsedAudioTracks","textTracks","_getParsedTextTracks","parsedTracks","selected","enabled","mode","_disableVideoTracks","_onTrackChanged","_disableAudioTracks","_disableTextTracks","playkit","packageData","VERSION","version","log","StateManager","_transitions","_updateState","_dispatchEvent","_player","autoPlay","_history","_prevState","_curState","_attachListeners","_doTransition","transition","State","_duration","_timestamp","endTime","TRACK_TYPES"],"mappings":"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;;;;;;;;;wBAqCuB;AACrB,aAAO,KAAK6R,SAAZ;AACD;;AAED;;;;;sBAIaE,O,EAAuB;AAClC,WAAKF,SAAL,GAAiBE,UAAU,KAAKD,UAAhC;AACD;;;;;;kBAhDkBF,K;;;;;;;;;;;;ACLrB,IAAMI,cAAyC;AAC7CjM,SAAO,OADsC;AAE7CC,SAAO,OAFsC;AAG7CC,QAAM;AAHuC,CAA/C;;kBAMe+L,W;;;;;;ACPf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;;AAEf;AACA;;AAEA;AACA;;AAEA,8CAA8C;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C;AAC5C;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oDAAoD;AACpD;AACA;AACA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;;AAEA;AACA,0CAA0C,0BAA0B;;AAEpE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mEAAmE,aAAa;AAChF;;AAEA;AACA,sDAAsD;AACtD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC","file":"playkit.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Playkit\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Playkit\"] = factory();\n\telse\n\t\troot[\"Playkit\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 739b51cb41029936e10b","//@flow\n\n/**\n * General track representation of the player.\n * @classdesc\n */\nexport default class Track {\n  /**\n   * The id of the track.\n   * @member\n   * @type {string}\n   * @private\n   */\n  _id: ?string;\n  /**\n   * The active mode of the track.\n   * @member\n   * @type {boolean}\n   * @private\n   */\n  _active: boolean;\n  /**\n   * The label of the track.\n   * @member\n   * @type {string}\n   * @private\n   */\n  _label: string;\n  /**\n   * The language of the track.\n   * @member\n   * @type {string}\n   * @private\n   */\n  _language: string;\n  /**\n   * The index of the track.\n   * @member\n   * @type {number}\n   * @private\n   */\n  _index: number;\n\n  /**\n   * Getter for the track id.\n   * @public\n   * @returns {?string} - The track id.\n   */\n  get id(): ?string {\n    return this._id;\n  }\n\n  /**\n   * Getter for the active mode of the track.\n   * @public\n   * @returns {boolean} - The active mode of the track.\n   */\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * Setter for the active mode of the track.\n   * @public\n   * @param {boolean} value - Whether the track is active or not.\n   */\n  set active(value: boolean) {\n    this._active = value;\n  }\n\n  /**\n   * Getter for the label of the track.\n   * @public\n   * @returns {string} - The label of the track.\n   */\n  get label(): string {\n    return this._label;\n  }\n\n  /**\n   * Getter for the language of the track.\n   * @public\n   * @returns {string} - The language of the track.\n   */\n  get language(): string {\n    return this._language;\n  }\n\n  /**\n   * Getter for the index of the track.\n   * @public\n   * @returns {number} - The index of the track.\n   */\n  get index(): number {\n    return this._index;\n  }\n\n  /**\n   * @constructor\n   * @param {Object} settings - The track settings object.\n   */\n  constructor(settings: Object = {}) {\n    this._id = settings.id;\n    this._active = settings.active;\n    this._label = settings.label;\n    this._language = settings.language;\n    this._index = settings.index;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./track/track.js","//@flow\nimport * as JsLogger from 'js-logger';\n\nconst LOG_LEVEL: { [level: string]: Object } = {\n  \"DEBUG\": JsLogger.DEBUG,\n  \"INFO\": JsLogger.INFO,\n  \"TIME\": JsLogger.TIME,\n  \"WARN\": JsLogger.WARN,\n  \"ERROR\": JsLogger.ERROR,\n  \"OFF\": JsLogger.OFF\n};\n\nclass LoggerFactory {\n  constructor(options?: Object) {\n    JsLogger.useDefaults(options || {});\n  }\n\n  getLogger(name?: string) {\n    if (!name) {\n      return JsLogger;\n    }\n    return JsLogger.get(name);\n  }\n}\n\nconst lf = new LoggerFactory({defaultLevel: JsLogger.DEBUG});\n\nexport default lf;\nexport {LOG_LEVEL};\n\n\n\n// WEBPACK FOOTER //\n// ./utils/logger.js","//@flow\n/**\n * Create an Event work-alike object based on the dictionary.\n * The event should contain all of the same properties from the dict.\n * @param {string} type -\n * @param {Object=} opt_dict -\n * @constructor\n * @extends {Event}\n */\nclass FakeEvent {\n  /** @const {boolean} */\n  bubbles: boolean;\n\n  /** @const {boolean} */\n  cancelable: boolean;\n\n  /** @const {boolean} */\n  defaultPrevented: boolean;\n\n  /**\n   * According to MDN, Chrome uses high-res timers instead of epoch time.\n   * Follow suit so that timeStamps on FakeEvents use the same base as\n   * on native Events.\n   * @const {number}\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Event/timeStamp\n   */\n  timeStamp: number | Date;\n\n  /** @const {string} */\n  type: string;\n\n  /** @const {boolean} */\n  isTrusted: boolean;\n\n  /** @type {EventTarget} */\n  currentTarget: any;\n\n  /** @type {EventTarget} */\n  target: any;\n\n  /**\n   * Non-standard property read by FakeEventTarget to stop processing listeners.\n   * @type {boolean}\n   */\n  stopped: boolean;\n\n  payload: any;\n\n  constructor(type: string, payload: any) {\n    // These Properties below cannot be set by dict.  They are all provided for\n    // compatibility with native events.\n\n    /** @const {boolean} */\n    this.bubbles = false;\n\n    /** @const {boolean} */\n    this.cancelable = false;\n\n    /** @const {boolean} */\n    this.defaultPrevented = false;\n\n    /**\n     * According to MDN, Chrome uses high-res timers instead of epoch time.\n     * Follow suit so that timeStamps on FakeEvents use the same base as\n     * on native Events.\n     * @const {number}\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Event/timeStamp\n     */\n    this.timeStamp = window.performance ? window.performance.now() : Date.now();\n\n    /** @const {string} */\n    this.type = type;\n\n    /** @const {boolean} */\n    this.isTrusted = false;\n\n    /** @type {EventTarget} */\n    this.currentTarget = null;\n\n    /** @type {EventTarget} */\n    this.target = null;\n\n\n    /**\n     * Non-standard property read by FakeEventTarget to stop processing listeners.\n     * @type {boolean}\n     */\n    this.stopped = false;\n\n    this.payload = payload;\n  }\n\n  /**\n   * Does nothing, since FakeEvents have no default.  Provided for compatibility\n   * with native Events.\n   * @override\n   */\n  preventDefault() {\n  }\n\n  /**\n   * Stops processing event listeners for this event.  Provided for compatibility\n   * with native Events.\n   * @override\n   */\n  stopImmediatePropagation() {\n    this.stopped = true;\n  }\n\n  /**\n   * Does nothing, since FakeEvents do not bubble.  Provided for compatibility\n   * with native Events.\n   * @override\n   */\n  stopPropagation() {\n  }\n}\n\nexport default FakeEvent;\n\n\n\n// WEBPACK FOOTER //\n// ./event/fake-event.js","//@flow\nimport Track from './track'\n\n/**\n * Audio track representation of the player.\n * @classdesc\n */\nexport default class AudioTrack extends Track {}\n\n\n\n// WEBPACK FOOTER //\n// ./track/audio-track.js","//@flow\nimport Track from './track'\n\n/**\n * Text track representation of the player.\n * @classdesc\n */\nexport default class TextTrack extends Track {\n  /**\n   * The kind of the text track:\n   * subtitles/captions/metadata.\n   * @member\n   * @type {string}\n   * @private\n   */\n  _kind: string;\n\n  /**\n   * Getter for the kind of the text track.\n   * @public\n   * @returns {string} - The kind of the text track.\n   */\n  get kind(): string {\n    return this._kind;\n  }\n\n  /**\n   * @constructor\n   * @param {Object} settings - The track settings object.\n   */\n  constructor(settings: Object = {}) {\n    super(settings);\n    this._kind = settings.kind;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./track/text-track.js","//@flow\nimport Track from './track'\n\n/**\n * Video track representation of the player.\n * @classdesc\n */\nexport default class VideoTrack extends Track {\n  /**\n   * The kind of the text track:\n   * subtitles/captions/metadata.\n   * @member\n   * @type {string}\n   * @private\n   */\n  _bandwidth: string;\n\n  /**\n   * Getter for the kind of the text track.\n   * @public\n   * @returns {string} - The kind of the text track.\n   */\n  get bandwidth(): string {\n    return this._bandwidth;\n  }\n\n  /**\n   * @constructor\n   * @param {Object} settings - The track settings object.\n   */\n  constructor(settings: Object = {}) {\n    super(settings);\n    this._bandwidth = settings.bandwidth;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./track/video-track.js","//@flow\nimport MultiMap from '../utils/multi-map'\nimport FakeEvent from './fake-event'\n\n/**\n * Creates a new EventManager. An EventManager maintains a collection of \"event\n * bindings\" between event targets and event listeners.\n *\n * @struct\n * @constructor\n * @implements {IDestroyable}\n */\nclass EventManager {\n  _bindingMap: MultiMap<Binding_> | null;\n\n  constructor() {\n    /**\n     * Maps an event type to an array of event bindings.\n     * @private {MultiMap.<!EventManager.Binding_>}\n     */\n    this._bindingMap = new MultiMap();\n  }\n\n  /**\n   * Detaches all event listeners.\n   * @override\n   */\n  destroy() {\n    this.removeAll();\n    this._bindingMap = null;\n    return Promise.resolve();\n  }\n\n\n  /**\n   * Attaches an event listener to an event target.\n   * @param {EventTarget} target The event target.\n   * @param {string} type The event type.\n   * @param {EventManager.ListenerType} listener The event listener.\n   * @returns {void}\n   */\n  listen(target: any, type: string, listener: ListenerType): void {\n    let binding = new Binding_(target, type, listener);\n    if (this._bindingMap) {\n      this._bindingMap.push(type, binding);\n    }\n  }\n\n\n  /**\n   * Detaches an event listener from an event target.\n   * @param {EventTarget} target The event target.\n   * @param {string} type The event type.\n   * @returns {void}\n   */\n  unlisten(target: any, type: string): void {\n    if (this._bindingMap) {\n      let list = this._bindingMap.get(type);\n\n      for (let i = 0; i < list.length; ++i) {\n        let binding = list[i];\n\n        if (binding.target == target) {\n          binding.unlisten();\n          if (this._bindingMap) {\n            this._bindingMap.remove(type, binding);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Detaches all event listeners from all targets.\n   * @returns {void}\n   */\n  removeAll(): void {\n    if (this._bindingMap) {\n      let listeners = this._bindingMap.getAll();\n\n      for (let listener of listeners) {\n        listener.unlisten();\n      }\n      if (this._bindingMap) {\n        this._bindingMap.clear();\n      }\n    }\n  }\n}\n\n/**\n * @typedef {function(!Event)}\n */\ntype ListenerType = (event: FakeEvent) => any;\n\n/**\n * Creates a new Binding_ and attaches the event listener to the event target.\n * @param {EventTarget} target The event target.\n * @param {string} type The event type.\n * @param {EventManager.ListenerType} listener The event listener.\n * @constructor\n * @private\n */\nclass Binding_ {\n  target: any;\n  type: string;\n  listener: ?ListenerType;\n\n  constructor(target, type, listener) {\n    /** @type {EventTarget} */\n    this.target = target;\n\n    /** @type {string} */\n    this.type = type;\n\n    /** @type {?EventManager.ListenerType} */\n    this.listener = listener;\n\n    this.target.addEventListener(type, listener, false);\n  }\n\n\n  /**\n   * Detaches the event listener from the event target. This does nothing if the\n   * event listener is already detached.\n   * @returns {void}\n   */\n  unlisten(): void {\n    if (!this.target)\n      return;\n\n    this.target.removeEventListener(this.type, this.listener, false);\n\n    this.target = null;\n    this.listener = null;\n  }\n}\n\nexport default EventManager;\n\n\n\n// WEBPACK FOOTER //\n// ./event/event-manager.js","//@flow\nimport {merge} from '../utils/util'\n\nconst HTML5_EVENTS: { [event: string]: string } = {\n  /**\n   * Fires when the loading of an audio/video is aborted\n   */\n  ABORT: 'abort',\n  /**\n   * Fires when the browser can start playing the audio/video\n   */\n  CAN_PLAY: 'canplay',\n  /**\n   * Fires when the browser can play through the audio/video without stopping for buffering\n   */\n  CAN_PLAY_THROUGH: 'canplaythrough',\n  /**\n   * Fires when the duration of the audio/video is changed\n   */\n  DURATION_CHANGE: 'durationchange',\n  /**\n   * Fires when the current playlist is empty\n   */\n  EMPTIED: 'emptied',\n  /**\n   * Fires when the current playlist is ended\n   */\n  ENDED: 'ended',\n  /**\n   * Fires when an error occurred during the loading of an audio/video\n   */\n  ERROR: 'error',\n  /**\n   * Fires when the browser has loaded the current frame of the audio/video\n   */\n  LOADED_DATA: 'loadeddata',\n  /**\n   * Fires when the browser has loaded meta data for the audio/video\n   */\n  LOADED_METADATA: 'loadedmetadata',\n  /**\n   * Fires when the browser starts looking for the audio/video\n   */\n  LOAD_START: 'loadstart',\n  /**\n   * Fires when the audio/video has been paused\n   */\n  PAUSE: 'pause',\n  /**\n   * Fires when the audio/video has been started or is no longer paused\n   */\n  PLAY: 'play',\n  /**\n   * Fires when the audio/video is playing after having been paused or stopped for buffering\n   */\n  PLAYING: 'playing',\n  /**\n   * Fires when the browser is downloading the audio/video\n   */\n  PROGRESS: 'progress',\n  /**\n   * Fires when the playing speed of the audio/video is changed\n   */\n  RATE_CHANGE: 'ratechange',\n  /**\n   * Fires when the user is finished moving/skipping to a new position in the audio/video\n   */\n  SEEKED: 'seeked',\n  /**\n   * Fires when the user starts moving/skipping to a new position in the audio/video\n   */\n  SEEKING: 'seeking',\n  /**\n   * Fires when the browser is trying to get media data, but data is not available\n   */\n  STALLED: 'stalled',\n  /**\n   * Fires when the browser is intentionally not getting media data\n   */\n  SUSPEND: 'suspend',\n  /**\n   * Fires when the current playback position has changed\n   */\n  TIME_UPDATE: 'timeupdate',\n  /**\n   * Fires when the volume has been changed\n   */\n  VOLUME_CHANGE: 'volumechange',\n  /**\n   * Fires when the video stops because it needs to buffer the next frame\n   */\n  WAITING: 'waiting',\n};\n\nconst CUSTOM_EVENTS: { [event: string]: string } = {\n  /**\n   * Fires when the video track has been changed\n   */\n  VIDEO_TRACK_CHANGED: 'videotrackchanged',\n  /**\n   * Fires when the audio track has been changed\n   */\n  AUDIO_TRACK_CHANGED: 'audiotrackchanged',\n  /**\n   * Fires when the text track has been changed\n   */\n  TEXT_TRACK_CHANGED: 'texttrackchanged',\n  /**\n   * Fires when the player state has been changed\n   */\n  PLAYER_STATE_CHANGED: 'playerstatechanged'\n};\n\nconst PLAYER_EVENTS: { [event: string]: string } = merge(merge({}, HTML5_EVENTS), CUSTOM_EVENTS);\n\nexport {PLAYER_EVENTS, HTML5_EVENTS, CUSTOM_EVENTS};\n\n\n\n// WEBPACK FOOTER //\n// ./event/events.js","//@flow\nimport EventManager from './event/event-manager'\nimport FakeEvent from './event/fake-event'\nimport FakeEventTarget from './event/fake-event-target'\nimport {PLAYER_EVENTS as PlayerEvents, HTML5_EVENTS as Html5Events, CUSTOM_EVENTS as CustomEvents} from './event/events'\nimport PlayerStates from './state/state-types'\nimport {isNumber, isFloat, merge} from './utils/util'\nimport LoggerFactory from './utils/logger'\nimport Html5 from './engines/html5/html5'\nimport PluginManager from './plugin/plugin-manager'\nimport StateManager from './state/state-manager'\nimport TrackTypes from './track/track-types'\nimport Track from './track/track'\nimport VideoTrack from './track/video-track'\nimport AudioTrack from './track/audio-track'\nimport TextTrack from './track/text-track'\n\n/**\n * The HTML5 player class.\n * @classdesc\n */\nclass Player extends FakeEventTarget {\n  /**\n   * The player class logger.\n   * @type {any}\n   * @private\n   */\n  _logger: any;\n  /**\n   * The plugin manager of the player.\n   * @type {PluginManager}\n   * @private\n   */\n  _pluginManager: PluginManager;\n  /**\n   * The event manager of the player.\n   * @type {EventManager}\n   * @private\n   */\n  _eventManager: EventManager;\n  /**\n   * The runtime configuration of the player.\n   * @type {Object}\n   * @private\n   */\n  _config: Object;\n  /**\n   * The playback engine.\n   * @type {IEngine}\n   * @private\n   */\n  _engine: IEngine;\n  /**\n   * The state manager of the player.\n   * @type {StateManager}\n   * @private\n   */\n  _stateManager: StateManager;\n  /**\n   * The tracks of the player.\n   * @type {Array<Track>}\n   * @private\n   */\n  _tracks: Array<Track>;\n\n  /**\n   * @param {Object} config - The configuration for the player instance.\n   * @constructor\n   */\n  constructor(config: Object) {\n    super();\n    this._tracks = [];\n    this._logger = LoggerFactory.getLogger('Player');\n    this._stateManager = new StateManager(this);\n    this._pluginManager = new PluginManager();\n    this._eventManager = new EventManager();\n    this.configure(config);\n  }\n\n  /**\n   * Configures the player according to given configuration.\n   * @param {Object} config - The configuration for the player instance.\n   * @returns {void}\n   */\n  configure(config: Object): void {\n    if (this._config) {\n      this._config = merge(this._config, config);\n    } else {\n      this._config = config || Player._defaultConfig();\n    }\n    this._loadPlugins(this._config);\n    this._selectEngine(this._config);\n    this._attachMedia();\n  }\n\n  /**\n   * Destroys the player.\n   * @returns {void}\n   * @public\n   */\n  destroy(): void {\n    this._engine.destroy();\n    this._eventManager.destroy();\n    this._pluginManager.destroy();\n    this._stateManager.destroy();\n    this._config = {};\n    this._tracks = [];\n  }\n\n  /**\n   * @returns {Object} - The default configuration of the player.\n   * @private\n   * @static\n   */\n  static _defaultConfig(): Object {\n    return {};\n  }\n\n  /**\n   *\n   * @param {Object} config - The configuration of the player instance.\n   * @private\n   * @returns {void}\n   */\n  _loadPlugins(config: Object): void {\n    let plugins = config.plugins;\n    for (let name in plugins) {\n      this._pluginManager.load(name, this, plugins[name]);\n    }\n  }\n\n  /**\n   * Select the engine to create based on the given configured sources.\n   * @param {Object} config - The configuration of the player instance.\n   * @private\n   * @returns {void}\n   */\n  _selectEngine(config: Object): void {\n    if (config && config.sources) {\n      let sources = config.sources;\n      for (let i = 0; i < sources.length; i++) {\n        if (Html5.canPlayType(sources[i].mimetype)) {\n          this._loadEngine(sources[i], config);\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Loads the selected engine.\n   * @param {Source} source - The selected source object.\n   * @param {Object} config - The configuration of the player instance.\n   * @private\n   * @returns {void}\n   */\n  _loadEngine(source: Source, config: Object): void {\n    this._engine = new Html5(source, config);\n    if (config.preload === \"auto\") {\n      this.load();\n    }\n  }\n\n  /**\n   * Listen to all HTML5 defined events and trigger them on the player\n   * @private\n   * @returns {void}\n   */\n  _attachMedia(): void {\n    if (this._engine) {\n      for (let playerEvent in Html5Events) {\n        this._eventManager.listen(this._engine, Html5Events[playerEvent], (event: FakeEvent) => {\n          return this.dispatchEvent(event);\n        });\n      }\n      this._eventManager.listen(this._engine, CustomEvents.VIDEO_TRACK_CHANGED, (event: FakeEvent) => {\n        this._markActiveTrack(event.payload.selectedVideoTrack);\n        return this.dispatchEvent(event);\n      });\n      this._eventManager.listen(this._engine, CustomEvents.AUDIO_TRACK_CHANGED, (event: FakeEvent) => {\n        this._markActiveTrack(event.payload.selectedAudioTrack);\n        return this.dispatchEvent(event);\n      });\n      this._eventManager.listen(this._engine, CustomEvents.TEXT_TRACK_CHANGED, (event: FakeEvent) => {\n        this._markActiveTrack(event.payload.selectedTextTrack);\n        return this.dispatchEvent(event);\n      });\n    }\n  }\n\n  /**\n   * Returns the tracks according to the filter. if no filter given returns the all tracks.\n   * @function getTracks\n   * @param {string} [type] - a tracks filter, should be 'video', 'audio' or 'text'.\n   * @returns {Array<Track>} - The parsed tracks.\n   * @public\n   */\n  getTracks(type?: string): Array<Track> {\n    return this._getTracksByType(type);\n  }\n\n  /**\n   * Returns the tracks according to the filter. if no filter given returns the all tracks.\n   * @function _getTracksByType\n   * @param {string} [type] - a tracks filter, should be 'video', 'audio' or 'text'.\n   * @returns {Array<Track>} - The parsed tracks.\n   * @private\n   */\n  _getTracksByType(type?: string): Array<Track> {\n    return !type ? this._tracks : this._tracks.filter((track: Track) => {\n      if (type === TrackTypes.VIDEO) {\n        return track instanceof VideoTrack;\n      } else if (type === TrackTypes.AUDIO) {\n        return track instanceof AudioTrack;\n      } else if (type === TrackTypes.TEXT) {\n        return track instanceof TextTrack;\n      } else {\n        return true;\n      }\n    });\n  }\n\n  /**\n   * Select a track\n   * @function selectTrack\n   * @param {Track} track - the track to select\n   * @returns {void}\n   * @public\n   */\n  selectTrack(track: Track): void {\n    if (this._engine) {\n      if (track instanceof VideoTrack) {\n        this._engine.selectVideoTrack(track);\n      } else if (track instanceof AudioTrack) {\n        this._engine.selectAudioTrack(track);\n      } else if (track instanceof TextTrack) {\n        this._engine.selectTextTrack(track);\n      }\n    }\n  }\n\n  /**\n   * Enables adaptive bitrate switching.\n   * @function enableAdaptiveBitrate\n   * @returns {void}\n   * @public\n   */\n  enableAdaptiveBitrate(): void {\n    if (this._engine) {\n      this._engine.enableAdaptiveBitrate();\n    }\n  }\n\n  /**\n   * Mark the selected track as active\n   * @function _markActiveTrack\n   * @param {Track} track - the track to mark\n   * @returns {void}\n   * @private\n   */\n  _markActiveTrack(track: Track) {\n    let type;\n    if (track instanceof VideoTrack) {\n      type = TrackTypes.VIDEO;\n    } else if (track instanceof AudioTrack) {\n      type = TrackTypes.AUDIO;\n    } else if (track instanceof TextTrack) {\n      type = TrackTypes.TEXT;\n    }\n    if (type) {\n      let tracks = this.getTracks(type);\n      for (let i = 0; i < tracks.length; i++) {\n        tracks[i].active = track.index === i;\n      }\n    }\n  }\n\n  /**\n   * Get the player config.\n   * @returns {Object} - The player configuration.\n   * @public\n   */\n  get config(): Object {\n    return this._config;\n  }\n\n  //  <editor-fold desc=\"Playback Interface\">\n  /**\n   * Start/resume playback.\n   * @returns {void}\n   * @public\n   */\n  play(): void {\n    if (this._engine) {\n      if (this._engine.src) {\n        this._engine.play();\n      } else {\n        this.load().then(() => {\n          this._engine.play();\n        });\n      }\n    }\n  }\n\n  /**\n   * Pause playback.\n   * @returns {void}\n   * @public\n   */\n  pause(): void {\n    if (this._engine) {\n      return this._engine.pause();\n    }\n  }\n\n  /**\n   * Load media.\n   * @public\n   * @returns {Promise<*>} - The load promise.\n   */\n  load(): Promise<*> {\n    if (this._engine) {\n      return this._engine.load().then((data) => {\n        this._tracks = data.tracks;\n      });\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  /**\n   * Set the current time in seconds.\n   * @param {Number} to - The number to set in seconds.\n   * @public\n   */\n  set currentTime(to: number): void {\n    if (this._engine) {\n      if (isNumber(to)) {\n        let boundedTo = to;\n        if (to < 0) {\n          boundedTo = 0;\n        }\n        if (boundedTo > this._engine.duration) {\n          boundedTo = this._engine.duration;\n        }\n        this._engine.currentTime = boundedTo;\n      }\n    }\n  }\n\n  /**\n   * Get the current time in seconds.\n   * @returns {?Number} - The playback current time.\n   * @public\n   */\n  get currentTime(): ?number {\n    if (this._engine) {\n      return this._engine.currentTime;\n    }\n  }\n\n  /**\n   * Get the duration in seconds.\n   * @returns {?Number} - The playback duration.\n   * @public\n   */\n  get duration(): ?number {\n    if (this._engine) {\n      return this._engine.duration;\n    }\n  }\n\n  /**\n   * Set playback volume.\n   * @param {Number} vol - The volume to set.\n   * @returns {void}\n   * @public\n   */\n  set volume(vol: number): void {\n    if (this._engine) {\n      if (isFloat(vol)) {\n        let boundedVol = vol;\n        if (boundedVol < 0) {\n          boundedVol = 0;\n        }\n        if (boundedVol > 1) {\n          boundedVol = 1;\n        }\n        this._engine.volume = boundedVol;\n      }\n    }\n  }\n\n  /**\n   * Get playback volume.\n   * @returns {?Number} - The playback volume.\n   * @public\n   */\n  get volume(): ?number {\n    if (this._engine) {\n      return this._engine.volume;\n    }\n  }\n\n  // </editor-fold>\n\n  // <editor-fold desc=\"State\">\n  ready() {\n  }\n\n  /**\n   * Get paused state.\n   * @returns {?boolean} - Whether the video is paused or not.\n   * @public\n   */\n  get paused(): ?boolean {\n    if (this._engine) {\n      return this._engine.paused;\n    }\n  }\n\n  /**\n   * Get seeking state.\n   * @returns {?boolean} - Whether the video is seeking or not.\n   * @public\n   */\n  get seeking(): ?boolean {\n    if (this._engine) {\n      return this._engine.seeking;\n    }\n  }\n\n  buffered() {\n  }\n\n  /**\n   * Set player muted state.\n   * @param {boolean} mute - The mute value.\n   * @returns {void}\n   * @public\n   */\n  set muted(mute: boolean): void {\n    if (this._engine) {\n      this._engine.muted = mute;\n    }\n  }\n\n  /**\n   * Get player muted state.\n   * @returns {?boolean} - Whether the video is muted or not.\n   * @public\n   */\n  get muted(): ?boolean {\n    if (this._engine) {\n      return this._engine.muted;\n    }\n  }\n\n  /**\n   * Get the player source.\n   * @returns {?string} - The current source of the player.\n   * @public\n   */\n  get src(): ?string {\n    if (this._engine) {\n      return this._engine.src;\n    }\n  }\n\n  /**\n   * Get the player events.\n   * @returns {Object} - The events of the player.\n   * @public\n   */\n  get Event(): { [event: string]: string } {\n    return PlayerEvents;\n  }\n\n  /**\n   * Get the player states.\n   * @returns {Object} - The states of the player.\n   * @public\n   */\n  get State(): { [state: string]: string } {\n    return PlayerStates;\n  }\n\n  /**\n   * Get the player tracks types.\n   * @returns {Object} - The tracks types of the player.\n   * @public\n   */\n  get Track(): { [track: string]: string } {\n    return TrackTypes;\n  }\n\n// </editor-fold>\n}\n\nexport default Player;\n\n\n\n// WEBPACK FOOTER //\n// ./player.js","//@flow\nimport FakeEvent from './fake-event'\nimport MultiMap from '../utils/multi-map'\n\n/**\n * A work-alike for EventTarget.  Only DOM elements may be true EventTargets,\n * but this can be used as a base class to provide event dispatch to non-DOM\n * classes.  Only FakeEvents should be dispatched.\n *\n * @struct\n * @constructor\n * @implements {EventTarget}\n * @export\n */\nclass FakeEventTarget {\n  _listeners: MultiMap<ListenerType>;\n  dispatchTarget: FakeEventTarget;\n\n  constructor() {\n    /**\n     * @private {!MultiMap.<FakeEventTarget.ListenerType>}\n     */\n    this._listeners = new MultiMap();\n\n    /**\n     * The target of all dispatched events.  Defaults to |this|.\n     * @type {EventTarget}\n     */\n    this.dispatchTarget = this;\n  }\n\n  /**\n   * Add an event listener to this object.\n   *\n   * @param {string} type The event type to listen for.\n   * @param {FakeEventTarget.ListenerType} listener The callback or\n   *   listener object to invoke.\n   * @param {boolean=} opt_capturing Ignored.  FakeEventTargets do not have\n   *   parents, so events neither capture nor bubble.\n   * @override\n   * @export\n   */\n  addEventListener(type: string, listener: ListenerType) {\n    this._listeners.push(type, listener);\n  }\n\n  /**\n   * Remove an event listener from this object.\n   *\n   * @param {string} type The event type for which you wish to remove a listener.\n   * @param {FakeEventTarget.ListenerType} listener The callback or\n   *   listener object to remove.\n   * @param {boolean=} opt_capturing Ignored.  FakeEventTargets do not have\n   *   parents, so events neither capture nor bubble.\n   * @override\n   * @export\n   */\n  removeEventListener(type: string, listener: ListenerType) {\n    this._listeners.remove(type, listener);\n  }\n\n  /**\n   * Dispatch an event from this object.\n   *\n   * @param {!Event} event The event to be dispatched from this object.\n   * @return {boolean} True if the default action was prevented.\n   * @override\n   * @export\n   */\n  dispatchEvent(event: FakeEvent) {\n    // In many browsers, it is complex to overwrite properties of actual Events.\n    // Here we expect only to dispatch FakeEvents, which are simpler.\n    //goog.asserts.assert(event instanceof FakeEvent,\n    //    'FakeEventTarget can only dispatch FakeEvents!');\n\n    let list = this._listeners.get(event.type) || [];\n\n    for (let i = 0; i < list.length; ++i) {\n      // Do this every time, since events can be re-dispatched from handlers.\n      event.target = this.dispatchTarget;\n      event.currentTarget = this.dispatchTarget;\n\n      let listener = list[i];\n      try {\n        if (listener.handleEvent) {\n          listener.handleEvent(event);\n        } else {\n          listener.call(this, event);\n        }\n      } catch (exception) {\n        // Exceptions during event handlers should not affect the caller,\n        // but should appear on the console as uncaught, according to MDN:\n        // http://goo.gl/N6Ff27\n        // TODO: add log\n      }\n\n      if (event.stopped) {\n        break;\n      }\n    }\n\n    return event.defaultPrevented;\n  }\n}\n\n/**\n * These are the listener types defined in the closure extern for EventTarget.\n * @typedef {EventListener|function(!Event):(boolean|undefined)}\n */\ndeclare function ListenerType(event: FakeEvent): (boolean | void);\n\nexport default FakeEventTarget;\n\n\n\n// WEBPACK FOOTER //\n// ./event/fake-event-target.js","//@flow\nexport default class PlayerError {\n  static TYPE: {[name: string]: Object} = {\n    NOT_REGISTERED_PLUGIN: {\n      name: \"PluginNotRegisteredException\",\n      message: function (name) {\n        return `Cannot load ${name} plugin. Name not found in the registry`;\n      }\n    },\n    NOT_VALID_HANDLER: {\n      name: \"PluginHandlerIsNotValidException\",\n      message: function () {\n        return \"To activate plugin you must provide a class derived from BasePlugin\";\n      }\n    },\n    NOT_IMPLEMENTED_METHOD: {\n      name: \"NotImplementedException\",\n      message: function (method) {\n        return `${method} method not implemented`;\n      }\n    }\n  };\n\n  name: string;\n  message: string;\n\n  constructor(error: Object, param?: any) {\n    this.name = error.name;\n    this.message = error.message(param);\n  }\n\n  getError() {\n    return {\n      name: this.name,\n      message: this.message\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./utils/player-error.js","//@flow\n\"use strict\";\n\n/**\n * @param {number} n - A certain number\n * @returns {boolean} - If the input is a number\n */\nfunction isNumber(n: number): boolean {\n  return Number(n) === n;\n}\n\n/**\n * @param {number} n - A certain number\n * @returns {boolean} - If the input is an integer\n */\nfunction isInt(n: number): boolean {\n  return isNumber(n) && n % 1 === 0;\n}\n\n/**\n * @param {number} n - A certain number\n * @returns {boolean} - If the input is a float\n */\nfunction isFloat(n: number): boolean {\n  return isNumber(n) && n % 1 !== 0;\n}\n\n/**\n * @param {Object} obj1 - Certain object\n * @param {Object} obj2 - Certain object\n * @returns {*} - The merged object.\n */\nfunction merge(obj1: Object, obj2: Object): Object {\n  if (!obj1 && !obj2) return {};\n  if (!obj1) return obj2;\n  if (!obj2) return obj1;\n  return Object.assign(obj1, obj2);\n}\n\nexport {isNumber, isInt, isFloat, merge};\n\n\n\n// WEBPACK FOOTER //\n// ./utils/util.js","//@flow\n/* eslint-disable no-unused-vars */\nimport FakeEvent from '../../../event/fake-event'\nimport FakeEventTarget from '../../../event/fake-event-target'\nimport PlayerError from '../../../utils/player-error'\nimport {CUSTOM_EVENTS} from '../../../event/events'\nimport LoggerFactory from '../../../utils/logger'\nimport Track from '../../../track/track'\nimport VideoTrack from '../../../track/video-track'\nimport AudioTrack from '../../../track/audio-track'\nimport TextTrack from '../../../track/text-track'\n\nexport default class BaseMediaSourceAdapter extends FakeEventTarget implements IMediaSourceAdapter {\n  /**\n   * Passing the custom events to the actual media source adapter.\n   * @static\n   */\n  static CustomEvents: { [event: string]: string } = CUSTOM_EVENTS;\n\n  /**\n   * Passing the getLogger function to the actual media source adapter.\n   * @type {Function}\n   * @static\n   */\n  static getLogger: Function = LoggerFactory.getLogger;\n\n  /**\n   * The adapter config.\n   * @member {Object} _config\n   * @private\n   */\n  _config: ?Object;\n\n  /**\n   * The source object.\n   * @member {Source} _sourceObj\n   * @private\n   */\n  _sourceObj: ?Source;\n\n  /**\n   * The dom video element.\n   * @member {HTMLVideoElement} _videoElement\n   * @private\n   */\n  _videoElement: HTMLVideoElement;\n\n  /**\n   * Checks if the media source adapter is supported.\n   * @function isSupported\n   * @returns {boolean} - Whether the media source adapter is supported.\n   * @static\n   */\n  static isSupported(): boolean {\n    return true;\n  }\n\n  /**\n   * Factory method to create media source adapter.\n   * @function createAdapter\n   * @param {HTMLVideoElement} videoElement - The video element that the media source adapter work with.\n   * @param {Object} source - The source Object.\n   * @param {Object} config - The media source adapter configuration.\n   * @returns {IMediaSourceAdapter} - New instance of the run time media source adapter.\n   * @static\n   */\n  static createAdapter(videoElement: HTMLVideoElement, source: Source, config: Object): IMediaSourceAdapter {\n    return new this(videoElement, source, config);\n  }\n\n  /**\n   * @constructor\n   * @param {HTMLVideoElement} videoElement - The video element which bind to media source adapter.\n   * @param {Source} source - The source object.\n   * @param {Object} config - The media source adapter configuration.\n   */\n  constructor(videoElement: HTMLVideoElement, source: Source, config: Object) {\n    super();\n    this._videoElement = videoElement;\n    this._sourceObj = source;\n    this._config = config;\n  }\n\n  /**\n   * Destroys the media source adapter.\n   * @function destroy\n   * @returns {void}\n   */\n  destroy(): void {\n    this._sourceObj = null;\n    this._config = null;\n  }\n\n  /**\n   * Triggers the appropriate track changed event.\n   * @param {Track} track - The selected track.\n   * @private\n   * @returns {void}\n   */\n  _onTrackChanged(track: Track): void {\n    if (track instanceof VideoTrack) {\n      this._trigger(BaseMediaSourceAdapter.CustomEvents.VIDEO_TRACK_CHANGED, {selectedVideoTrack: track});\n    } else if (track instanceof AudioTrack) {\n      this._trigger(BaseMediaSourceAdapter.CustomEvents.AUDIO_TRACK_CHANGED, {selectedAudioTrack: track});\n    } else if (track instanceof TextTrack) {\n      this._trigger(BaseMediaSourceAdapter.CustomEvents.TEXT_TRACK_CHANGED, {selectedTextTrack: track});\n    }\n  }\n\n  /**\n   * Dispatch an adapter event forward.\n   * @param {string} name - The name of the event.\n   * @param {Object} payload - The event payload.\n   * @returns {void}\n   */\n  _trigger(name: string, payload: Object): void {\n    this.dispatchEvent(new FakeEvent(name, payload));\n  }\n\n  /** Must implemented methods by the derived media source adapter **/\n\n  static canPlayType(mimeType: string): boolean {\n    throw new PlayerError(PlayerError.TYPE.NOT_IMPLEMENTED_METHOD, 'static canPlayType').getError();\n  }\n\n  load(): Promise<Object> {\n    throw new PlayerError(PlayerError.TYPE.NOT_IMPLEMENTED_METHOD, 'load').getError();\n  }\n\n  selectVideoTrack(videoTrack: VideoTrack): void {\n    throw new PlayerError(PlayerError.TYPE.NOT_IMPLEMENTED_METHOD, 'selectVideoTrack').getError();\n  }\n\n  selectAudioTrack(audioTrack: AudioTrack): void {\n    throw new PlayerError(PlayerError.TYPE.NOT_IMPLEMENTED_METHOD, 'selectAudioTrack').getError();\n  }\n\n  selectTextTrack(textTrack: TextTrack): void {\n    throw new PlayerError(PlayerError.TYPE.NOT_IMPLEMENTED_METHOD, 'selectTextTrack').getError();\n  }\n\n  enableAdaptiveBitrate(): void {\n    throw new PlayerError(PlayerError.TYPE.NOT_IMPLEMENTED_METHOD, 'enableAdaptiveBitrate').getError();\n  }\n\n  get src(): string {\n    throw new PlayerError(PlayerError.TYPE.NOT_IMPLEMENTED_METHOD, 'get src').getError();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./engines/html5/media-source/base-media-source-adapter.js","//@flow\nimport NativeAdapter from './adapters/native-adapter'\nimport LoggerFactory from '../../../utils/logger'\n\n/**\n * Media source provider\n * @classdesc\n */\nexport default class MediaSourceProvider {\n  /**\n   * The logger of the media source provider\n   * @member {any} _logger\n   * @static\n   * @private\n   */\n  static _logger: any = LoggerFactory.getLogger('MediaSourceProvider');\n  /**\n   * The media source adapter registry\n   * @member {Array<IMediaSourceAdapter>} _mediaSourceAdapters\n   * @static\n   * @private\n   */\n  static _mediaSourceAdapters: Array<typeof IMediaSourceAdapter> = [NativeAdapter];\n  /**\n   * The selected adapter for playback\n   * @type {null|IMediaSourceAdapter}\n   * @static\n   * @private\n   */\n  static _selectedAdapter: ?(typeof IMediaSourceAdapter) = null;\n\n  /**\n   * Add a media source adapter to the registry\n   * @function register\n   * @param {IMediaSourceAdapter} mediaSourceAdapter - The media source adapter to register\n   * @static\n   * @returns {void}\n   */\n  static register(mediaSourceAdapter: typeof IMediaSourceAdapter): void {\n    if (mediaSourceAdapter) {\n      if (!MediaSourceProvider._mediaSourceAdapters.includes(mediaSourceAdapter)) {\n        MediaSourceProvider._logger.debug(`Adapter <${mediaSourceAdapter.id}> has been registered successfully`);\n        MediaSourceProvider._mediaSourceAdapters.push(mediaSourceAdapter);\n      } else {\n        MediaSourceProvider._logger.debug(`Adapter <${mediaSourceAdapter.id}> is already registered, do not register again`);\n      }\n    }\n  }\n\n  /**\n   * Remove a media source adapter from the registry\n   * @function unRegister\n   * @param {IMediaSourceAdapter} mediaSourceAdapter - The media source adapter to unRegister\n   * @static\n   * @returns {void}\n   */\n  static unRegister(mediaSourceAdapter: typeof IMediaSourceAdapter): void {\n    let index = MediaSourceProvider._mediaSourceAdapters.indexOf(mediaSourceAdapter);\n    if (index > -1) {\n      MediaSourceProvider._logger.debug(`Unregistered <${mediaSourceAdapter.id}> adapter`);\n      MediaSourceProvider._mediaSourceAdapters.splice(index, 1);\n    }\n  }\n\n  /**\n   * Checks if one of the registered media source adapters can play a given mime type\n   * @function canPlayType\n   * @param {string} mimeType - The mime type to check\n   * @static\n   * @returns {boolean} - If one of the adapters can play the specific mime type\n   */\n  static canPlayType(mimeType: string): boolean {\n    let mediaSourceAdapters = MediaSourceProvider._mediaSourceAdapters;\n    for (let i = 0; i < mediaSourceAdapters.length; i++) {\n      if (mediaSourceAdapters[i].canPlayType(mimeType)) {\n        MediaSourceProvider._selectedAdapter = mediaSourceAdapters[i];\n        MediaSourceProvider._logger.debug(`Selected adapter is <${MediaSourceProvider._selectedAdapter.id}>`);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the appropriate media source adapter to the video source\n   * @function getMediaSourceAdapter\n   * @param {HTMLVideoElement} videoElement - The video element which requires adapter for a given mimeType\n   * @param {Source} source - The selected source object\n   * @param {Object} config - The player configuration\n   * @returns {IMediaSourceAdapter|null} - The selected media source adapter, or null if such doesn't exists\n   * @static\n   */\n  static getMediaSourceAdapter(videoElement: HTMLVideoElement, source: Source, config: Object): ?IMediaSourceAdapter {\n    if (videoElement && source && config) {\n      if (!MediaSourceProvider._selectedAdapter) {\n        MediaSourceProvider.canPlayType(source.mimetype);\n      }\n      return MediaSourceProvider._selectedAdapter ? MediaSourceProvider._selectedAdapter.createAdapter(videoElement, source, config.engines) : null;\n    }\n    return null;\n  }\n}\n\nconst registerMediaSourceAdapter = MediaSourceProvider.register;\nexport {registerMediaSourceAdapter};\n\n\n\n\n// WEBPACK FOOTER //\n// ./engines/html5/media-source/media-source-provider.js","//@flow\nimport Player from '../player'\nimport LoggerFactory from '../utils/logger'\nimport {merge} from '../utils/util'\nimport EventManager from '../event/event-manager'\nimport PlayerError from '../utils/player-error'\n\n/** The BasePlugin responsible to implement the plugin interface.\n * Contains several default implementations.\n * Other plugins should extend this class.\n * @classdesc\n */\nexport default class BasePlugin implements IPlugin {\n  /**\n   * The runtime configuration of the plugin.\n   * @member\n   */\n  config: Object;\n  /**\n   * The name of the plugin.\n   * @member\n   */\n  name: string;\n  /**\n   * The logger of the plugin.\n   * @member\n   */\n  logger: any;\n  /**\n   * Reference to the actual player.\n   * @member\n   */\n  player: Player;\n  /**\n   * The event manager of the plugin.\n   * @member\n   */\n  eventManager: EventManager;\n  /**\n   * The default configuration of the plugin.\n   * Inherited plugins should override this property.\n   * @type {Object}\n   * @static\n   * @member\n   */\n  static defaultConfig: Object = {};\n\n  /**\n   * Factory method to create the actual plugin.\n   * @param {string} name - The plugin name\n   * @param {Player} player - The player reference\n   * @param {Object} config - The plugin configuration\n   * @returns {BasePlugin} - New runtime plugin instance\n   * @static\n   * @public\n   */\n  static createPlugin(name: string, player: Player, config: Object = {}): BasePlugin {\n    return new this(name, player, config);\n  }\n\n  /**\n   * Returns under what conditions the plugin is valid.\n   * Plugin must implement this method.\n   * @returns {boolean} - Whether the plugin is valid and can be initiated. Default implementation is true\n   * @static\n   * @public\n   * @abstract\n   */\n  static isValid(): boolean {\n    throw new PlayerError(PlayerError.TYPE.NOT_IMPLEMENTED_METHOD, 'isValid()').getError();\n  }\n\n  /**\n   * constructor\n   * @param {string} name - The plugin name\n   * @param {Player} player - The player reference\n   * @param {Object} config - The plugin configuration\n   * @constructor\n   * @private\n   */\n  constructor(name: string, player: Player, config: Object) {\n    this.name = name;\n    this.player = player;\n    this.eventManager = new EventManager();\n    this.logger = LoggerFactory.getLogger(this.name);\n    this.config = merge(this.constructor.defaultConfig, config);\n  }\n\n  /**\n   * Getter for the configuration of the plugin.\n   * @param {string} attr - The key in the plugin configuration (optional).\n   * @returns {*} - If attribute is provided, returns its value. Else, Returns the config of the plugin.\n   * @public\n   */\n  getConfig(attr?: string): any {\n    if (attr) {\n      return this.config[attr];\n    }\n    return this.config;\n  }\n\n  /**\n   * Updates the config of the plugin.\n   * @param {Object} update - The updated configuration.\n   * @public\n   * @returns {void}\n   */\n  updateConfig(update: Object): void {\n    this.config = merge(this.config, update);\n  }\n\n  /**\n   * Runs the destroy logic of the plugin.\n   * plugin must implement this method.\n   * @public\n   * @abstract\n   * @returns {void}\n   */\n  destroy(): void {\n    throw new PlayerError(PlayerError.TYPE.NOT_IMPLEMENTED_METHOD, 'destroy()').getError();\n  }\n\n  /**\n   * Getter for the plugin's name.\n   * @returns {string} - The name of the plugin.\n   * @public\n   */\n  getName(): string {\n    return this.name;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./plugin/base-plugin.js","//@flow\nimport BasePlugin from './base-plugin'\nimport PlayerError from '../utils/player-error'\nimport Player from '../player'\nimport LoggerFactory from '../utils/logger'\n\n/**\n * The logger of the PluginManager class.\n * @private\n * @const\n */\nconst logger = LoggerFactory.getLogger(\"PluginManager\");\n\n/** The PluginManager responsible for register plugins definitions and store plugins instances.\n * @classdesc\n */\nexport default class PluginManager {\n  /**\n   * The registry of the plugins.\n   * Maps plugin's name to his class.\n   * @type {Map}\n   * @static\n   * @private\n   */\n  static _registry: Map<string, Function> = new Map();\n  /**\n   * The active plugins in the player.\n   * Maps plugin's name to his instance.\n   * @type {Map}\n   * @private\n   */\n  _plugins: Map<string, BasePlugin> = new Map();\n\n  /**\n   * Writes the plugin in the registry.\n   * Maps: plugin name -> plugin class.\n   * @param {string} name - The plugin name\n   * @param {Function} handler - The plugin class\n   * @returns {boolean} - If the registration request succeeded\n   * @static\n   * @public\n   */\n  static register(name: string, handler: Function): boolean {\n    if (typeof handler !== 'function' || handler.prototype instanceof BasePlugin === false) {\n      throw new PlayerError(PlayerError.TYPE.NOT_VALID_HANDLER).getError();\n    }\n    if (!PluginManager._registry.has(name)) {\n      PluginManager._registry.set(name, handler);\n      logger.debug(`Plugin <${name}> has been registered successfully`);\n      return true;\n    }\n    logger.debug(`Plugin <${name}> is already registered, do not register again`);\n    return false;\n  }\n\n  /**\n   * Removes the plugin from the registry.\n   * @param {string} name - The plugin name\n   * @static\n   * @public\n   * @returns {void}\n   */\n  static unRegister(name: string): void {\n    if (PluginManager._registry.has(name)) {\n      PluginManager._registry.delete(name);\n      logger.debug(`Unregistered <${name}> plugin.`);\n    }\n  }\n\n  /**\n   * Creates and store new instance of the plugin in case isValid() of the plugin returns true.\n   * @param {string} name - The plugin name\n   * @param {Player} player - The player reference\n   * @param {Object} [config={}] - The plugin configuration\n   * @returns {boolean} - Whether the plugin load was successful\n   * @public\n   */\n  load(name: string, player: Player, config: Object = {}): boolean {\n    if (!PluginManager._registry.has(name)) {\n      throw new PlayerError(PlayerError.TYPE.NOT_REGISTERED_PLUGIN, name).getError();\n    }\n    let pluginClass = PluginManager._registry.get(name);\n    if (pluginClass != null && pluginClass.isValid()) {\n      this._plugins.set(name, pluginClass.createPlugin(name, player, config));\n      logger.debug(`Plugin <${name}> has been loaded`);\n      return true;\n    }\n    logger.debug(`Plugin <${name}> isn\\'t loaded, isValid()=false`);\n    return false;\n  }\n\n  /**\n   * Iterates over all the plugins and calls private _destroy.\n   * @public\n   * @returns {void}\n   */\n  destroy(): void {\n    this._plugins.forEach(this._destroy.bind(this));\n  }\n\n  /**\n   * Calls destroy() method of the plugin's impl.\n   * @param {BasePlugin} plugin - The plugin instance\n   * @param {string} name - The plugin name\n   * @private\n   * @returns {void}\n   */\n  _destroy(plugin: BasePlugin, name: string): void {\n    plugin.destroy();\n    this._plugins.delete(name);\n  }\n\n  /**\n   * Returns the plugin's instance.\n   * @param {string} name - The plugin name\n   * @returns {BasePlugin} - The plugin instance\n   * @public\n   */\n  get(name: string): ?BasePlugin {\n    return this._plugins.get(name);\n  }\n}\n\n/**\n * Export the register method.\n * @type {function}\n * @constant\n */\nconst registerPlugin = PluginManager.register;\nexport {registerPlugin};\n\n\n\n// WEBPACK FOOTER //\n// ./plugin/plugin-manager.js","//@flow\n\n/**\n * The possible player state types.\n * @const\n * @type {{IDLE: string, LOADING: string, PLAYING: string, PAUSED: string, BUFFERING: string}}\n */\nconst PLAYER_STATE_TYPES: { [state: string]: string } = {\n  IDLE: \"idle\",\n  LOADING: \"loading\",\n  PLAYING: \"playing\",\n  PAUSED: \"paused\",\n  BUFFERING: \"buffering\"\n};\n\nexport default PLAYER_STATE_TYPES;\n\n\n\n// WEBPACK FOOTER //\n// ./state/state-types.js","//@flow\n\n/**\n * A simple multimap template.\n * @constructor\n * @struct\n * @template T\n */\nclass MultiMap<T> {\n  _map: Map<string, T[]>;\n\n  constructor() {\n    /** @private {!Object.<string, !Array.<T>>} */\n    this._map = new Map();\n  }\n\n  /**\n   * Add a key, value pair to the map.\n   * @param {string} key -\n   * @param {T} value  -\n   * @returns {void}\n   */\n  push(key: string, value: T): void {\n    if (this._map.has(key)) {\n      let list = this._map.get(key);\n      if (Array.isArray(list)) {\n        list.push(value);\n        this._map.set(key, list);\n      }\n    } else {\n      this._map.set(key, [value]);\n    }\n  }\n\n  /**\n   * Set an array of values for the key, overwriting any previous data.\n   * @param {string} key -\n   * @param {!Array.<T>} values -\n   * @returns {void}\n   */\n  set(key: string, values: T[]): void {\n    this._map.set(key, values);\n  }\n\n  /**\n   * Check for a key.\n   * @param {string} key -\n   * @return {boolean} true if the key exists.\n   */\n  has(key: string): boolean {\n    return this._map.has(key);\n  }\n\n  /**\n   * Get a list of values by key.\n   * @param {string} key -\n   * @return {Array.<T>} or null if no suZch key exists.\n   */\n  get(key: string): Array<T> {\n    let list = this._map.get(key);\n    // slice() clones the list so that it and the map can each be modified\n    // without affecting the other.\n    return list ? list.slice() : [];\n  }\n\n  /**\n   * Get a list of all values.\n   * @returns {!Array.<T>} -\n   */\n  getAll(): T[] {\n    let list: T[] = [];\n    for (var value of this._map.values()) {\n      list = list.concat(value);\n    }\n    return list;\n  }\n\n  /**\n   * Remove a specific value, if it exists.\n   * @param {string} key -\n   * @param {T} value -\n   * @returns {void}\n   */\n  remove(key: string, value: T): void {\n    if (!this._map.has(key)) return;\n    let list = this._map.get(key);\n    if (Array.isArray(list)) {\n      for (let i = 0; i < list.length; ++i) {\n        if (list[i] == value) {\n          list.splice(i, 1);\n          --i;\n        }\n      }\n    }\n  }\n\n  /**\n   * Get all keys from the multimap.\n   * @return {!Array.<string>}\n   */\n  // eslint-disable-next-line no-undef\n  keys(): Iterator<string> {\n    return this._map.keys();\n  }\n\n\n  /**\n   * Clear all keys and values from the multimap.\n   * @returns {void}\n   */\n  clear(): void {\n    this._map.clear();\n  }\n}\n\nexport default MultiMap;\n\n\n\n// WEBPACK FOOTER //\n// ./utils/multi-map.js","module.exports = {\n\t\"name\": \"playkit-js\",\n\t\"version\": \"0.1.0\",\n\t\"main\": \"dist/playkit.js\",\n\t\"scripts\": {\n\t\t\"clean\": \"rm -rf ./dist\",\n\t\t\"prebuild\": \"npm run clean\",\n\t\t\"build\": \"webpack\",\n\t\t\"dev\": \"webpack --progress --colors --watch\",\n\t\t\"test\": \"NODE_ENV=test karma start --color\",\n\t\t\"test:chrome\": \"NODE_ENV=test karma start --color --browsers Chrome\",\n\t\t\"test:chrome:dots\": \"NODE_ENV=test karma start --color --browsers Chrome --reporters dots\",\n\t\t\"test:firefox\": \"NODE_ENV=test karma start --color --browsers Firefox\",\n\t\t\"test:safari\": \"NODE_ENV=test karma start --color --browsers Safari\",\n\t\t\"test:watch\": \"NODE_ENV=test karma start --color --auto-watch\",\n\t\t\"start\": \"webpack-dev-server\",\n\t\t\"release\": \"NODE_ENV=production npm run build -- -p && git add --all dist && git commit -m'Update dist' && standard-version\",\n\t\t\"eslint\": \"eslint . --color\",\n\t\t\"flow\": \"flow check\",\n\t\t\"prepush\": \"npm run eslint && npm run test && npm run flow\"\n\t},\n\t\"devDependencies\": {\n\t\t\"babel-cli\": \"^6.18.0\",\n\t\t\"babel-core\": \"^6.18.2\",\n\t\t\"babel-eslint\": \"^7.1.1\",\n\t\t\"babel-loader\": \"^6.2.7\",\n\t\t\"babel-plugin-istanbul\": \"^4.0.0\",\n\t\t\"babel-plugin-transform-class-properties\": \"^6.22.0\",\n\t\t\"babel-plugin-transform-flow-strip-types\": \"^6.22.0\",\n\t\t\"babel-preset-es2015\": \"^6.18.0\",\n\t\t\"babel-register\": \"^6.23.0\",\n\t\t\"chai\": \"^3.5.0\",\n\t\t\"cross-env\": \"^3.1.4\",\n\t\t\"eslint\": \"^3.10.0\",\n\t\t\"eslint-loader\": \"^1.6.1\",\n\t\t\"eslint-plugin-flowtype\": \"^2.30.0\",\n\t\t\"eslint-plugin-import\": \"^2.2.0\",\n\t\t\"eslint-plugin-mocha-no-only\": \"^0.0.5\",\n\t\t\"flow-bin\": \"latest\",\n\t\t\"istanbul\": \"^0.4.5\",\n\t\t\"karma\": \"^1.5.0\",\n\t\t\"karma-chai\": \"^0.1.0\",\n\t\t\"karma-chrome-launcher\": \"^2.0.0\",\n\t\t\"karma-cli\": \"^1.0.1\",\n\t\t\"karma-coverage\": \"^1.1.1\",\n\t\t\"karma-firefox-launcher\": \"^1.0.1\",\n\t\t\"karma-ie-launcher\": \"^1.0.0\",\n\t\t\"karma-mocha\": \"^1.3.0\",\n\t\t\"karma-safari-launcher\": \"^1.0.0\",\n\t\t\"karma-sourcemap-loader\": \"^0.3.7\",\n\t\t\"karma-webpack\": \"^2.0.2\",\n\t\t\"mocha\": \"^3.2.0\",\n\t\t\"mocha-cli\": \"^1.0.1\",\n\t\t\"nyc\": \"^10.1.2\",\n\t\t\"sinon\": \"^2.0.0\",\n\t\t\"sinon-chai\": \"^2.8.0\",\n\t\t\"standard-version\": \"^4.0.0\",\n\t\t\"uglifyjs-webpack-plugin\": \"^0.4.3\",\n\t\t\"webpack\": \"latest\",\n\t\t\"webpack-dev-server\": \"latest\"\n\t},\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"https://github.com/kaltura/playkit-js\"\n\t},\n\t\"keywords\": [\n\t\t\"kaltura\",\n\t\t\"player\",\n\t\t\"html5 player\"\n\t],\n\t\"license\": \"AGPLV3\",\n\t\"bugs\": {\n\t\t\"url\": \"https://github.com/kaltura/playkit-js/issues\"\n\t},\n\t\"homepage\": \"https://github.com/kaltura/playkit-js\",\n\t\"dependencies\": {\n\t\t\"js-logger\": \"^1.3.0\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../package.json\n// module id = 18\n// module chunks = 0","//@flow\nimport FakeEventTarget from '../../event/fake-event-target'\nimport FakeEvent from '../../event/fake-event'\nimport EventManager from '../../event/event-manager'\nimport {HTML5_EVENTS as Html5Events, CUSTOM_EVENTS as CustomEvents} from '../../event/events'\nimport MediaSourceProvider from './media-source/media-source-provider'\nimport VideoTrack from '../../track/video-track'\nimport AudioTrack from '../../track/audio-track'\nimport TextTrack from '../../track/text-track'\n\nexport default class Html5 extends FakeEventTarget implements IEngine {\n  /**\n   * The video element.\n   * @type {HTMLVideoElement}\n   * @private\n   */\n  _el: HTMLVideoElement;\n  /**\n   * The event manager of the engine.\n   * @type {EventManager}\n   * @private\n   */\n  _eventManager: EventManager;\n  /**\n   * The selected media source adapter of the engine.\n   * @type {IMediaSourceAdapter}\n   * @private\n   */\n  _mediaSourceAdapter: ?IMediaSourceAdapter;\n\n  /**\n   * @type {string} - The engine name.\n   */\n  static EngineName: string = \"html5\";\n\n  /**\n   * Checks if the engine can play a given mime type.\n   * @param {string} mimeType - The mime type to check.\n   * @returns {boolean} - Whether the engine can play the mime type.\n   */\n  static canPlayType(mimeType) {\n    return MediaSourceProvider.canPlayType(mimeType);\n  }\n\n  /**\n   * @constructor\n   * @param {Source} source - The selected source object.\n   * @param {Object} config - The player configuration.\n   */\n  constructor(source: Source, config: Object) {\n    super();\n    this._createVideoElement();\n    this._eventManager = new EventManager();\n    this._loadMediaSourceAdapter(source, config);\n    this.attach();\n  }\n\n  /**\n   * Destroys the engine.\n   * @public\n   * @returns {void}\n   */\n  destroy(): void {\n    this.detach();\n    if (this._mediaSourceAdapter) {\n      this._mediaSourceAdapter.destroy();\n    }\n    if (this._el) {\n      this.pause();\n      this._el.removeAttribute('src');\n      if (this._el.parentNode) {\n        this._el.parentNode.removeChild(this._el);\n      }\n    }\n    this._eventManager.destroy();\n  }\n\n  /**\n   * Listen to the video element events and triggers them from the engine.\n   * @public\n   * @returns {void}\n   */\n  attach(): void {\n    for (let playerEvent in Html5Events) {\n      this._eventManager.listen(this._el, Html5Events[playerEvent], () => {\n        this.dispatchEvent(new FakeEvent(Html5Events[playerEvent]));\n      });\n    }\n    if (this._mediaSourceAdapter) { // listen and dispatch adaptive bitrate changed event\n      this._eventManager.listen(this._mediaSourceAdapter, CustomEvents.VIDEO_TRACK_CHANGED, (event: FakeEvent) => {\n        this.dispatchEvent(event);\n      });\n      this._eventManager.listen(this._mediaSourceAdapter, CustomEvents.AUDIO_TRACK_CHANGED, (event: FakeEvent) => {\n        return this.dispatchEvent(event);\n      });\n      this._eventManager.listen(this._mediaSourceAdapter, CustomEvents.TEXT_TRACK_CHANGED, (event: FakeEvent) => {\n        return this.dispatchEvent(event);\n      });\n    }\n  }\n\n  /**\n   * Remove the listeners of the video element events.\n   * @public\n   * @returns {void}\n   */\n  detach(): void {\n    for (let playerEvent in Html5Events) {\n      this._eventManager.unlisten(this._el, Html5Events[playerEvent]);\n    }\n    if (this._mediaSourceAdapter) { // unlisten to adaptive bitrate changed\n      this._eventManager.unlisten(this._mediaSourceAdapter, CustomEvents.VIDEO_TRACK_CHANGED);\n      this._eventManager.unlisten(this._mediaSourceAdapter, CustomEvents.AUDIO_TRACK_CHANGED);\n      this._eventManager.unlisten(this._mediaSourceAdapter, CustomEvents.TEXT_TRACK_CHANGED);\n    }\n  }\n\n  /**\n   * @returns {HTMLVideoElement} - The video element.\n   * @public\n   */\n  getVideoElement(): HTMLVideoElement {\n    return this._el;\n  }\n\n  /**\n   * Creates a video element dom object.\n   * @private\n   * @returns {void}\n   */\n  _createVideoElement(): void {\n    this._el = document.createElement(\"video\");\n    //Set attributes\n    this._el.style.width = \"640px\";\n    this._el.style.height = \"360px\";\n    this._el.style.backgroundColor = \"black\";\n    this._el.controls = true;\n    if (document && document.body) {\n      document.body.appendChild(this._el);\n    }\n  }\n\n  /**\n   * Loads the appropriate media source extension adapter.\n   * @param {Source} source - The selected source object.\n   * @param {Object} config - The media source extension configuration.\n   * @private\n   * @returns {void}\n   */\n  _loadMediaSourceAdapter(source: Source, config: Object): void {\n    this._mediaSourceAdapter = MediaSourceProvider.getMediaSourceAdapter(this.getVideoElement(), source, config);\n  }\n\n  /**\n   * Select a new video track.\n   * @param {VideoTrack} videoTrack - The video track object to set.\n   * @returns {void}\n   */\n  selectVideoTrack(videoTrack: VideoTrack): void {\n    if (this._mediaSourceAdapter) {\n      this._mediaSourceAdapter.selectVideoTrack(videoTrack);\n    }\n  }\n\n  /**\n   * Select a new audio track.\n   * @param {AudioTrack} audioTrack - The video track object to set.\n   * @returns {void}\n   */\n  selectAudioTrack(audioTrack: AudioTrack): void {\n    if (this._mediaSourceAdapter) {\n      this._mediaSourceAdapter.selectAudioTrack(audioTrack);\n    }\n  }\n\n  /**\n   * Select a new text track.\n   * @param {TextTrack} textTrack - The text track object to set.\n   * @returns {void}\n   */\n  selectTextTrack(textTrack: TextTrack): void {\n    if (this._mediaSourceAdapter) {\n      this._mediaSourceAdapter.selectTextTrack(textTrack);\n    }\n  }\n\n  /**\n   * Enables adaptive bitrate switching according to the media source extension logic.\n   * @function enableAdaptiveBitrate\n   * @returns {void}\n   * @public\n   */\n  enableAdaptiveBitrate(): void {\n    if (this._mediaSourceAdapter) {\n      this._mediaSourceAdapter.enableAdaptiveBitrate();\n    }\n  }\n\n  /**\n   * Set a source.\n   * @param {string} source - Source to set.\n   * @public\n   * @returns {void}\n   */\n  set src(source: string): void {\n    this._el.src = source;\n  }\n\n  /**\n   * Get the source url.\n   * @returns {string} - The source url.\n   * @public\n   */\n  get src(): string {\n    if (this._mediaSourceAdapter) {\n      return this._mediaSourceAdapter.src;\n    }\n    return \"\";\n  }\n\n  //playback interface\n  /**\n   * Start/resume playback.\n   * @public\n   * @returns {void}\n   */\n  play(): void {\n    return this._el.play();\n  }\n\n  /**\n   * Pause playback.\n   * @public\n   * @returns {void}\n   */\n  pause(): void {\n    return this._el.pause();\n  }\n\n  /**\n   * Load media.\n   * @public\n   * @returns {Promise<Object>} - The loaded data\n   */\n  load(): Promise<Object> {\n    return this._mediaSourceAdapter ? this._mediaSourceAdapter.load() : Promise.resolve({});\n  }\n\n  /**\n   * Get the current time in seconds.\n   * @returns {Number} - The current playback time.\n   * @public\n   */\n  get currentTime(): number {\n    return this._el.currentTime;\n  }\n\n  /**\n   * Set the current time in seconds.\n   * @param {Number} to - The number to set in seconds.\n   * @public\n   * @returns {void}\n   */\n  set currentTime(to: number): void {\n    this._el.currentTime = to;\n  }\n\n  /**\n   * Get the duration in seconds.\n   * @returns {Number} - The playback duration.\n   * @public\n   */\n  get duration(): number {\n    return this._el.duration;\n  }\n\n  /**\n   * Set playback volume.\n   * @param {Number} vol - The volume to set.\n   * @public\n   * @returns {void}\n   */\n  set volume(vol: number): void {\n    this._el.volume = vol;\n  }\n\n  /**\n   * Get playback volume.\n   * @returns {Number} - The volume value of the video element.\n   * @public\n   */\n  get volume(): number {\n    return this._el.volume;\n  }\n\n  ready() {\n  }\n\n  /**\n   * Get paused state.\n   * @returns {boolean} - The paused value of the video element.\n   * @public\n   */\n  get paused(): boolean {\n    return this._el.paused;\n  }\n\n  /**\n   * Get seeking state.\n   * @returns {boolean} - The seeking value of the video element.\n   * @public\n   */\n  get seeking(): boolean {\n    return this._el.seeking;\n  }\n\n  /**\n   * Get the first seekable range (part) of the video in seconds.\n   * @returns {TimeRanges} - First seekable range (part) of the video in seconds.\n   * @public\n   */\n  get seekable(): TimeRanges {\n    return this._el.seekable;\n  }\n\n  /**\n   * Get the first played range (part) of the video in seconds.\n   * @returns {TimeRanges} - First played range (part) of the video in seconds.\n   * @public\n   */\n  get played(): TimeRanges {\n    return this._el.played;\n  }\n\n  /**\n   * Get the first buffered range (part) of the video in seconds.\n   * @returns {TimeRanges} - First buffered range (part) of the video in seconds.\n   * @public\n   */\n  get buffered(): TimeRanges {\n    return this._el.buffered;\n  }\n\n  /**\n   * Set player muted state.\n   * @param {boolean} mute - The new mute value.\n   * @public\n   * @returns {void}\n   */\n  set muted(mute: boolean): void {\n    this._el.muted = mute;\n  }\n\n  /**\n   * Get player muted state.\n   * @returns {boolean} - The muted value of the video element.\n   * @public\n   */\n  get muted(): boolean {\n    return this._el.muted;\n  }\n\n  /**\n   * Get the default mute value.\n   * @returns {boolean} - The defaultMuted of the video element.\n   * @public\n   */\n  get defaultMuted(): boolean {\n    return this._el.defaultMuted;\n  }\n\n  /**\n   * Sets an image to be shown while the video is downloading, or until the user hits the play button.\n   * @param {string} poster - The image url to be shown.\n   * @returns {void}\n   * @public\n   */\n  set poster(poster: string): void {\n    this._el.poster = poster;\n  }\n\n  /**\n   * Gets an image to be shown while the video is downloading, or until the user hits the play button.\n   * @returns {poster} - The image url.\n   * @public\n   */\n  get poster(): string {\n    return this._el.poster;\n  }\n\n  /**\n   * Specifies if and how the author thinks that the video should be loaded when the page loads.\n   * @param {string} preload - The preload value.\n   * @public\n   * @returns {void}\n   */\n  set preload(preload: string): void {\n    this._el.preload = preload;\n  }\n\n  /**\n   * Gets the preload value of the video element.\n   * @returns {string} - The preload value.\n   * @public\n   */\n  get preload(): string {\n    return this._el.preload;\n  }\n\n  /**\n   * Set if the video will automatically start playing as soon as it can do so without stopping.\n   * @param {boolean} autoplay - The autoplay value.\n   * @public\n   * @returns {void}\n   */\n  set autoplay(autoplay: boolean): void {\n    this._el.autoplay = autoplay;\n  }\n\n  /**\n   * Gets the autoplay value of the video element.\n   * @returns {boolean} - The autoplay value.\n   * @public\n   */\n  get autoplay(): boolean {\n    return this._el.autoplay;\n  }\n\n  /**\n   * Set to specifies that the video will start over again, every time it is finished.\n   * @param {boolean} loop - the loop value.\n   * @public\n   * @returns {void}\n   */\n  set loop(loop: boolean) {\n    this._el.loop = loop;\n  }\n\n  /**\n   * Gets the loop value of the video element.\n   * @returns {boolean} - The loop value.\n   * @public\n   */\n  get loop(): boolean {\n    return this._el.loop;\n  }\n\n  /**\n   * Set to specifies that video controls should be displayed.\n   * @param {boolean} controls - the controls value.\n   * @public\n   * @returns {void}\n   */\n  set controls(controls: boolean): void {\n    this._el.controls = controls;\n  }\n\n  /**\n   * Gets the controls value of the video element.\n   * @returns {boolean} - The controls value.\n   * @public\n   */\n  get controls(): boolean {\n    return this._el.controls;\n  }\n\n  /**\n   * Sets the current playback speed of the audio/video.\n   * @param {Number} playbackRate - The playback speed value.\n   * @public\n   * @returns {void}\n   */\n  set playbackRate(playbackRate: number): void {\n    this._el.playbackRate = playbackRate;\n  }\n\n  /**\n   * Gets the current playback speed of the audio/video.\n   * @returns {Number} - The current playback speed value.\n   * @public\n   */\n  get playbackRate(): number {\n    return this._el.playbackRate;\n  }\n\n  /**\n   * Sets the default playback speed of the audio/video.\n   * @param {Number} defaultPlaybackRate - The default playback speed value.\n   * @public\n   * @returns {void}\n   */\n  set defaultPlaybackRate(defaultPlaybackRate: number) {\n    this._el.defaultPlaybackRate = defaultPlaybackRate;\n  }\n\n  /**\n   * Gets the default playback speed of the audio/video.\n   * @returns {Number} - The default playback speed value.\n   * @public\n   */\n  get defaultPlaybackRate(): number {\n    return this._el.defaultPlaybackRate;\n  }\n\n  /**\n   * The ended property returns whether the playback of the audio/video has ended.\n   * @returns {boolean} - The ended value.\n   * @public\n   */\n  get ended(): boolean {\n    return this._el.ended;\n  }\n\n  /**\n   * The error property returns a MediaError object.\n   * @returns {MediaError} - The MediaError object has a code property containing the error state of the audio/video.\n   * @public\n   */\n  get error(): ?MediaError {\n    return this._el.error;\n  }\n\n  /**\n   * @returns {Number} - The current network state (activity) of the audio/video.\n   * @public\n   */\n  get networkState(): number {\n    return this._el.networkState;\n  }\n\n  /**\n   * Indicates if the audio/video is ready to play or not.\n   * @returns {Number} - The current ready state of the audio/video.\n   * 0 = HAVE_NOTHING - no information whether or not the audio/video is ready.\n   * 1 = HAVE_METADATA - metadata for the audio/video is ready.\n   * 2 = HAVE_CURRENT_DATA - data for the current playback position is available, but not enough data to play next frame/millisecond.\n   * 3 = HAVE_FUTURE_DATA - data for the current and at least the next frame is available.\n   * 4 = HAVE_ENOUGH_DATA - enough data available to start playing.\n   */\n  get readyState(): number {\n    return this._el.readyState;\n  }\n\n  /**\n   * @returns {Number} - The height of the video player, in pixels.\n   * @public\n   */\n  get videoHeight(): number {\n    return this._el.videoHeight;\n  }\n\n  /**\n   * @returns {Number} - The width of the video player, in pixels.\n   * @public\n   */\n  get videoWidth(): number {\n    return this._el.videoWidth;\n  }\n\n  /**\n   * Test video element to check if html5 engine is supported.\n   */\n  static TEST_VID: HTMLVideoElement;\n\n  /**\n   * Checks if the html5 engine is supported.\n   * @returns {boolean} - The isSupported result.\n   * @static\n   * @public\n   */\n  static isSupported() {\n    try {\n      Html5.TEST_VID = document.createElement('video');\n      Html5.TEST_VID.volume = 0.5;\n    } catch (e) {\n      return false;\n    }\n    return !!Html5.TEST_VID.canPlayType;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./engines/html5/html5.js","//@flow\nimport EventManager from '../../../../event/event-manager'\nimport {HTML5_EVENTS as Html5Events} from '../../../../event/events'\nimport Track from '../../../../track/track'\nimport VideoTrack from '../../../../track/video-track'\nimport AudioTrack from '../../../../track/audio-track'\nimport TextTrack from '../../../../track/text-track'\nimport BaseMediaSourceAdapter from '../base-media-source-adapter'\n\n/**\n * An illustration of media source extension for progressive download\n * @classdesc\n * @implements {IMediaSourceAdapter}\n */\nexport default class NativeAdapter extends BaseMediaSourceAdapter {\n  /**\n   * The name of the Adapter\n   * @member {string} _name\n   * @static\n   * @public\n   */\n  static id: string = 'NativeAdapter';\n\n  /**\n   * The adapter logger\n   * @member {any} _logger\n   * @private\n   * @static\n   */\n  static _logger = BaseMediaSourceAdapter.getLogger(NativeAdapter.id);\n  /**\n   * The event manager of the class.\n   * @member {EventManager} - _eventManager\n   * @type {EventManager}\n   * @private\n   */\n  _eventManager: EventManager;\n  /**\n   * The load promise\n   * @member {Promise<Object>} - _loadPromise\n   * @type {Promise<Object>}\n   * @private\n   */\n  _loadPromise: ?Promise<Object>;\n\n  /**\n   * Checks if NativeAdapter can play a given mime type.\n   * @function canPlayType\n   * @param {string} mimeType - The mime type to check\n   * @returns {boolean} - Whether the native adapter can play a specific mime type\n   * @static\n   */\n  static canPlayType(mimeType: string): boolean {\n    let canPlayType = (typeof mimeType === 'string') ? !!(document.createElement(\"video\").canPlayType(mimeType.toLowerCase())) : false;\n    NativeAdapter._logger.debug('canPlayType result for mimeType:' + mimeType + ' is ' + canPlayType.toString());\n    return canPlayType;\n  }\n\n  /**\n   * @constructor\n   * @param {HTMLVideoElement} videoElement - The video element which bind to NativeAdapter\n   * @param {Source} source - The source object\n   * @param {Object} config - The media source adapter configuration\n   */\n  constructor(videoElement: HTMLVideoElement, source: Source, config: Object) {\n    NativeAdapter._logger.debug('Creating adapter');\n    super(videoElement, source, config);\n    this._eventManager = new EventManager();\n  }\n\n  /**\n   * Load the video source\n   * @function load\n   * @returns {Promise<Object>} - The loaded data\n   */\n  load(): Promise<Object> {\n    if (!this._loadPromise) {\n      this._loadPromise = new Promise((resolve, reject) => {\n        // We're using 'loadeddata' event for native hls (on 'loadedmetadata' native hls doesn't have tracks yet).\n        this._eventManager.listen(this._videoElement, Html5Events.LOADED_DATA, () => {\n          this._eventManager.unlisten(this._videoElement, Html5Events.LOADED_DATA);\n          let data = {tracks: this._getParsedTracks()};\n          NativeAdapter._logger.debug('The source has been loaded successfully');\n          resolve(data);\n        });\n        this._eventManager.listen(this._videoElement, Html5Events.ERROR, (error) => {\n          this._eventManager.unlisten(this._videoElement, Html5Events.ERROR);\n          NativeAdapter._logger.error(error);\n          reject(error);\n        });\n        if (this._sourceObj && this._sourceObj.url) {\n          this._videoElement.src = this._sourceObj.url;\n        }\n      });\n    }\n    return this._loadPromise;\n  }\n\n  /**\n   * Destroys the native adapter.\n   * @function destroy\n   * @returns {void}\n   */\n  destroy(): void {\n    NativeAdapter._logger.debug('destroy');\n    super.destroy();\n    this._eventManager.destroy();\n    this._loadPromise = null;\n  }\n\n  /**\n   * Get the parsed tracks\n   * @function _getParsedTracks\n   * @returns {Array<Track>} - The parsed tracks\n   * @private\n   */\n  _getParsedTracks(): Array<Track> {\n    let videoTracks = this._getParsedVideoTracks();\n    let audioTracks = this._getParsedAudioTracks();\n    let textTracks = this._getParsedTextTracks();\n    return videoTracks.concat(audioTracks).concat(textTracks);\n  }\n\n  /**\n   * Get the parsed video tracks\n   * @function _getParsedVideoTracks\n   * @returns {Array<Track>} - The parsed video tracks\n   * @private\n   */\n  _getParsedVideoTracks(): Array<Track> {\n    let videoTracks = this._videoElement.videoTracks;\n    let parsedTracks = [];\n    if (videoTracks) {\n      for (let i = 0; i < videoTracks.length; i++) {\n        let settings = {\n          id: videoTracks[i].id,\n          active: videoTracks[i].selected,\n          label: videoTracks[i].label,\n          language: videoTracks[i].language,\n          index: i\n        };\n        parsedTracks.push(new VideoTrack(settings));\n      }\n    }\n    return parsedTracks;\n  }\n\n  /**\n   * Get the parsed audio tracks\n   * @function _getParsedAudioTracks\n   * @returns {Array<Track>} - The parsed audio tracks\n   * @private\n   */\n  _getParsedAudioTracks(): Array<Track> {\n    let audioTracks = this._videoElement.audioTracks;\n    let parsedTracks = [];\n    if (audioTracks) {\n      for (let i = 0; i < audioTracks.length; i++) {\n        let settings = {\n          id: audioTracks[i].id,\n          active: audioTracks[i].enabled,\n          label: audioTracks[i].label,\n          language: audioTracks[i].language,\n          index: i\n        };\n        parsedTracks.push(new AudioTrack(settings));\n      }\n    }\n    return parsedTracks;\n  }\n\n  /**\n   * Get the parsed text tracks\n   * @function _getParsedTextTracks\n   * @returns {Array<Track>} - The parsed text tracks\n   * @private\n   */\n  _getParsedTextTracks(): Array<Track> {\n    let textTracks = this._videoElement.textTracks;\n    let parsedTracks = [];\n    if (textTracks) {\n      for (let i = 0; i < textTracks.length; i++) {\n        let settings = {\n          kind: textTracks[i].kind,\n          active: textTracks[i].mode === 'showing',\n          label: textTracks[i].label,\n          language: textTracks[i].language,\n          index: i\n        };\n        parsedTracks.push(new TextTrack(settings));\n      }\n    }\n    return parsedTracks;\n  }\n\n  /**\n   * Select a video track\n   * @function selectVideoTrack\n   * @param {VideoTrack} videoTrack - the track to select\n   * @returns {void}\n   * @public\n   */\n  selectVideoTrack(videoTrack: VideoTrack): void {\n    let videoTracks = this._videoElement.videoTracks;\n    if ((videoTrack instanceof VideoTrack) && videoTracks && videoTracks[videoTrack.index]) {\n      this._disableVideoTracks();\n      videoTracks[videoTrack.index].selected = true;\n      this._onTrackChanged(videoTrack);\n    }\n  }\n\n  /**\n   * Select an audio track\n   * @function selectAudioTrack\n   * @param {AudioTrack} audioTrack - the  audio track to select\n   * @returns {void}\n   * @public\n   */\n  selectAudioTrack(audioTrack: AudioTrack): void {\n    let audioTracks = this._videoElement.audioTracks;\n    if ((audioTrack instanceof AudioTrack) && audioTracks && audioTracks[audioTrack.index]) {\n      this._disableAudioTracks();\n      audioTracks[audioTrack.index].enabled = true;\n      this._onTrackChanged(audioTrack);\n    }\n  }\n\n  /**\n   * Select a text track\n   * @function selectTextTrack\n   * @param {TextTrack} textTrack - the track to select\n   * @returns {void}\n   * @public\n   */\n  selectTextTrack(textTrack: TextTrack): void {\n    let textTracks = this._videoElement.textTracks;\n    if ((textTrack instanceof TextTrack) && (textTrack.kind === 'subtitles' || textTrack.kind === 'captions') && textTracks && textTracks[textTrack.index]) {\n      this._disableTextTracks();\n      textTracks[textTrack.index].mode = 'showing';\n      this._onTrackChanged(textTrack);\n    }\n  }\n\n  /**\n   * Disables all the existing video tracks.\n   * @private\n   * @returns {void}\n   */\n  _disableVideoTracks(): void {\n    let videoTracks = this._videoElement.videoTracks;\n    if (videoTracks) {\n      for (let i = 0; i < videoTracks.length; i++) {\n        videoTracks[i].selected = false;\n      }\n    }\n  }\n\n  /**\n   * Disables all the existing audio tracks.\n   * @private\n   * @returns {void}\n   */\n  _disableAudioTracks(): void {\n    let audioTracks = this._videoElement.audioTracks;\n    if (audioTracks) {\n      for (let i = 0; i < audioTracks.length; i++) {\n        audioTracks[i].enabled = false;\n      }\n    }\n  }\n\n  /**\n   * Disables all the existing text tracks.\n   * @private\n   * @returns {void}\n   */\n  _disableTextTracks(): void {\n    let textTracks = this._videoElement.textTracks;\n    if (textTracks) {\n      for (let i = 0; i < textTracks.length; i++) {\n        textTracks[i].mode = 'disabled';\n      }\n    }\n  }\n\n  /**\n   * Getter for the src that the adapter plays on the video element.\n   * @public\n   * @returns {string} - The src url.\n   */\n  get src(): string {\n    return this._videoElement.src;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./engines/html5/media-source/adapters/native-adapter.js","//@flow\nimport Player from './player'\nimport LoggerFactory from './utils/logger'\nimport * as packageData from '../package.json'\nimport BaseMediaSourceAdapter from './engines/html5/media-source/base-media-source-adapter'\nimport {registerMediaSourceAdapter} from './engines/html5/media-source/media-source-provider'\nimport {registerPlugin} from './plugin/plugin-manager'\nimport BasePlugin from './plugin/base-plugin'\nimport Track from './track/track'\nimport VideoTrack from './track/video-track'\nimport AudioTrack from './track/audio-track'\nimport TextTrack from './track/text-track'\n\n// Playkit version\nlet VERSION = packageData.version;\n\nLoggerFactory.getLogger().log(\"%c Playkit \" + VERSION, \"color: yellow; font-size: large\");\nLoggerFactory.getLogger().log(\"%c For more details see https://github.com/kaltura/playkit-js\", \"color: yellow;\");\n\n/**\n * @param {Object} config - The configuration of the player\n * @returns {Player} - The player instance\n */\nexport function playkit(config: Object = {}) {\n  return new Player(config);\n}\n\n// Export the media source adapters necessary utils\nexport {registerMediaSourceAdapter, BaseMediaSourceAdapter};\n\n// Export the plugin framework\nexport {registerPlugin, BasePlugin};\n\n// Export the tracks classes\nexport {Track, VideoTrack, AudioTrack, TextTrack};\n\n//export version\nexport {VERSION};\nexport default playkit;\n\n\n\n// WEBPACK FOOTER //\n// ./playkit.js","//@flow\nimport Player from '../player'\nimport EventManager from '../event/event-manager'\nimport State from './state'\nimport PlayerStates from './state-types'\nimport {HTML5_EVENTS as Html5Events, CUSTOM_EVENTS as CustomEvents} from '../event/events'\nimport FakeEvent from '../event/fake-event'\nimport LoggerFactory from '../utils/logger'\n\n/**\n * Define a transition object.\n */\ntype Transition = {\n  [state: string]: {\n    [event: string]: Function\n  }\n}\n\n/**\n * This class responsible to manage all the state machine of the player.\n * @classdesc\n */\nexport default class StateManager {\n  /**\n   * The logger of the class.\n   * @member\n   * @type {any}\n   * @private\n   */\n  _logger: any;\n  /**\n   * Reference to the actual player.\n   * @member\n   * @type {Player}\n   * @private\n   */\n  _player: Player;\n  /**\n   * The event manager of the class.\n   * @member\n   * @type {EventManager}\n   * @private\n   */\n  _eventManager: EventManager;\n  /**\n   * Holds the current state of the player.\n   * @member\n   * @type {State}\n   * @private\n   */\n  _curState: State;\n  /**\n   * Holds the previous state of the player.\n   * @member\n   * @type {State | null}\n   * @private\n   */\n  _prevState: State | null;\n  /**\n   * Holds the state history of the player.\n   * @member\n   * @type {Array<State>}\n   * @private\n   */\n  _history: Array<State>;\n  /**\n   * The possible transitions from one state to another.\n   * @type {Array<Transition>}\n   * @private\n   */\n  _transitions: Transition = {\n    [PlayerStates.IDLE]: {\n      [Html5Events.LOAD_START]: () => {\n        this._updateState(PlayerStates.LOADING);\n        this._dispatchEvent();\n      },\n      [Html5Events.PLAY]: () => {\n        this._updateState(PlayerStates.BUFFERING);\n        this._dispatchEvent();\n      }\n    },\n    [PlayerStates.LOADING]: {\n      [Html5Events.LOADED_METADATA]: () => {\n        if (this._player.config.autoPlay) {\n          this._updateState(PlayerStates.PLAYING);\n        } else {\n          this._updateState(PlayerStates.PAUSED);\n        }\n        this._dispatchEvent();\n      },\n      [Html5Events.ERROR]: () => {\n        this._updateState(PlayerStates.IDLE);\n        this._dispatchEvent();\n      }\n    },\n    [PlayerStates.PAUSED]: {\n      [Html5Events.PLAY]: () => {\n        this._updateState(PlayerStates.PLAYING);\n        this._dispatchEvent();\n      },\n      [Html5Events.PLAYING]: () => {\n        this._updateState(PlayerStates.PLAYING);\n        this._dispatchEvent();\n      },\n      [Html5Events.ENDED]: () => {\n        this._updateState(PlayerStates.IDLE);\n        this._dispatchEvent();\n      }\n    },\n    [PlayerStates.PLAYING]: {\n      [Html5Events.PAUSE]: () => {\n        this._updateState(PlayerStates.PAUSED);\n        this._dispatchEvent();\n      },\n      [Html5Events.WAITING]: () => {\n        this._updateState(PlayerStates.BUFFERING);\n        this._dispatchEvent();\n      },\n      [Html5Events.ENDED]: () => {\n        this._updateState(PlayerStates.IDLE);\n        this._dispatchEvent();\n      },\n      [Html5Events.ERROR]: () => {\n        this._updateState(PlayerStates.IDLE);\n        this._dispatchEvent();\n      }\n    },\n    [PlayerStates.BUFFERING]: {\n      [Html5Events.PLAYING]: () => {\n        this._updateState(PlayerStates.PLAYING);\n        this._dispatchEvent();\n      },\n      [Html5Events.PAUSE]: () => {\n        this._updateState(PlayerStates.PAUSED);\n        this._dispatchEvent();\n      }\n    }\n  };\n\n  /**\n   * @constructor\n   * @param {Player} player - Reference to the player.\n   */\n  constructor(player: Player) {\n    this._player = player;\n    this._logger = LoggerFactory.getLogger(\"StateManager\");\n    this._eventManager = new EventManager();\n    this._history = [];\n    this._prevState = null;\n    this._curState = new State(PlayerStates.IDLE);\n    this._attachListeners();\n  }\n\n  /**\n   * Register to all necessary events which impacts on the player state.\n   * @private\n   * @returns {void}\n   */\n  _attachListeners(): void {\n    this._eventManager.listen(this._player, Html5Events.ERROR, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, Html5Events.ENDED, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, Html5Events.PLAY, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, Html5Events.LOAD_START, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, Html5Events.PLAYING, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, Html5Events.LOADED_METADATA, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, Html5Events.PAUSE, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, Html5Events.WAITING, this._doTransition.bind(this));\n  }\n\n  /**\n   * Performs a state transition depends on the event which occurs in the player system.\n   * @param {FakeEvent} event - The event occurs in the player system.\n   * @private\n   * @returns {void}\n   */\n  _doTransition(event: FakeEvent): void {\n    this._logger.debug('Do transition request', event);\n    let transition = this._transitions[this._curState.type];\n    if (typeof transition[event.type] === 'function') {\n      transition[event.type]();\n    }\n  }\n\n  /**\n   * Updates the player's state.\n   * @param {string} type - The type of the new state.\n   * @private\n   * @returns {void}\n   */\n  _updateState(type: string): void {\n    if (this._curState.type !== type) {\n      this._curState.duration = Date.now() / 1000;\n      this._history.push(this._curState);\n      this._prevState = this._curState;\n      this._curState = new State(type);\n      this._logger.debug(`Switch player state: from ${this._prevState.type} to ${this._curState.type}`)\n    }\n  }\n\n  /**\n   * Fires the playerStateChanged event after state has been changed.\n   * @private\n   * @returns {void}\n   */\n  _dispatchEvent(): void {\n    let event = new FakeEvent(CustomEvents.PLAYER_STATE_CHANGED, {\n      'oldState': this._prevState,\n      'newState': this._curState\n    });\n    this._player.dispatchEvent(event);\n  }\n\n  /**\n   * Destroys the state manager.\n   * @public\n   * @returns {void}\n   */\n  destroy(): void {\n    this._history = [];\n    this._eventManager.destroy();\n  }\n\n  /**\n   * Getter to the current state of the player.\n   * @public\n   * @returns {State} - The current state object\n   */\n  get currentState(): State {\n    return this._curState;\n  }\n\n  /**\n   * Getter to the previous state of the player.\n   * @public\n   * @returns {State|null} - The previous state object, or null if such doesn't exists\n   */\n  get previousState(): State | null {\n    return this._prevState;\n  }\n\n  /**\n   * Getter to the state history of the player.\n   * @public\n   * @returns {Array.<State>} - The full states history objects\n   */\n  get history(): Array<State> {\n    return this._history;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./state/state-manager.js","//@flow\n\n/**\n * This class describes a player state.\n * @classdesc\n */\nexport default class State {\n  /**\n   * The type of the state.\n   * Can be one of those describes in states.js\n   * @member\n   * @type {string}\n   * @public\n   */\n  type: string;\n  /**\n   * The duration that the player was in this state.\n   * @member\n   * @type {number}\n   * @private\n   */\n  _duration: number;\n  /**\n   * The timestamp that this state started.\n   * @member\n   * @type {number}\n   * @private\n   */\n  _timestamp: number;\n\n  /**\n   * @constructor\n   * @param {string} type - The type of the state.\n   */\n  constructor(type: string) {\n    this.type = type;\n    this._duration = 0;\n    this._timestamp = Date.now() / 1000;\n  }\n\n  /**\n   * Getter for the duration of the state.\n   * @returns {number} - The duration of the state\n   */\n  get duration(): number {\n    return this._duration;\n  }\n\n  /**\n   * Setter for the duration of the state.\n   * @param {number} endTime - The timestamp of the next state.\n   */\n  set duration(endTime: number): void {\n    this._duration = endTime - this._timestamp;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./state/state.js","//@flow\nconst TRACK_TYPES: {[track: string]: string} = {\n  VIDEO: \"video\",\n  AUDIO: \"audio\",\n  TEXT: \"text\"\n};\n\nexport default TRACK_TYPES;\n\n\n\n// WEBPACK FOOTER //\n// ./track/track-types.js","/*!\r\n * js-logger - http://github.com/jonnyreeves/js-logger\r\n * Jonny Reeves, http://jonnyreeves.co.uk/\r\n * js-logger may be freely distributed under the MIT license.\r\n */\r\n(function (global) {\r\n\t\"use strict\";\r\n\r\n\t// Top level module for the global, static logger instance.\r\n\tvar Logger = { };\r\n\r\n\t// For those that are at home that are keeping score.\r\n\tLogger.VERSION = \"1.3.0\";\r\n\r\n\t// Function which handles all incoming log messages.\r\n\tvar logHandler;\r\n\r\n\t// Map of ContextualLogger instances by name; used by Logger.get() to return the same named instance.\r\n\tvar contextualLoggersByNameMap = {};\r\n\r\n\t// Polyfill for ES5's Function.bind.\r\n\tvar bind = function(scope, func) {\r\n\t\treturn function() {\r\n\t\t\treturn func.apply(scope, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\t// Super exciting object merger-matron 9000 adding another 100 bytes to your download.\r\n\tvar merge = function () {\r\n\t\tvar args = arguments, target = args[0], key, i;\r\n\t\tfor (i = 1; i < args.length; i++) {\r\n\t\t\tfor (key in args[i]) {\r\n\t\t\t\tif (!(key in target) && args[i].hasOwnProperty(key)) {\r\n\t\t\t\t\ttarget[key] = args[i][key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\t// Helper to define a logging level object; helps with optimisation.\r\n\tvar defineLogLevel = function(value, name) {\r\n\t\treturn { value: value, name: name };\r\n\t};\r\n\r\n\t// Predefined logging levels.\r\n\tLogger.DEBUG = defineLogLevel(1, 'DEBUG');\r\n\tLogger.INFO = defineLogLevel(2, 'INFO');\r\n\tLogger.TIME = defineLogLevel(3, 'TIME');\r\n\tLogger.WARN = defineLogLevel(4, 'WARN');\r\n\tLogger.ERROR = defineLogLevel(8, 'ERROR');\r\n\tLogger.OFF = defineLogLevel(99, 'OFF');\r\n\r\n\t// Inner class which performs the bulk of the work; ContextualLogger instances can be configured independently\r\n\t// of each other.\r\n\tvar ContextualLogger = function(defaultContext) {\r\n\t\tthis.context = defaultContext;\r\n\t\tthis.setLevel(defaultContext.filterLevel);\r\n\t\tthis.log = this.info;  // Convenience alias.\r\n\t};\r\n\r\n\tContextualLogger.prototype = {\r\n\t\t// Changes the current logging level for the logging instance.\r\n\t\tsetLevel: function (newLevel) {\r\n\t\t\t// Ensure the supplied Level object looks valid.\r\n\t\t\tif (newLevel && \"value\" in newLevel) {\r\n\t\t\t\tthis.context.filterLevel = newLevel;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Is the logger configured to output messages at the supplied level?\r\n\t\tenabledFor: function (lvl) {\r\n\t\t\tvar filterLevel = this.context.filterLevel;\r\n\t\t\treturn lvl.value >= filterLevel.value;\r\n\t\t},\r\n\r\n\t\tdebug: function () {\r\n\t\t\tthis.invoke(Logger.DEBUG, arguments);\r\n\t\t},\r\n\r\n\t\tinfo: function () {\r\n\t\t\tthis.invoke(Logger.INFO, arguments);\r\n\t\t},\r\n\r\n\t\twarn: function () {\r\n\t\t\tthis.invoke(Logger.WARN, arguments);\r\n\t\t},\r\n\r\n\t\terror: function () {\r\n\t\t\tthis.invoke(Logger.ERROR, arguments);\r\n\t\t},\r\n\r\n\t\ttime: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'start' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttimeEnd: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'end' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Invokes the logger callback if it's not being filtered.\r\n\t\tinvoke: function (level, msgArgs) {\r\n\t\t\tif (logHandler && this.enabledFor(level)) {\r\n\t\t\t\tlogHandler(msgArgs, merge({ level: level }, this.context));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Protected instance which all calls to the to level `Logger` module will be routed through.\r\n\tvar globalLogger = new ContextualLogger({ filterLevel: Logger.OFF });\r\n\r\n\t// Configure the global Logger instance.\r\n\t(function() {\r\n\t\t// Shortcut for optimisers.\r\n\t\tvar L = Logger;\r\n\r\n\t\tL.enabledFor = bind(globalLogger, globalLogger.enabledFor);\r\n\t\tL.debug = bind(globalLogger, globalLogger.debug);\r\n\t\tL.time = bind(globalLogger, globalLogger.time);\r\n\t\tL.timeEnd = bind(globalLogger, globalLogger.timeEnd);\r\n\t\tL.info = bind(globalLogger, globalLogger.info);\r\n\t\tL.warn = bind(globalLogger, globalLogger.warn);\r\n\t\tL.error = bind(globalLogger, globalLogger.error);\r\n\r\n\t\t// Don't forget the convenience alias!\r\n\t\tL.log = L.info;\r\n\t}());\r\n\r\n\t// Set the global logging handler.  The supplied function should expect two arguments, the first being an arguments\r\n\t// object with the supplied log messages and the second being a context object which contains a hash of stateful\r\n\t// parameters which the logging function can consume.\r\n\tLogger.setHandler = function (func) {\r\n\t\tlogHandler = func;\r\n\t};\r\n\r\n\t// Sets the global logging filter level which applies to *all* previously registered, and future Logger instances.\r\n\t// (note that named loggers (retrieved via `Logger.get`) can be configured independently if required).\r\n\tLogger.setLevel = function(level) {\r\n\t\t// Set the globalLogger's level.\r\n\t\tglobalLogger.setLevel(level);\r\n\r\n\t\t// Apply this level to all registered contextual loggers.\r\n\t\tfor (var key in contextualLoggersByNameMap) {\r\n\t\t\tif (contextualLoggersByNameMap.hasOwnProperty(key)) {\r\n\t\t\t\tcontextualLoggersByNameMap[key].setLevel(level);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Retrieve a ContextualLogger instance.  Note that named loggers automatically inherit the global logger's level,\r\n\t// default context and log handler.\r\n\tLogger.get = function (name) {\r\n\t\t// All logger instances are cached so they can be configured ahead of use.\r\n\t\treturn contextualLoggersByNameMap[name] ||\r\n\t\t\t(contextualLoggersByNameMap[name] = new ContextualLogger(merge({ name: name }, globalLogger.context)));\r\n\t};\r\n\r\n\t// CreateDefaultHandler returns a handler function which can be passed to `Logger.setHandler()` which will\r\n\t// write to the window's console object (if present); the optional options object can be used to customise the\r\n\t// formatter used to format each log message.\r\n\tLogger.createDefaultHandler = function (options) {\r\n\t\toptions = options || {};\r\n\r\n\t\toptions.formatter = options.formatter || function defaultMessageFormatter(messages, context) {\r\n\t\t\t// Prepend the logger's name to the log message for easy identification.\r\n\t\t\tif (context.name) {\r\n\t\t\t\tmessages.unshift(\"[\" + context.name + \"]\");\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Map of timestamps by timer labels used to track `#time` and `#timeEnd()` invocations in environments\r\n\t\t// that don't offer a native console method.\r\n\t\tvar timerStartTimeByLabelMap = {};\r\n\r\n\t\t// Support for IE8+ (and other, slightly more sane environments)\r\n\t\tvar invokeConsoleMethod = function (hdlr, messages) {\r\n\t\t\tFunction.prototype.apply.call(hdlr, console, messages);\r\n\t\t};\r\n\r\n\t\t// Check for the presence of a logger.\r\n\t\tif (typeof console === \"undefined\") {\r\n\t\t\treturn function () { /* no console */ };\r\n\t\t}\r\n\r\n\t\treturn function(messages, context) {\r\n\t\t\t// Convert arguments object to Array.\r\n\t\t\tmessages = Array.prototype.slice.call(messages);\r\n\r\n\t\t\tvar hdlr = console.log;\r\n\t\t\tvar timerLabel;\r\n\r\n\t\t\tif (context.level === Logger.TIME) {\r\n\t\t\t\ttimerLabel = (context.name ? '[' + context.name + '] ' : '') + messages[0];\r\n\r\n\t\t\t\tif (messages[1] === 'start') {\r\n\t\t\t\t\tif (console.time) {\r\n\t\t\t\t\t\tconsole.time(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttimerStartTimeByLabelMap[timerLabel] = new Date().getTime();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (console.timeEnd) {\r\n\t\t\t\t\t\tconsole.timeEnd(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinvokeConsoleMethod(hdlr, [ timerLabel + ': ' +\r\n\t\t\t\t\t\t\t(new Date().getTime() - timerStartTimeByLabelMap[timerLabel]) + 'ms' ]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Delegate through to custom warn/error loggers if present on the console.\r\n\t\t\t\tif (context.level === Logger.WARN && console.warn) {\r\n\t\t\t\t\thdlr = console.warn;\r\n\t\t\t\t} else if (context.level === Logger.ERROR && console.error) {\r\n\t\t\t\t\thdlr = console.error;\r\n\t\t\t\t} else if (context.level === Logger.INFO && console.info) {\r\n\t\t\t\t\thdlr = console.info;\r\n\t\t\t\t}\r\n\r\n\t\t\t\toptions.formatter(messages, context);\r\n\t\t\t\tinvokeConsoleMethod(hdlr, messages);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t// Configure and example a Default implementation which writes to the `window.console` (if present).  The\r\n\t// `options` hash can be used to configure the default logLevel and provide a custom message formatter.\r\n\tLogger.useDefaults = function(options) {\r\n\t\tLogger.setLevel(options && options.defaultLevel || Logger.DEBUG);\r\n\t\tLogger.setHandler(Logger.createDefaultHandler(options));\r\n\t};\r\n\r\n\t// Export to popular environments boilerplate.\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine(Logger);\r\n\t}\r\n\telse if (typeof module !== 'undefined' && module.exports) {\r\n\t\tmodule.exports = Logger;\r\n\t}\r\n\telse {\r\n\t\tLogger._prevLogger = global.Logger;\r\n\r\n\t\tLogger.noConflict = function () {\r\n\t\t\tglobal.Logger = Logger._prevLogger;\r\n\t\t\treturn Logger;\r\n\t\t};\r\n\r\n\t\tglobal.Logger = Logger;\r\n\t}\r\n}(this));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/js-logger/src/logger.js\n// module id = 25\n// module chunks = 0"],"sourceRoot":""}