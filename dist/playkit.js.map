{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///playkit.js","webpack:///webpack/bootstrap ac649955fb15e33dceff","webpack:///./utils/logger.js","webpack:///./event/fake-event.js","webpack:///./player.js","webpack:///./event/event-manager.js","webpack:///./event/events.js","webpack:///./engines/html5/media-source/media-source-provider.js","webpack:///./plugin/base-plugin.js","webpack:///./plugin/plugin-manager.js","webpack:///./event/fake-event-target.js","webpack:///./state/state-types.js","webpack:///./utils/multi-map.js","webpack:///./utils/player-error.js","webpack:///./utils/util.js","webpack:///../package.json","webpack:///./engines/html5/html5.js","webpack:///./engines/html5/media-source/adapters/native-adapter.js","webpack:///./playkit.js","webpack:///./state/state-manager.js","webpack:///./state/state.js","webpack:///./utils/string-util.js","webpack:///../~/js-logger/src/logger.js"],"names":["root","factory","exports","module","define","amd","Playkit","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","_classCallCheck","instance","Constructor","TypeError","LOG_LEVEL","_createClass","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","_jsLogger","JsLogger","obj","newObj","DEBUG","INFO","TIME","WARN","ERROR","OFF","LoggerFactory","options","useDefaults","lf","defaultLevel","FakeEvent","type","payload","bubbles","cancelable","defaultPrevented","timeStamp","window","performance","now","Date","isTrusted","currentTarget","stopped","_interopRequireDefault","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_eventManager","_eventManager2","_fakeEventTarget","_fakeEventTarget2","_fakeEvent","_events","_events2","_stateTypes","_stateTypes2","_util","_stringUtil","_logger","_logger2","_html","_html2","_pluginManager","_pluginManager2","_stateManager","_stateManager2","logger","getLogger","Player","_FakeEventTarget","config","_this","getPrototypeOf","_engineEventHandlers","Map","playerEvent","set","capitlize","event","dispatchEvent","_config","defaultConfig_","loadPlugins","selectEngine","attachMedia","info","_engine","destroy","plugins","load","sources","canPlayType","mimetype","loadEngine","source","preload","handler","listen","play","pause","to","isNumber","boundedTo","duration","currentTime","vol","isFloat","boundedVol","volume","paused","seeking","mute","muted","src","_multiMap","_multiMap2","EventManager","_bindingMap","removeAll","Promise","resolve","listener","binding","Binding_","push","list","unlisten","remove","listeners","getAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","clear","addEventListener","removeEventListener","PLAYER_EVENTS","PLAY","PAUSE","PLAYING","PROGRESS","ABORT","SUSPEND","EMPTIED","ENDED","WAITING","STALLED","LOAD_START","LOADED_METADATA","LOADED_DATA","TIME_UPDATE","RATE_CHANGE","VOLUME_CHANGE","TEXT_TRACK_CHANGE","PLAYER_STATE_CHANGED","SEEKED","SEEKING","registerMediaSourceAdapter","_nativeAdapter","_nativeAdapter2","MediaSourceProvider","mediaSourceAdapter","_mediaSourceAdapters","includes","debug","index","indexOf","splice","mimeType","mediaSourceAdapters","_selectedAdapter","engine","createAdapter","engines","register","_player","_playerError","_playerError2","BasePlugin","player","eventManager","merge","defaultConfig","arguments","TYPE","NOT_IMPLEMENTED_METHOD","getError","attr","update","registerPlugin","_basePlugin","_basePlugin2","PluginManager","_plugins","_registry","has","NOT_REGISTERED_PLUGIN","pluginClass","isValid","createPlugin","forEach","_destroy","bind","plugin","delete","NOT_VALID_HANDLER","FakeEventTarget","_listeners","dispatchTarget","handleEvent","exception","PLAYER_STATE_TYPES","IDLE","LOADING","PAUSED","BUFFERING","MultiMap","_map","Array","isArray","values","slice","concat","keys","PlayerError","error","param","message","method","Number","isInt","obj1","obj2","assign","version","main","scripts","clean","prebuild","build","dev","test","test:watch","start","release","eslint","flow","prepush","devDependencies","babel-cli","babel-core","babel-eslint","babel-loader","babel-plugin-istanbul","babel-plugin-transform-class-properties","babel-plugin-transform-flow-strip-types","babel-preset-es2015","babel-register","chai","cross-env","eslint-loader","eslint-plugin-flowtype","eslint-plugin-import","eslint-plugin-mocha-no-only","flow-bin","istanbul","karma","karma-chai","karma-chrome-launcher","karma-cli","karma-coverage","karma-mocha","karma-sourcemap-loader","karma-webpack","mocha","mocha-cli","nyc","sinon","sinon-chai","standard-version","uglifyjs-webpack-plugin","webpack","webpack-dev-server","repository","url","keywords","license","bugs","homepage","dependencies","js-logger","_fakeEvent2","_mediaSourceProvider","_mediaSourceProvider2","Html5","createVideoElement","setSource","attach","detach","_mediaSourceAdapter","_el","removeAttribute","parentNode","removeChild","_this2","document","createElement","style","width","height","backgroundColor","controls","body","appendChild","loadMediaSourceAdapter","getMediaSourceAdapter","seekable","played","buffered","defaultMuted","poster","autoplay","loop","playbackRate","defaultPlaybackRate","ended","networkState","readyState","videoHeight","videoWidth","TEST_VID","e","EngineName","NativeAdapter","_videoElement","getVideoElement","_source","_name","toString","playkit","_player2","VERSION","_package","packageData","log","_defineProperty","_state","_state2","StateManager","_PlayerStates$IDLE","_PlayerStates$LOADING","_PlayerStates$PAUSED","_PlayerStates$PLAYING","_PlayerStates$BUFFERI","_transitions","_updateState","_dispatchEvent","autoPlay","_history","_prevState","_curState","_attachListeners","_doTransition","transition","oldState","newState","State","_duration","_timestamp","endTime","string","charAt","toUpperCase","endsWith","searchString","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","global","Logger","logHandler","contextualLoggersByNameMap","scope","func","apply","args","defineLogLevel","ContextualLogger","defaultContext","context","setLevel","filterLevel","newLevel","enabledFor","lvl","invoke","warn","time","label","timeEnd","level","msgArgs","globalLogger","L","setHandler","createDefaultHandler","formatter","messages","unshift","timerStartTimeByLabelMap","invokeConsoleMethod","hdlr","Function","console","timerLabel","getTime","u"],"mappings":"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","file":"playkit.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Playkit\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Playkit\"] = factory();\n\telse\n\t\troot[\"Playkit\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Playkit\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Playkit\"] = factory();\n\telse\n\t\troot[\"Playkit\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 16);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LOG_LEVEL = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _jsLogger = __webpack_require__(20);\n\nvar JsLogger = _interopRequireWildcard(_jsLogger);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar LOG_LEVEL = {\n  \"DEBUG\": JsLogger.DEBUG,\n  \"INFO\": JsLogger.INFO,\n  \"TIME\": JsLogger.TIME,\n  \"WARN\": JsLogger.WARN,\n  \"ERROR\": JsLogger.ERROR,\n  \"OFF\": JsLogger.OFF\n};\n\nvar LoggerFactory = function () {\n  function LoggerFactory(options) {\n    _classCallCheck(this, LoggerFactory);\n\n    JsLogger.useDefaults(options || {});\n  }\n\n  _createClass(LoggerFactory, [{\n    key: \"getLogger\",\n    value: function getLogger(name) {\n      if (!name) {\n        return JsLogger;\n      }\n      return JsLogger.get(name);\n    }\n  }]);\n\n  return LoggerFactory;\n}();\n\nvar lf = new LoggerFactory({ defaultLevel: JsLogger.DEBUG });\n\nexports.default = lf;\nexports.LOG_LEVEL = LOG_LEVEL;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Create an Event work-alike object based on the dictionary.\n * The event should contain all of the same properties from the dict.\n * @param {string} type -\n * @param {Object=} opt_dict -\n * @constructor\n * @extends {Event}\n */\nvar FakeEvent = function () {\n\n  /**\n   * Non-standard property read by FakeEventTarget to stop processing listeners.\n   * @type {boolean}\n   */\n\n\n  /** @type {EventTarget} */\n\n\n  /** @const {string} */\n\n\n  /** @const {boolean} */\n\n  /** @const {boolean} */\n  function FakeEvent(type, payload) {\n    _classCallCheck(this, FakeEvent);\n\n    // These Properties below cannot be set by dict.  They are all provided for\n    // compatibility with native events.\n\n    /** @const {boolean} */\n    this.bubbles = false;\n\n    /** @const {boolean} */\n    this.cancelable = false;\n\n    /** @const {boolean} */\n    this.defaultPrevented = false;\n\n    /**\n     * According to MDN, Chrome uses high-res timers instead of epoch time.\n     * Follow suit so that timeStamps on FakeEvents use the same base as\n     * on native Events.\n     * @const {number}\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Event/timeStamp\n     */\n    this.timeStamp = window.performance ? window.performance.now() : Date.now();\n\n    /** @const {string} */\n    this.type = type;\n\n    /** @const {boolean} */\n    this.isTrusted = false;\n\n    /** @type {EventTarget} */\n    this.currentTarget = null;\n\n    /** @type {EventTarget} */\n    this.target = null;\n\n    /**\n     * Non-standard property read by FakeEventTarget to stop processing listeners.\n     * @type {boolean}\n     */\n    this.stopped = false;\n\n    this.payload = payload;\n  }\n\n  /**\n   * Does nothing, since FakeEvents have no default.  Provided for compatibility\n   * with native Events.\n   * @override\n   */\n\n\n  /** @type {EventTarget} */\n\n\n  /** @const {boolean} */\n\n\n  /**\n   * According to MDN, Chrome uses high-res timers instead of epoch time.\n   * Follow suit so that timeStamps on FakeEvents use the same base as\n   * on native Events.\n   * @const {number}\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Event/timeStamp\n   */\n\n\n  /** @const {boolean} */\n\n\n  _createClass(FakeEvent, [{\n    key: \"preventDefault\",\n    value: function preventDefault() {}\n\n    /**\n     * Stops processing event listeners for this event.  Provided for compatibility\n     * with native Events.\n     * @override\n     */\n\n  }, {\n    key: \"stopImmediatePropagation\",\n    value: function stopImmediatePropagation() {\n      this.stopped = true;\n    }\n\n    /**\n     * Does nothing, since FakeEvents do not bubble.  Provided for compatibility\n     * with native Events.\n     * @override\n     */\n\n  }, {\n    key: \"stopPropagation\",\n    value: function stopPropagation() {}\n  }]);\n\n  return FakeEvent;\n}();\n\nexports.default = FakeEvent;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _eventManager = __webpack_require__(3);\n\nvar _eventManager2 = _interopRequireDefault(_eventManager);\n\nvar _fakeEventTarget = __webpack_require__(8);\n\nvar _fakeEventTarget2 = _interopRequireDefault(_fakeEventTarget);\n\nvar _fakeEvent = __webpack_require__(1);\n\nvar _fakeEvent2 = _interopRequireDefault(_fakeEvent);\n\nvar _events = __webpack_require__(4);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _stateTypes = __webpack_require__(9);\n\nvar _stateTypes2 = _interopRequireDefault(_stateTypes);\n\nvar _util = __webpack_require__(12);\n\nvar _stringUtil = __webpack_require__(19);\n\nvar _logger = __webpack_require__(0);\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nvar _html = __webpack_require__(14);\n\nvar _html2 = _interopRequireDefault(_html);\n\nvar _pluginManager = __webpack_require__(7);\n\nvar _pluginManager2 = _interopRequireDefault(_pluginManager);\n\nvar _stateManager = __webpack_require__(17);\n\nvar _stateManager2 = _interopRequireDefault(_stateManager);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar logger = _logger2.default.getLogger('Player');\n\nvar Player = function (_FakeEventTarget) {\n  _inherits(Player, _FakeEventTarget);\n\n  function Player(config) {\n    _classCallCheck(this, Player);\n\n    var _this = _possibleConstructorReturn(this, (Player.__proto__ || Object.getPrototypeOf(Player)).call(this));\n\n    _this._stateManager = new _stateManager2.default(_this);\n    _this._pluginManager = new _pluginManager2.default();\n    _this._eventManager = new _eventManager2.default();\n    _this._engineEventHandlers = new Map();\n    for (var playerEvent in _events2.default) {\n      if (_events2.default.hasOwnProperty(playerEvent)) {\n        _this._engineEventHandlers.set('onEngine' + (0, _stringUtil.capitlize)(_events2.default[playerEvent]) + '_', function (event) {\n          return _this.dispatchEvent(event);\n        });\n      }\n    }\n    _this._config = config || Player.defaultConfig_();\n    _this.loadPlugins(_this._config);\n    _this.selectEngine(_this._config);\n    _this.attachMedia();\n    logger.info('player is ready!');\n    return _this;\n  }\n\n  _createClass(Player, [{\n    key: 'destroy',\n    value: function destroy() {\n      this._engine.destroy();\n      this._eventManager.destroy();\n      this._pluginManager.destroy();\n      this._stateManager.destroy();\n      // this.engine_ = null;\n      // this.eventManager_ = null;\n      this._config = null;\n    }\n  }, {\n    key: 'loadPlugins',\n    value: function loadPlugins(config) {\n      var plugins = config.plugins;\n      for (var name in plugins) {\n        if (plugins.hasOwnProperty(name)) {\n          this._pluginManager.load(name, this, plugins[name]);\n        }\n      }\n    }\n  }, {\n    key: 'selectEngine',\n    value: function selectEngine(config) {\n      if (config && config.sources) {\n        var sources = config.sources;\n        for (var i = 0; i < sources.length; i++) {\n          if (_html2.default.canPlayType(sources[i].mimetype)) {\n            this.loadEngine(sources[i], config);\n            break;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'loadEngine',\n    value: function loadEngine(source, config) {\n      this._engine = new _html2.default(source, config);\n      if (config.preload === \"auto\") {\n        this.load();\n      }\n    }\n  }, {\n    key: 'attachMedia',\n    value: function attachMedia() {\n      // Listen to all HTML5-defined events and trigger them on the player\n      for (var playerEvent in _events2.default) {\n        if (_events2.default.hasOwnProperty(playerEvent)) {\n          var handler = this._engineEventHandlers.get('onEngine' + (0, _stringUtil.capitlize)(_events2.default[playerEvent]) + '_');\n          if (handler) {\n            this._eventManager.listen(this._engine, _events2.default[playerEvent], handler);\n          }\n        }\n      }\n    }\n\n    /**\n     * Get the player config\n     * @returns {Object} - The player configuration\n     */\n\n  }, {\n    key: 'play',\n\n\n    //  <editor-fold desc=\"Playback Interface\">\n    /**\n     * Start/resume playback\n     * @returns {void}\n     */\n    value: function play() {\n      return this._engine.play();\n    }\n\n    /**\n     * Pause playback\n     * @returns {void}\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      return this._engine.pause();\n    }\n\n    /**\n     * Load media\n     * @returns {void}\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      this._engine.load();\n    }\n\n    /**\n     * Set the current time in seconds\n     * @param {Number} to - The number to set in seconds\n     */\n\n  }, {\n    key: 'ready',\n\n\n    // </editor-fold>\n\n    // <editor-fold desc=\"State\">\n    value: function ready() {}\n\n    /**\n     * Get paused state\n     * @returns {boolean} - Whether the video is paused or not\n     */\n\n  }, {\n    key: 'buffered',\n    value: function buffered() {}\n\n    /**\n     * Set player muted state\n     * @param {boolean} mute - The mute value\n     */\n\n  }, {\n    key: 'config',\n    get: function get() {\n      return this._config;\n    }\n  }, {\n    key: 'currentTime',\n    set: function set(to) {\n      if ((0, _util.isNumber)(to)) {\n        var boundedTo = to;\n        if (to < 0) {\n          boundedTo = 0;\n        }\n        if (boundedTo > this._engine.duration) {\n          boundedTo = this._engine.duration;\n        }\n        this._engine.currentTime = boundedTo;\n      }\n    }\n\n    /**\n     * Get the current time in seconds\n     * @returns {Number} - The playback current time\n     */\n    ,\n    get: function get() {\n      return this._engine.currentTime;\n    }\n\n    /**\n     * /**\n     * Get the duration in seconds\n     * @returns {Number} - The playback duration\n     */\n\n  }, {\n    key: 'duration',\n    get: function get() {\n      return this._engine.duration;\n    }\n\n    /**\n     * Set playback volume\n     * @param {Number} vol - The volume to set\n     */\n\n  }, {\n    key: 'volume',\n    set: function set(vol) {\n      if ((0, _util.isFloat)(vol)) {\n        var boundedVol = vol;\n        if (boundedVol < 0) {\n          boundedVol = 0;\n        }\n        if (boundedVol > 1) {\n          boundedVol = 1;\n        }\n        this._engine.volume = boundedVol;\n      }\n    }\n\n    /**\n     * Get playback volume\n     * @returns {Number} - The playback volume\n     */\n    ,\n    get: function get() {\n      return this._engine.volume;\n    }\n  }, {\n    key: 'paused',\n    get: function get() {\n      return this._engine.paused;\n    }\n\n    /**\n     * Get seeking state\n     * @returns {boolean} - Whether the video is seeking or not\n     */\n\n  }, {\n    key: 'seeking',\n    get: function get() {\n      return this._engine.seeking;\n    }\n  }, {\n    key: 'muted',\n    set: function set(mute) {\n      this._engine.muted = mute;\n    }\n\n    /**\n     * Get player muted state\n     * @returns {boolean} - Whether the video is muted or not\n     */\n    ,\n    get: function get() {\n      return this._engine.muted;\n    }\n\n    /**\n     * Get the player source\n     * @returns {string} - The current source of the player\n     */\n\n  }, {\n    key: 'src',\n    get: function get() {\n      return this._engine.src;\n    }\n\n    /**\n     * Get the player events\n     * @returns {Object} - The events of the player\n     * @constructor\n     */\n\n  }, {\n    key: 'Event',\n    get: function get() {\n      return _events2.default;\n    }\n\n    /**\n     * Get the player states\n     * @returns {Object} - The states of the player\n     * @constructor\n     */\n\n  }, {\n    key: 'State',\n    get: function get() {\n      return _stateTypes2.default;\n    }\n\n    // </editor-fold>\n\n  }], [{\n    key: 'defaultConfig_',\n    value: function defaultConfig_() {\n      return {};\n    }\n  }]);\n\n  return Player;\n}(_fakeEventTarget2.default);\n\nexports.default = Player;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _multiMap = __webpack_require__(10);\n\nvar _multiMap2 = _interopRequireDefault(_multiMap);\n\nvar _fakeEvent = __webpack_require__(1);\n\nvar _fakeEvent2 = _interopRequireDefault(_fakeEvent);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Creates a new EventManager. An EventManager maintains a collection of \"event\n * bindings\" between event targets and event listeners.\n *\n * @struct\n * @constructor\n * @implements {IDestroyable}\n */\nvar EventManager = function () {\n  function EventManager() {\n    _classCallCheck(this, EventManager);\n\n    /**\n     * Maps an event type to an array of event bindings.\n     * @private {MultiMap.<!EventManager.Binding_>}\n     */\n    this._bindingMap = new _multiMap2.default();\n  }\n\n  /**\n   * Detaches all event listeners.\n   * @override\n   */\n\n\n  _createClass(EventManager, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.removeAll();\n      this._bindingMap = null;\n      return Promise.resolve();\n    }\n\n    /**\n     * Attaches an event listener to an event target.\n     * @param {EventTarget} target The event target.\n     * @param {string} type The event type.\n     * @param {EventManager.ListenerType} listener The event listener.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'listen',\n    value: function listen(target, type, listener) {\n      var binding = new Binding_(target, type, listener);\n      if (this._bindingMap) {\n        this._bindingMap.push(type, binding);\n      }\n    }\n\n    /**\n     * Detaches an event listener from an event target.\n     * @param {EventTarget} target The event target.\n     * @param {string} type The event type.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'unlisten',\n    value: function unlisten(target, type) {\n      if (this._bindingMap) {\n        var list = this._bindingMap.get(type);\n\n        for (var i = 0; i < list.length; ++i) {\n          var binding = list[i];\n\n          if (binding.target == target) {\n            binding.unlisten();\n            if (this._bindingMap) {\n              this._bindingMap.remove(type, binding);\n            }\n          }\n        }\n      }\n    }\n\n    /**\n     * Detaches all event listeners from all targets.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'removeAll',\n    value: function removeAll() {\n      if (this._bindingMap) {\n        var listeners = this._bindingMap.getAll();\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = listeners[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var listener = _step.value;\n\n            listener.unlisten();\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        if (this._bindingMap) {\n          this._bindingMap.clear();\n        }\n      }\n    }\n  }]);\n\n  return EventManager;\n}();\n\n/**\n * @typedef {function(!Event)}\n */\n\n\n/**\n * Creates a new Binding_ and attaches the event listener to the event target.\n * @param {EventTarget} target The event target.\n * @param {string} type The event type.\n * @param {EventManager.ListenerType} listener The event listener.\n * @constructor\n * @private\n */\nvar Binding_ = function () {\n  function Binding_(target, type, listener) {\n    _classCallCheck(this, Binding_);\n\n    /** @type {EventTarget} */\n    this.target = target;\n\n    /** @type {string} */\n    this.type = type;\n\n    /** @type {?EventManager.ListenerType} */\n    this.listener = listener;\n\n    this.target.addEventListener(type, listener, false);\n  }\n\n  /**\n   * Detaches the event listener from the event target. This does nothing if the\n   * event listener is already detached.\n   * @returns {void}\n   */\n\n\n  _createClass(Binding_, [{\n    key: 'unlisten',\n    value: function unlisten() {\n      if (!this.target) return;\n\n      this.target.removeEventListener(this.type, this.listener, false);\n\n      this.target = null;\n      this.listener = null;\n    }\n  }]);\n\n  return Binding_;\n}();\n\nexports.default = EventManager;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar PLAYER_EVENTS = {\n  PLAY: 'play',\n  PAUSE: 'pause',\n  /**\n   * Fired when the media begins to play (either for the first time, after having been paused, or after ending and then restarting)\n   */\n  PLAYING: 'playing',\n  /**\n   * Fired while the user agent is downloading media data\n   */\n  PROGRESS: 'progress',\n  /**\n   * Fires when the loading of an audio/video is aborted\n   */\n  ABORT: 'abort',\n  /**\n   * Fires when an error occurs.  The element's error attribute contains more information\n   */\n  ERROR: 'error',\n  /**\n   * Fires when the browser is intentionally not getting media data\n   */\n  SUSPEND: 'suspend',\n  /**\n   * Fires when the current playlist is empty\n   */\n  EMPTIED: 'emptied',\n  /**\n   * Fires when playback completes\n   */\n  ENDED: 'ended',\n  /**\n   * Fires when the requested operation (such as playback) is delayed pending the completion of another operation (such as a seek)\n   */\n  WAITING: 'waiting',\n  /**\n   * Fires when the browser is trying to get media data, but data is not available\n   */\n  STALLED: 'stalled',\n  /**\n   * Fires when the video is starting to load\n   */\n  LOAD_START: 'loadstart',\n  /**\n   * Fires when the browser has loaded meta data for the audio/video\n   */\n  LOADED_METADATA: 'loadedmetadata',\n  /**\n   * Fires when the browser has loaded the current frame of the audio/video\n   */\n  LOADED_DATA: 'loadeddata',\n  /**\n   * Fires when the current playback position has changed\n   */\n  TIME_UPDATE: 'timeupdate',\n  /**\n   * Fires when the playing speed of the audio/video is changed\n   */\n  RATE_CHANGE: 'ratechange',\n  /**\n   * Fires when the volume has been changed\n   */\n  VOLUME_CHANGE: 'volumechange',\n  /**\n   * Fires when the text track has been changed\n   */\n  TEXT_TRACK_CHANGE: 'texttrackchange',\n  /**\n   * Fires when the player state has been changed\n   */\n  PLAYER_STATE_CHANGED: 'playerStateChanged',\n  /**\n   * Fires when the seeking attribute is set to false indicating that seeking has ended\n   */\n  SEEKED: 'seeked',\n  /**\n   * Fires when the seeking attribute is set to true indicating that seeking is active\n   */\n  SEEKING: 'seeking'\n};\n\nexports.default = PLAYER_EVENTS;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.registerMediaSourceAdapter = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _nativeAdapter = __webpack_require__(15);\n\nvar _nativeAdapter2 = _interopRequireDefault(_nativeAdapter);\n\nvar _logger = __webpack_require__(0);\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Media source provider\n * @classdesc\n */\nvar MediaSourceProvider = function () {\n  function MediaSourceProvider() {\n    _classCallCheck(this, MediaSourceProvider);\n  }\n\n  _createClass(MediaSourceProvider, null, [{\n    key: 'register',\n\n\n    /**\n     * Add a media source adapter to the registry\n     * @function register\n     * @param {IMediaSourceAdapter} mediaSourceAdapter - The media source adapter to register\n     * @static\n     * @returns {void}\n     */\n\n    /**\n     * The media source adapter registry\n     * @member {Array<IMediaSourceAdapter>} _mediaSourceAdapters\n     * @static\n     * @private\n     */\n    value: function register(mediaSourceAdapter) {\n      if (mediaSourceAdapter) {\n        if (!MediaSourceProvider._mediaSourceAdapters.includes(mediaSourceAdapter)) {\n          MediaSourceProvider._logger.debug('Adapter <' + mediaSourceAdapter.name + '> has been registered successfully.');\n          MediaSourceProvider._mediaSourceAdapters.push(mediaSourceAdapter);\n        } else {\n          MediaSourceProvider._logger.debug('Adapter <' + mediaSourceAdapter.name + '> is already registered, do not register again.');\n        }\n      }\n    }\n\n    /**\n     * Remove a media source adapter from the registry\n     * @function unRegister\n     * @param {IMediaSourceAdapter} mediaSourceAdapter - The media source adapter to unRegister\n     * @static\n     * @returns {void}\n     */\n\n    /**\n     * The selected adapter for playback\n     * @type {null|IMediaSourceAdapter}\n     * @static\n     * @private\n     */\n\n    /**\n     * The logger of the media source provider\n     * @member {any} _logger\n     * @static\n     * @private\n     */\n\n  }, {\n    key: 'unRegister',\n    value: function unRegister(mediaSourceAdapter) {\n      var index = MediaSourceProvider._mediaSourceAdapters.indexOf(mediaSourceAdapter);\n      if (index > -1) {\n        MediaSourceProvider._logger.debug('Unregistered <' + mediaSourceAdapter.name + '> adapter.');\n        MediaSourceProvider._mediaSourceAdapters.splice(index, 1);\n      }\n    }\n\n    /**\n     * Checks if one of the registered media source adapters can play a given mime type\n     * @function canPlayType\n     * @param {string} mimeType - The mime type to check\n     * @static\n     * @returns {boolean} - If one of the adapters can play the specific mime type\n     */\n\n  }, {\n    key: 'canPlayType',\n    value: function canPlayType(mimeType) {\n      var mediaSourceAdapters = MediaSourceProvider._mediaSourceAdapters;\n      for (var i = 0; i < mediaSourceAdapters.length; i++) {\n        if (mediaSourceAdapters[i].canPlayType(mimeType)) {\n          MediaSourceProvider._selectedAdapter = mediaSourceAdapters[i];\n          MediaSourceProvider._logger.debug('Selected adapter is <' + MediaSourceProvider._selectedAdapter.name + '>.');\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * Get the appropriate media source adapter to the video source\n     * @function getMediaSourceAdapter\n     * @param {IEngine} engine - The video engine which requires adapter for a given mimeType\n     * @param {Object} source - The video source\n     * @param {Object} config - The player configuration\n     * @returns {IMediaSourceAdapter|null} - The selected media source adapter, or null if such doesn't exists\n     * @static\n     */\n\n  }, {\n    key: 'getMediaSourceAdapter',\n    value: function getMediaSourceAdapter(engine, source, config) {\n      if (engine && source && config) {\n        if (!MediaSourceProvider._selectedAdapter) {\n          MediaSourceProvider.canPlayType(source.mimetype);\n        }\n        return MediaSourceProvider._selectedAdapter ? MediaSourceProvider._selectedAdapter.createAdapter(engine, source, config.engines) : null;\n      }\n      return null;\n    }\n  }]);\n\n  return MediaSourceProvider;\n}();\n\nMediaSourceProvider._logger = _logger2.default.getLogger('MediaSourceProvider');\nMediaSourceProvider._mediaSourceAdapters = [_nativeAdapter2.default];\nMediaSourceProvider._selectedAdapter = null;\nexports.default = MediaSourceProvider;\n\n\nvar registerMediaSourceAdapter = MediaSourceProvider.register;\nexports.registerMediaSourceAdapter = registerMediaSourceAdapter;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _player = __webpack_require__(2);\n\nvar _player2 = _interopRequireDefault(_player);\n\nvar _logger = __webpack_require__(0);\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nvar _util = __webpack_require__(12);\n\nvar _eventManager = __webpack_require__(3);\n\nvar _eventManager2 = _interopRequireDefault(_eventManager);\n\nvar _playerError = __webpack_require__(11);\n\nvar _playerError2 = _interopRequireDefault(_playerError);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/** The BasePlugin responsible to implement the plugin interface.\n * Contains several default implementations.\n * Other plugins should extend this class.\n * @classdesc\n */\nvar BasePlugin = function () {\n  _createClass(BasePlugin, null, [{\n    key: 'createPlugin',\n\n\n    /**\n     * Factory method to create the actual plugin.\n     * @param {string} name - The plugin name\n     * @param {Player} player - The player reference\n     * @param {Object} config - The plugin configuration\n     * @returns {BasePlugin} - New runtime plugin instance\n     * @static\n     * @public\n     */\n\n    /**\n     * The event manager of the plugin.\n     * @member\n     */\n\n    /**\n     * The logger of the plugin.\n     * @member\n     */\n\n    /**\n     * The runtime configuration of the plugin.\n     * @member\n     */\n    value: function createPlugin(name, player) {\n      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      return new this(name, player, config);\n    }\n\n    /**\n     * Returns under what conditions the plugin is valid.\n     * Plugin must implement this method.\n     * @returns {boolean} - Whether the plugin is valid and can be initiated. Default implementation is true\n     * @static\n     * @public\n     * @abstract\n     */\n\n    /**\n     * The default configuration of the plugin.\n     * Inherited plugins should override this property.\n     * @type {Object}\n     * @static\n     * @member\n     */\n\n    /**\n     * Reference to the actual player.\n     * @member\n     */\n\n    /**\n     * The name of the plugin.\n     * @member\n     */\n\n  }, {\n    key: 'isValid',\n    value: function isValid() {\n      throw new _playerError2.default(_playerError2.default.TYPE.NOT_IMPLEMENTED_METHOD, 'isValid()').getError();\n    }\n\n    /**\n     * constructor\n     * @param {string} name - The plugin name\n     * @param {Player} player - The player reference\n     * @param {Object} config - The plugin configuration\n     * @constructor\n     * @private\n     */\n\n  }]);\n\n  function BasePlugin(name, player, config) {\n    _classCallCheck(this, BasePlugin);\n\n    this.name = name;\n    this.player = player;\n    this.eventManager = new _eventManager2.default();\n    this.logger = _logger2.default.getLogger(this.name);\n    this.config = (0, _util.merge)(this.constructor.defaultConfig, config);\n  }\n\n  /**\n   * Getter for the configuration of the plugin.\n   * @param {string} attr - The key in the plugin configuration (optional).\n   * @returns {*} - If attribute is provided, returns its value. Else, Returns the config of the plugin.\n   * @public\n   */\n\n\n  _createClass(BasePlugin, [{\n    key: 'getConfig',\n    value: function getConfig(attr) {\n      if (attr) {\n        return this.config[attr];\n      }\n      return this.config;\n    }\n\n    /**\n     * Updates the config of the plugin.\n     * @param {Object} update - The updated configuration.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'updateConfig',\n    value: function updateConfig(update) {\n      this.config = (0, _util.merge)(this.config, update);\n    }\n\n    /**\n     * Runs the destroy logic of the plugin.\n     * plugin must implement this method.\n     * @public\n     * @abstract\n     * @returns {void}\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      throw new _playerError2.default(_playerError2.default.TYPE.NOT_IMPLEMENTED_METHOD, 'destroy()').getError();\n    }\n\n    /**\n     * Getter for the plugin's name.\n     * @returns {string} - The name of the plugin.\n     * @public\n     */\n\n  }, {\n    key: 'getName',\n    value: function getName() {\n      return this.name;\n    }\n  }]);\n\n  return BasePlugin;\n}();\n\nBasePlugin.defaultConfig = {};\nexports.default = BasePlugin;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.registerPlugin = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _basePlugin = __webpack_require__(6);\n\nvar _basePlugin2 = _interopRequireDefault(_basePlugin);\n\nvar _playerError = __webpack_require__(11);\n\nvar _playerError2 = _interopRequireDefault(_playerError);\n\nvar _player = __webpack_require__(2);\n\nvar _player2 = _interopRequireDefault(_player);\n\nvar _logger = __webpack_require__(0);\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * The logger of the PluginManager class.\n * @private\n * @const\n */\nvar logger = _logger2.default.getLogger(\"PluginManager\");\n\n/** The PluginManager responsible for register plugins definitions and store plugins instances.\n * @classdesc\n */\n\nvar PluginManager = function () {\n  function PluginManager() {\n    _classCallCheck(this, PluginManager);\n\n    this._plugins = new Map();\n  }\n  /**\n   * The registry of the plugins.\n   * Maps plugin's name to his class.\n   * @type {Map}\n   * @static\n   * @private\n   */\n\n  /**\n   * The active plugins in the player.\n   * Maps plugin's name to his instance.\n   * @type {Map}\n   * @private\n   */\n\n\n  _createClass(PluginManager, [{\n    key: 'load',\n\n\n    /**\n     * Creates and store new instance of the plugin in case isValid() of the plugin returns true.\n     * @param {string} name - The plugin name\n     * @param {Player} player - The player reference\n     * @param {Object} [config={}] - The plugin configuration\n     * @returns {boolean} - Whether the plugin load was successful\n     * @public\n     */\n    value: function load(name, player) {\n      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (!PluginManager._registry.has(name)) {\n        throw new _playerError2.default(_playerError2.default.TYPE.NOT_REGISTERED_PLUGIN, name).getError();\n      }\n      var pluginClass = PluginManager._registry.get(name);\n      if (pluginClass != null && pluginClass.isValid()) {\n        this._plugins.set(name, pluginClass.createPlugin(name, player, config));\n        logger.debug('Plugin <' + name + '> has been loaded.');\n        return true;\n      }\n      logger.debug('Plugin <' + name + '> isn\\'t loaded, isValid()=false.');\n      return false;\n    }\n\n    /**\n     * Iterates over all the plugins and calls private _destroy.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._plugins.forEach(this._destroy.bind(this));\n    }\n\n    /**\n     * Calls destroy() method of the plugin's impl.\n     * @param {BasePlugin} plugin - The plugin instance\n     * @param {string} name - The plugin name\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_destroy',\n    value: function _destroy(plugin, name) {\n      plugin.destroy();\n      this._plugins.delete(name);\n    }\n\n    /**\n     * Returns the plugin's instance.\n     * @param {string} name - The plugin name\n     * @returns {BasePlugin} - The plugin instance\n     * @public\n     */\n\n  }, {\n    key: 'get',\n    value: function get(name) {\n      return this._plugins.get(name);\n    }\n  }], [{\n    key: 'register',\n\n\n    /**\n     * Writes the plugin in the registry.\n     * Maps: plugin name -> plugin class.\n     * @param {string} name - The plugin name\n     * @param {Function} handler - The plugin class\n     * @returns {boolean} - If the registration request succeeded\n     * @static\n     * @public\n     */\n    value: function register(name, handler) {\n      if (typeof handler !== 'function' || handler.prototype instanceof _basePlugin2.default === false) {\n        throw new _playerError2.default(_playerError2.default.TYPE.NOT_VALID_HANDLER).getError();\n      }\n      if (!PluginManager._registry.has(name)) {\n        PluginManager._registry.set(name, handler);\n        logger.debug('Plugin <' + name + '> has been registered successfully.');\n        return true;\n      }\n      logger.debug('Plugin <' + name + '> is already registered, do not register again.');\n      return false;\n    }\n\n    /**\n     * Removes the plugin from the registry.\n     * @param {string} name - The plugin name\n     * @static\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'unRegister',\n    value: function unRegister(name) {\n      if (PluginManager._registry.has(name)) {\n        PluginManager._registry.delete(name);\n        logger.debug('Unregistered <' + name + '> plugin.');\n      }\n    }\n  }]);\n\n  return PluginManager;\n}();\n\n/**\n * Export the register method.\n * @type {function}\n * @constant\n */\n\n\nPluginManager._registry = new Map();\nexports.default = PluginManager;\nvar registerPlugin = PluginManager.register;\nexports.registerPlugin = registerPlugin;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _fakeEvent = __webpack_require__(1);\n\nvar _fakeEvent2 = _interopRequireDefault(_fakeEvent);\n\nvar _multiMap = __webpack_require__(10);\n\nvar _multiMap2 = _interopRequireDefault(_multiMap);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * A work-alike for EventTarget.  Only DOM elements may be true EventTargets,\n * but this can be used as a base class to provide event dispatch to non-DOM\n * classes.  Only FakeEvents should be dispatched.\n *\n * @struct\n * @constructor\n * @implements {EventTarget}\n * @export\n */\nvar FakeEventTarget = function () {\n  function FakeEventTarget() {\n    _classCallCheck(this, FakeEventTarget);\n\n    /**\n     * @private {!MultiMap.<FakeEventTarget.ListenerType>}\n     */\n    this._listeners = new _multiMap2.default();\n\n    /**\n     * The target of all dispatched events.  Defaults to |this|.\n     * @type {EventTarget}\n     */\n    this.dispatchTarget = this;\n  }\n\n  /**\n   * Add an event listener to this object.\n   *\n   * @param {string} type The event type to listen for.\n   * @param {FakeEventTarget.ListenerType} listener The callback or\n   *   listener object to invoke.\n   * @param {boolean=} opt_capturing Ignored.  FakeEventTargets do not have\n   *   parents, so events neither capture nor bubble.\n   * @override\n   * @export\n   */\n\n\n  _createClass(FakeEventTarget, [{\n    key: 'addEventListener',\n    value: function addEventListener(type, listener) {\n      this._listeners.push(type, listener);\n    }\n\n    /**\n     * Remove an event listener from this object.\n     *\n     * @param {string} type The event type for which you wish to remove a listener.\n     * @param {FakeEventTarget.ListenerType} listener The callback or\n     *   listener object to remove.\n     * @param {boolean=} opt_capturing Ignored.  FakeEventTargets do not have\n     *   parents, so events neither capture nor bubble.\n     * @override\n     * @export\n     */\n\n  }, {\n    key: 'removeEventListener',\n    value: function removeEventListener(type, listener) {\n      this._listeners.remove(type, listener);\n    }\n\n    /**\n     * Dispatch an event from this object.\n     *\n     * @param {!Event} event The event to be dispatched from this object.\n     * @return {boolean} True if the default action was prevented.\n     * @override\n     * @export\n     */\n\n  }, {\n    key: 'dispatchEvent',\n    value: function dispatchEvent(event) {\n      // In many browsers, it is complex to overwrite properties of actual Events.\n      // Here we expect only to dispatch FakeEvents, which are simpler.\n      //goog.asserts.assert(event instanceof FakeEvent,\n      //    'FakeEventTarget can only dispatch FakeEvents!');\n\n      var list = this._listeners.get(event.type) || [];\n\n      for (var i = 0; i < list.length; ++i) {\n        // Do this every time, since events can be re-dispatched from handlers.\n        event.target = this.dispatchTarget;\n        event.currentTarget = this.dispatchTarget;\n\n        var listener = list[i];\n        try {\n          if (listener.handleEvent) {\n            listener.handleEvent(event);\n          } else {\n            listener.call(this, event);\n          }\n        } catch (exception) {\n          // Exceptions during event handlers should not affect the caller,\n          // but should appear on the console as uncaught, according to MDN:\n          // http://goo.gl/N6Ff27\n          // TODO: add log\n        }\n\n        if (event.stopped) {\n          break;\n        }\n      }\n\n      return event.defaultPrevented;\n    }\n  }]);\n\n  return FakeEventTarget;\n}();\n\n/**\n * These are the listener types defined in the closure extern for EventTarget.\n * @typedef {EventListener|function(!Event):(boolean|undefined)}\n */\n\n\nexports.default = FakeEventTarget;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar PLAYER_STATE_TYPES = {\n  IDLE: \"idle\",\n  LOADING: \"loading\",\n  PLAYING: \"playing\",\n  PAUSED: \"paused\",\n  BUFFERING: \"buffering\"\n};\n\nexports.default = PLAYER_STATE_TYPES;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * A simple multimap template.\n * @constructor\n * @struct\n * @template T\n */\nvar MultiMap = function () {\n  function MultiMap() {\n    _classCallCheck(this, MultiMap);\n\n    /** @private {!Object.<string, !Array.<T>>} */\n    this._map = new Map();\n  }\n\n  /**\n   * Add a key, value pair to the map.\n   * @param {string} key -\n   * @param {T} value  -\n   * @returns {void}\n   */\n\n\n  _createClass(MultiMap, [{\n    key: \"push\",\n    value: function push(key, value) {\n      if (this._map.has(key)) {\n        var list = this._map.get(key);\n        if (Array.isArray(list)) {\n          list.push(value);\n          this._map.set(key, list);\n        }\n      } else {\n        this._map.set(key, [value]);\n      }\n    }\n\n    /**\n     * Set an array of values for the key, overwriting any previous data.\n     * @param {string} key -\n     * @param {!Array.<T>} values -\n     * @returns {void}\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(key, values) {\n      this._map.set(key, values);\n    }\n\n    /**\n     * Check for a key.\n     * @param {string} key -\n     * @return {boolean} true if the key exists.\n     */\n\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      return this._map.has(key);\n    }\n\n    /**\n     * Get a list of values by key.\n     * @param {string} key -\n     * @return {Array.<T>} or null if no suZch key exists.\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      var list = this._map.get(key);\n      // slice() clones the list so that it and the map can each be modified\n      // without affecting the other.\n      return list ? list.slice() : [];\n    }\n\n    /**\n     * Get a list of all values.\n     * @returns {!Array.<T>} -\n     */\n\n  }, {\n    key: \"getAll\",\n    value: function getAll() {\n      var list = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this._map.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var value = _step.value;\n\n          list = list.concat(value);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return list;\n    }\n\n    /**\n     * Remove a specific value, if it exists.\n     * @param {string} key -\n     * @param {T} value -\n     * @returns {void}\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(key, value) {\n      if (!this._map.has(key)) return;\n      var list = this._map.get(key);\n      if (Array.isArray(list)) {\n        for (var i = 0; i < list.length; ++i) {\n          if (list[i] == value) {\n            list.splice(i, 1);\n            --i;\n          }\n        }\n      }\n    }\n\n    /**\n     * Get all keys from the multimap.\n     * @return {!Array.<string>}\n     */\n    // eslint-disable-next-line no-undef\n\n  }, {\n    key: \"keys\",\n    value: function keys() {\n      return this._map.keys();\n    }\n\n    /**\n     * Clear all keys and values from the multimap.\n     * @returns {void}\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._map.clear();\n    }\n  }]);\n\n  return MultiMap;\n}();\n\nexports.default = MultiMap;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PlayerError = function () {\n  function PlayerError(error, param) {\n    _classCallCheck(this, PlayerError);\n\n    this.name = error.name;\n    this.message = error.message(param);\n  }\n\n  _createClass(PlayerError, [{\n    key: \"getError\",\n    value: function getError() {\n      return {\n        name: this.name,\n        message: this.message\n      };\n    }\n  }]);\n\n  return PlayerError;\n}();\n\nPlayerError.TYPE = {\n  NOT_REGISTERED_PLUGIN: {\n    name: \"PluginNotRegisteredException\",\n    message: function message(name) {\n      return \"Cannot load \" + name + \" plugin. Name not found in the registry\";\n    }\n  },\n  NOT_VALID_HANDLER: {\n    name: \"PluginHandlerIsNotValidException\",\n    message: function message() {\n      return \"To activate plugin you must provide a class derived from BasePlugin\";\n    }\n  },\n  NOT_IMPLEMENTED_METHOD: {\n    name: \"NotImplementedException\",\n    message: function message(method) {\n      return method + \" method not implemented\";\n    }\n  }\n};\nexports.default = PlayerError;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * @param {number} n - A certain number\n * @returns {boolean} - If the input is a number\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction isNumber(n) {\n  return Number(n) === n;\n}\n\n/**\n * @param {number} n - A certain number\n * @returns {boolean} - If the input is an integer\n */\nfunction isInt(n) {\n  return isNumber(n) && n % 1 === 0;\n}\n\n/**\n * @param {number} n - A certain number\n * @returns {boolean} - If the input is a float\n */\nfunction isFloat(n) {\n  return isNumber(n) && n % 1 !== 0;\n}\n\n/**\n * @param {Object} obj1 - Certain object\n * @param {Object} obj2 - Certain object\n * @returns {*} - The merged object.\n */\nfunction merge(obj1, obj2) {\n  if (!obj1 && !obj2) return {};\n  if (!obj1) return obj2;\n  if (!obj2) return obj1;\n  return Object.assign(obj1, obj2);\n}\n\nexports.isNumber = isNumber;\nexports.isInt = isInt;\nexports.isFloat = isFloat;\nexports.merge = merge;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"name\": \"playkit-js\",\n\t\"version\": \"0.0.1\",\n\t\"main\": \"dist/playkit.js\",\n\t\"scripts\": {\n\t\t\"clean\": \"rm -rf ./dist\",\n\t\t\"prebuild\": \"npm run clean\",\n\t\t\"build\": \"webpack\",\n\t\t\"dev\": \"webpack --progress --colors --watch\",\n\t\t\"test\": \"NODE_ENV=test ./node_modules/.bin/karma start --single-run\",\n\t\t\"test:watch\": \"NODE_ENV=test ./node_modules/.bin/karma start --auto-watch\",\n\t\t\"start\": \"webpack-dev-server\",\n\t\t\"release\": \"NODE_ENV=production npm run build -- -p && git add --all dist && git commit -m'Update dist' && standard-version\",\n\t\t\"eslint\": \"eslint . --color\",\n\t\t\"flow\": \"flow check\",\n\t\t\"prepush\": \"npm run eslint & npm run test & npm run flow\"\n\t},\n\t\"devDependencies\": {\n\t\t\"babel-cli\": \"^6.18.0\",\n\t\t\"babel-core\": \"^6.18.2\",\n\t\t\"babel-eslint\": \"^7.1.1\",\n\t\t\"babel-loader\": \"^6.2.7\",\n\t\t\"babel-plugin-istanbul\": \"^4.0.0\",\n\t\t\"babel-plugin-transform-class-properties\": \"^6.22.0\",\n\t\t\"babel-plugin-transform-flow-strip-types\": \"^6.22.0\",\n\t\t\"babel-preset-es2015\": \"^6.18.0\",\n\t\t\"babel-register\": \"^6.23.0\",\n\t\t\"chai\": \"^3.5.0\",\n\t\t\"cross-env\": \"^3.1.4\",\n\t\t\"eslint\": \"^3.10.0\",\n\t\t\"eslint-loader\": \"^1.6.1\",\n\t\t\"eslint-plugin-flowtype\": \"^2.30.0\",\n\t\t\"eslint-plugin-import\": \"^2.2.0\",\n\t\t\"eslint-plugin-mocha-no-only\": \"^0.0.5\",\n\t\t\"flow-bin\": \"latest\",\n\t\t\"istanbul\": \"^0.4.5\",\n\t\t\"karma\": \"^1.5.0\",\n\t\t\"karma-chai\": \"^0.1.0\",\n\t\t\"karma-chrome-launcher\": \"^2.0.0\",\n\t\t\"karma-cli\": \"^1.0.1\",\n\t\t\"karma-coverage\": \"^1.1.1\",\n\t\t\"karma-mocha\": \"^1.3.0\",\n\t\t\"karma-sourcemap-loader\": \"^0.3.7\",\n\t\t\"karma-webpack\": \"^2.0.2\",\n\t\t\"mocha\": \"^3.2.0\",\n\t\t\"mocha-cli\": \"^1.0.1\",\n\t\t\"nyc\": \"^10.1.2\",\n\t\t\"sinon\": \"^2.0.0\",\n\t\t\"sinon-chai\": \"^2.8.0\",\n\t\t\"standard-version\": \"^4.0.0\",\n\t\t\"uglifyjs-webpack-plugin\": \"^0.4.3\",\n\t\t\"webpack\": \"latest\",\n\t\t\"webpack-dev-server\": \"latest\"\n\t},\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"https://github.com/kaltura/playkit-js\"\n\t},\n\t\"keywords\": [\n\t\t\"kaltura\",\n\t\t\"player\",\n\t\t\"html5 player\"\n\t],\n\t\"license\": \"AGPLV3\",\n\t\"bugs\": {\n\t\t\"url\": \"https://github.com/kaltura/playkit-js/issues\"\n\t},\n\t\"homepage\": \"https://github.com/kaltura/playkit-js\",\n\t\"dependencies\": {\n\t\t\"js-logger\": \"^1.3.0\"\n\t}\n};\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _fakeEventTarget = __webpack_require__(8);\n\nvar _fakeEventTarget2 = _interopRequireDefault(_fakeEventTarget);\n\nvar _fakeEvent = __webpack_require__(1);\n\nvar _fakeEvent2 = _interopRequireDefault(_fakeEvent);\n\nvar _eventManager = __webpack_require__(3);\n\nvar _eventManager2 = _interopRequireDefault(_eventManager);\n\nvar _events = __webpack_require__(4);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _mediaSourceProvider = __webpack_require__(5);\n\nvar _mediaSourceProvider2 = _interopRequireDefault(_mediaSourceProvider);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Html5 = function (_FakeEventTarget) {\n  _inherits(Html5, _FakeEventTarget);\n\n  _createClass(Html5, null, [{\n    key: 'canPlayType',\n    value: function canPlayType(mimeType) {\n      return _mediaSourceProvider2.default.canPlayType(mimeType);\n    }\n  }]);\n\n  function Html5(source, config) {\n    _classCallCheck(this, Html5);\n\n    var _this = _possibleConstructorReturn(this, (Html5.__proto__ || Object.getPrototypeOf(Html5)).call(this));\n\n    _this.createVideoElement();\n    _this._eventManager = new _eventManager2.default();\n    _this.setSource(source, config);\n    _this.attach();\n    return _this;\n  }\n\n  _createClass(Html5, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.detach();\n      if (this._mediaSourceAdapter) {\n        this._mediaSourceAdapter.destroy();\n      }\n      if (this._el) {\n        this.pause();\n        this._el.removeAttribute('src');\n        if (this._el.parentNode) {\n          this._el.parentNode.removeChild(this._el);\n        }\n      }\n    }\n  }, {\n    key: 'attach',\n    value: function attach() {\n      var _this2 = this;\n\n      var _loop = function _loop(playerEvent) {\n        if (_events2.default.hasOwnProperty(playerEvent)) {\n          _this2._eventManager.listen(_this2._el, _events2.default[playerEvent], function () {\n            _this2.dispatchEvent(new _fakeEvent2.default(_events2.default[playerEvent]));\n          });\n        }\n      };\n\n      for (var playerEvent in _events2.default) {\n        _loop(playerEvent);\n      }\n    }\n  }, {\n    key: 'detach',\n    value: function detach() {\n      for (var playerEvent in _events2.default) {\n        if (_events2.default.hasOwnProperty(playerEvent)) {\n          this._eventManager.unlisten(this._el, _events2.default[playerEvent]);\n        }\n      }\n    }\n  }, {\n    key: 'createVideoElement',\n    value: function createVideoElement() {\n      this._el = document.createElement(\"video\");\n      //Set attributes\n      this._el.style.width = \"640px\";\n      this._el.style.height = \"360px\";\n      this._el.style.backgroundColor = \"black\";\n      this._el.controls = true;\n      if (document && document.body) {\n        document.body.appendChild(this._el);\n      }\n    }\n  }, {\n    key: 'getVideoElement',\n    value: function getVideoElement() {\n      return this._el;\n    }\n  }, {\n    key: 'setSource',\n    value: function setSource(source, config) {\n      this.loadMediaSourceAdapter(source, config);\n    }\n  }, {\n    key: 'loadMediaSourceAdapter',\n    value: function loadMediaSourceAdapter(source, config) {\n      this._mediaSourceAdapter = _mediaSourceProvider2.default.getMediaSourceAdapter(this, source, config);\n    }\n  }, {\n    key: 'play',\n\n\n    //playback interface\n    /**\n     * Start/resume playback\n     * @returns {void}\n     */\n    value: function play() {\n      return this._el.play();\n    }\n\n    /**\n     * Pause playback\n     * @returns {void}\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      return this._el.pause();\n    }\n\n    /**\n     * Load media\n     * @returns {void}\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      if (this._mediaSourceAdapter) {\n        this._mediaSourceAdapter.load();\n      }\n    }\n\n    /**\n     * Get the current time in seconds\n     * @returns {Number} - The current playback time\n     */\n\n  }, {\n    key: 'ready',\n\n\n    //state\n    value: function ready() {}\n\n    /**\n     * Get paused state\n     * @returns {boolean} - The paused value of the video element\n     */\n\n  }, {\n    key: 'src',\n    set: function set(source) {\n      //Set source\n      this._el.src = source;\n    },\n    get: function get() {\n      return this._el.src;\n    }\n  }, {\n    key: 'currentTime',\n    get: function get() {\n      return this._el.currentTime;\n    }\n\n    /**\n     * Set the current time in seconds\n     * @param {Number} to - The number to set in seconds\n     */\n    ,\n    set: function set(to) {\n      this._el.currentTime = to;\n    }\n\n    /**\n     * Get the duration in seconds\n     * @returns {Number} - The playback duration\n     */\n\n  }, {\n    key: 'duration',\n    get: function get() {\n      return this._el.duration;\n    }\n\n    /**\n     * Set playback volume\n     * @param {Number} vol - The volume to set\n     */\n\n  }, {\n    key: 'volume',\n    set: function set(vol) {\n      this._el.volume = vol;\n    }\n\n    /**\n     * Get playback volume\n     * @returns {Number} - The volume value of the video element\n     */\n    ,\n    get: function get() {\n      return this._el.volume;\n    }\n  }, {\n    key: 'paused',\n    get: function get() {\n      return this._el.paused;\n    }\n\n    /**\n     * Get seeking state\n     * @returns {boolean} - The seeking value of the video element\n     */\n\n  }, {\n    key: 'seeking',\n    get: function get() {\n      return this._el.seeking;\n    }\n  }, {\n    key: 'seekable',\n    get: function get() {\n      return this._el.seekable;\n    }\n  }, {\n    key: 'played',\n    get: function get() {\n      return this._el.played;\n    }\n  }, {\n    key: 'buffered',\n    get: function get() {\n      return this._el.buffered;\n    }\n\n    /**\n     * Set player muted state\n     * @param {boolean} mute - The new mute value\n     */\n\n  }, {\n    key: 'muted',\n    set: function set(mute) {\n      this._el.muted = mute;\n    }\n\n    /**\n     * Get player muted state\n     * @returns {boolean} - The muted value of the video element\n     */\n    ,\n    get: function get() {\n      return this._el.muted;\n    }\n  }, {\n    key: 'defaultMuted',\n    get: function get() {\n      return this._el.defaultMuted;\n    }\n  }, {\n    key: 'poster',\n    set: function set(poster) {\n      this._el.poster = poster;\n    },\n    get: function get() {\n      return this._el.poster;\n    }\n  }, {\n    key: 'preload',\n    set: function set(preload) {\n      this._el.preload = preload;\n    },\n    get: function get() {\n      return this._el.preload;\n    }\n  }, {\n    key: 'autoplay',\n    set: function set(autoplay) {\n      this._el.autoplay = autoplay;\n    },\n    get: function get() {\n      return this._el.autoplay;\n    }\n  }, {\n    key: 'loop',\n    set: function set(loop) {\n      this._el.loop = loop;\n    },\n    get: function get() {\n      return this._el.loop;\n    }\n  }, {\n    key: 'controls',\n    set: function set(controls) {\n      this._el.controls = controls;\n    },\n    get: function get() {\n      return this._el.controls;\n    }\n  }, {\n    key: 'playbackRate',\n    set: function set(playbackRate) {\n      this._el.playbackRate = playbackRate;\n    },\n    get: function get() {\n      return this._el.playbackRate;\n    }\n  }, {\n    key: 'defaultPlaybackRate',\n    set: function set(defaultPlaybackRate) {\n      this._el.defaultPlaybackRate = defaultPlaybackRate;\n    },\n    get: function get() {\n      return this._el.defaultPlaybackRate;\n    }\n  }, {\n    key: 'ended',\n    get: function get() {\n      return this._el.ended;\n    }\n  }, {\n    key: 'error',\n    get: function get() {\n      return this._el.error;\n    }\n  }, {\n    key: 'networkState',\n    get: function get() {\n      return this._el.networkState;\n    }\n  }, {\n    key: 'readyState',\n    get: function get() {\n      return this._el.readyState;\n    }\n  }, {\n    key: 'videoHeight',\n    get: function get() {\n      return this._el.videoHeight;\n    }\n  }, {\n    key: 'videoWidth',\n    get: function get() {\n      return this._el.videoWidth;\n    }\n  }], [{\n    key: 'isSupported',\n    value: function isSupported() {\n      try {\n        Html5.TEST_VID = document.createElement('video');\n        Html5.TEST_VID.volume = 0.5;\n      } catch (e) {\n        return false;\n      }\n\n      return !!Html5.TEST_VID.canPlayType;\n    }\n  }]);\n\n  return Html5;\n}(_fakeEventTarget2.default);\n\n//Engine.register(\"html5\", Html5);\n\n\nHtml5.EngineName = \"html5\";\nexports.default = Html5;\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _logger = __webpack_require__(0);\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * An illustration of media source extension for progressive download\n * @classdesc\n * @implements {IMediaSourceAdapter}\n */\nvar NativeAdapter = function () {\n  _createClass(NativeAdapter, null, [{\n    key: \"name\",\n\n    /**\n     * Getter for the adapter name\n     * @returns {string} - The adapter name\n     */\n    get: function get() {\n      return NativeAdapter._name;\n    }\n\n    /**\n     * The adapter logger\n     * @member {any} _logger\n     * @private\n     * @static\n     */\n\n    /**\n     * The name of the Adapter\n     * @member {string} _name\n     * @static\n     * @private\n     */\n\n  }]);\n\n  /**\n   * @constructor\n   * @param {IEngine} engine - The video element which bind to NativeAdapter\n   * @param {string} source - The source URL\n   * @param {Object} config - The media source adapter configuration\n   */\n\n  /**\n   * The adapter config\n   * @member {Object} _config\n   * @private\n   */\n\n  /**\n   * The owning engine\n   * @member {IEngine} _engine\n   * @private\n   */\n\n  /**\n   * The dom video element\n   * @member {HTMLVideoElement} _videoElement\n   * @private\n   */\n\n  /**\n   * The source url\n   * @member {string} _source\n   * @private\n   */\n  function NativeAdapter(engine, source, config) {\n    _classCallCheck(this, NativeAdapter);\n\n    this._engine = engine;\n    this._config = config;\n    this._videoElement = engine.getVideoElement();\n    this._source = source.url;\n    if (source) {\n      this._videoElement.src = source.url;\n    }\n  }\n\n  /**\n   * Checks if NativeAdapter can play a given mime type\n   * @function canPlayType\n   * @param {string} mimeType - The mime type to check\n   * @returns {boolean} - Whether the native adapter can play a specific mime type\n   * @static\n   */\n\n\n  _createClass(NativeAdapter, [{\n    key: \"load\",\n\n\n    /**\n     * Load the video source\n     * @function load\n     * @returns {void}\n     */\n    value: function load() {\n      NativeAdapter._logger.debug('load');\n      this._videoElement.load();\n    }\n\n    /**\n     * Clearing the video source\n     * @function destroy\n     * @returns {void}\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      NativeAdapter._logger.debug('destroy');\n      this._videoElement.src = \"\";\n    }\n  }], [{\n    key: \"canPlayType\",\n    value: function canPlayType(mimeType) {\n      var canPlayType = !!document.createElement(\"video\").canPlayType(mimeType);\n      NativeAdapter._logger.debug('canPlayType result for mimeType:' + mimeType + ' is ' + canPlayType.toString());\n      return canPlayType;\n    }\n\n    /**\n     * Checks if the media source adapter is supported\n     * @function isSupported\n     * @returns {boolean} - Whether the media source adapter is supported. Default implementation is true\n     * @static\n     */\n\n  }, {\n    key: \"isSupported\",\n    value: function isSupported() {\n      NativeAdapter._logger.debug('isSupported:true');\n      return true;\n    }\n\n    /**\n     * Factory method to create media source adapter\n     * @function createAdapter\n     * @param {IEngine} engine - The video engine that the media source adapter work with\n     * @param {Object} source - The source Object\n     * @param {Object} config - The media source adapter configuration\n     * @returns {IMediaSourceAdapter} - New instance of the run time media source adapter\n     * @static\n     */\n\n  }, {\n    key: \"createAdapter\",\n    value: function createAdapter(engine, source, config) {\n      NativeAdapter._logger.debug('Creating adapter');\n      return new this(engine, source, config);\n    }\n  }]);\n\n  return NativeAdapter;\n}();\n\nNativeAdapter._name = \"NativeAdapter\";\nNativeAdapter._logger = _logger2.default.getLogger(NativeAdapter._name);\nexports.default = NativeAdapter;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VERSION = exports.BasePlugin = exports.registerPlugin = exports.registerMediaSourceAdapter = undefined;\nexports.playkit = playkit;\n\nvar _player = __webpack_require__(2);\n\nvar _player2 = _interopRequireDefault(_player);\n\nvar _logger = __webpack_require__(0);\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nvar _package = __webpack_require__(13);\n\nvar packageData = _interopRequireWildcard(_package);\n\nvar _mediaSourceProvider = __webpack_require__(5);\n\nvar _pluginManager = __webpack_require__(7);\n\nvar _basePlugin = __webpack_require__(6);\n\nvar _basePlugin2 = _interopRequireDefault(_basePlugin);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Playkit version\nvar VERSION = packageData.version;\n\n_logger2.default.getLogger().log(\"%c Playkit \" + VERSION, \"color: yellow; font-size: large\");\n_logger2.default.getLogger().log(\"%c For more details see https://github.com/kaltura/playkit-js\", \"color: yellow;\");\n\n/**\n * @param {Object} config - The configuration of the player\n * @returns {Player} - The player instance\n */\nfunction playkit() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  return new _player2.default(config);\n}\n\n// Registration for media source adapters\nexports.registerMediaSourceAdapter = _mediaSourceProvider.registerMediaSourceAdapter;\n\n// Export the plugin framework\n\nexports.registerPlugin = _pluginManager.registerPlugin;\nexports.BasePlugin = _basePlugin2.default;\n\n//export version\n\nexports.VERSION = VERSION;\nexports.default = playkit;\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _player = __webpack_require__(2);\n\nvar _player2 = _interopRequireDefault(_player);\n\nvar _eventManager = __webpack_require__(3);\n\nvar _eventManager2 = _interopRequireDefault(_eventManager);\n\nvar _state = __webpack_require__(18);\n\nvar _state2 = _interopRequireDefault(_state);\n\nvar _stateTypes = __webpack_require__(9);\n\nvar _stateTypes2 = _interopRequireDefault(_stateTypes);\n\nvar _events = __webpack_require__(4);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _fakeEvent = __webpack_require__(1);\n\nvar _fakeEvent2 = _interopRequireDefault(_fakeEvent);\n\nvar _logger = __webpack_require__(0);\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * This class responsible to manage all the state machine of the player.\n * @classdesc\n */\n\n\n/**\n * Define a transition object.\n */\nvar StateManager = function () {\n\n  /**\n   * @constructor\n   * @param {Player} player - Reference to the player.\n   */\n\n  /**\n   * Holds the state history of the player.\n   * @member\n   * @type {Array<State>}\n   * @private\n   */\n\n  /**\n   * Holds the current state of the player.\n   * @member\n   * @type {State}\n   * @private\n   */\n\n  /**\n   * Reference to the actual player.\n   * @member\n   * @type {Player}\n   * @private\n   */\n  function StateManager(player) {\n    var _this = this,\n        _PlayerStates$IDLE,\n        _PlayerStates$LOADING,\n        _PlayerStates$PAUSED,\n        _PlayerStates$PLAYING,\n        _PlayerStates$BUFFERI,\n        _transitions;\n\n    _classCallCheck(this, StateManager);\n\n    this._transitions = (_transitions = {}, _defineProperty(_transitions, _stateTypes2.default.IDLE, (_PlayerStates$IDLE = {}, _defineProperty(_PlayerStates$IDLE, _events2.default.LOAD_START, function () {\n      _this._updateState(_stateTypes2.default.LOADING);\n      _this._dispatchEvent();\n    }), _defineProperty(_PlayerStates$IDLE, _events2.default.PLAY, function () {\n      _this._updateState(_stateTypes2.default.BUFFERING);\n      _this._dispatchEvent();\n    }), _PlayerStates$IDLE)), _defineProperty(_transitions, _stateTypes2.default.LOADING, (_PlayerStates$LOADING = {}, _defineProperty(_PlayerStates$LOADING, _events2.default.LOADED_METADATA, function () {\n      if (_this._player.config.autoPlay) {\n        _this._updateState(_stateTypes2.default.PLAYING);\n      } else {\n        _this._updateState(_stateTypes2.default.PAUSED);\n      }\n      _this._dispatchEvent();\n    }), _defineProperty(_PlayerStates$LOADING, _events2.default.ERROR, function () {\n      _this._updateState(_stateTypes2.default.IDLE);\n      _this._dispatchEvent();\n    }), _PlayerStates$LOADING)), _defineProperty(_transitions, _stateTypes2.default.PAUSED, (_PlayerStates$PAUSED = {}, _defineProperty(_PlayerStates$PAUSED, _events2.default.PLAY, function () {\n      _this._updateState(_stateTypes2.default.PLAYING);\n      _this._dispatchEvent();\n    }), _defineProperty(_PlayerStates$PAUSED, _events2.default.PLAYING, function () {\n      _this._updateState(_stateTypes2.default.PLAYING);\n      _this._dispatchEvent();\n    }), _defineProperty(_PlayerStates$PAUSED, _events2.default.ENDED, function () {\n      _this._updateState(_stateTypes2.default.IDLE);\n      _this._dispatchEvent();\n    }), _PlayerStates$PAUSED)), _defineProperty(_transitions, _stateTypes2.default.PLAYING, (_PlayerStates$PLAYING = {}, _defineProperty(_PlayerStates$PLAYING, _events2.default.PAUSE, function () {\n      _this._updateState(_stateTypes2.default.PAUSED);\n      _this._dispatchEvent();\n    }), _defineProperty(_PlayerStates$PLAYING, _events2.default.WAITING, function () {\n      _this._updateState(_stateTypes2.default.BUFFERING);\n      _this._dispatchEvent();\n    }), _defineProperty(_PlayerStates$PLAYING, _events2.default.ENDED, function () {\n      _this._updateState(_stateTypes2.default.IDLE);\n      _this._dispatchEvent();\n    }), _defineProperty(_PlayerStates$PLAYING, _events2.default.ERROR, function () {\n      _this._updateState(_stateTypes2.default.IDLE);\n      _this._dispatchEvent();\n    }), _PlayerStates$PLAYING)), _defineProperty(_transitions, _stateTypes2.default.BUFFERING, (_PlayerStates$BUFFERI = {}, _defineProperty(_PlayerStates$BUFFERI, _events2.default.PLAYING, function () {\n      _this._updateState(_stateTypes2.default.PLAYING);\n      _this._dispatchEvent();\n    }), _defineProperty(_PlayerStates$BUFFERI, _events2.default.PAUSE, function () {\n      _this._updateState(_stateTypes2.default.PAUSED);\n      _this._dispatchEvent();\n    }), _PlayerStates$BUFFERI)), _transitions);\n\n    this._player = player;\n    this._logger = _logger2.default.getLogger(\"StateManager\");\n    this._eventManager = new _eventManager2.default();\n    this._history = [];\n    this._prevState = null;\n    this._curState = new _state2.default(_stateTypes2.default.IDLE);\n    this._attachListeners();\n  }\n\n  /**\n   * Register to all necessary events which impacts on the player state.\n   * @private\n   * @returns {void}\n   */\n\n  /**\n   * The possible transitions from one state to another.\n   * @type {Array<Transition>}\n   * @private\n   */\n\n  /**\n   * Holds the previous state of the player.\n   * @member\n   * @type {State | null}\n   * @private\n   */\n\n  /**\n   * The event manager of the class.\n   * @member\n   * @type {EventManager}\n   * @private\n   */\n\n  /**\n   * The logger of the class.\n   * @member\n   * @type {any}\n   * @private\n   */\n\n\n  _createClass(StateManager, [{\n    key: '_attachListeners',\n    value: function _attachListeners() {\n      this._eventManager.listen(this._player, _events2.default.ERROR, this._doTransition.bind(this));\n      this._eventManager.listen(this._player, _events2.default.ENDED, this._doTransition.bind(this));\n      this._eventManager.listen(this._player, _events2.default.PLAY, this._doTransition.bind(this));\n      this._eventManager.listen(this._player, _events2.default.LOAD_START, this._doTransition.bind(this));\n      this._eventManager.listen(this._player, _events2.default.PLAYING, this._doTransition.bind(this));\n      this._eventManager.listen(this._player, _events2.default.LOADED_METADATA, this._doTransition.bind(this));\n      this._eventManager.listen(this._player, _events2.default.PAUSE, this._doTransition.bind(this));\n      this._eventManager.listen(this._player, _events2.default.WAITING, this._doTransition.bind(this));\n    }\n\n    /**\n     * Performs a state transition depends on the event which occurs in the player system.\n     * @param {FakeEvent} event - The event occurs in the player system.\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_doTransition',\n    value: function _doTransition(event) {\n      this._logger.debug('Do transition request', event);\n      var transition = this._transitions[this._curState.type];\n      if (typeof transition[event.type] === 'function') {\n        transition[event.type]();\n      }\n    }\n\n    /**\n     * Updates the player's state.\n     * @param {string} type - The type of the new state.\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_updateState',\n    value: function _updateState(type) {\n      if (this._curState.type !== type) {\n        this._curState.duration = Date.now() / 1000;\n        this._history.push(this._curState);\n        this._prevState = this._curState;\n        this._curState = new _state2.default(type);\n        this._logger.debug('Switch player state: from ' + this._prevState.type + ' to ' + this._curState.type);\n      }\n    }\n\n    /**\n     * Fires the playerStateChanged event after state has been changed.\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_dispatchEvent',\n    value: function _dispatchEvent() {\n      var event = new _fakeEvent2.default(_events2.default.PLAYER_STATE_CHANGED, {\n        'oldState': this._prevState,\n        'newState': this._curState\n      });\n      this._player.dispatchEvent(event);\n    }\n\n    /**\n     * Destroys the state manager.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._history = [];\n      this._eventManager.destroy();\n    }\n\n    /**\n     * Getter to the current state of the player.\n     * @public\n     * @returns {State} - The current state object\n     */\n\n  }, {\n    key: 'currentState',\n    get: function get() {\n      return this._curState;\n    }\n\n    /**\n     * Getter to the previous state of the player.\n     * @public\n     * @returns {State|null} - The previous state object, or null if such doesn't exists\n     */\n\n  }, {\n    key: 'previousState',\n    get: function get() {\n      return this._prevState;\n    }\n\n    /**\n     * Getter to the state history of the player.\n     * @public\n     * @returns {Array.<State>} - The full states history objects\n     */\n\n  }, {\n    key: 'history',\n    get: function get() {\n      return this._history;\n    }\n  }]);\n\n  return StateManager;\n}();\n\nexports.default = StateManager;\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * This class describes a player state.\n * @classdesc\n */\nvar State = function () {\n\n  /**\n   * @constructor\n   * @param {string} type - The type of the state.\n   */\n\n  /**\n   * The duration that the player was in this state.\n   * @member\n   * @type {number}\n   * @private\n   */\n  function State(type) {\n    _classCallCheck(this, State);\n\n    this.type = type;\n    this._duration = 0;\n    this._timestamp = Date.now() / 1000;\n  }\n\n  /**\n   * Getter for the duration of the state.\n   * @returns {number} - The duration of the state\n   */\n\n  /**\n   * The timestamp that this state started.\n   * @member\n   * @type {number}\n   * @private\n   */\n\n  /**\n   * The type of the state.\n   * Can be one of those describes in states.js\n   * @member\n   * @type {string}\n   * @public\n   */\n\n\n  _createClass(State, [{\n    key: \"duration\",\n    get: function get() {\n      return this._duration;\n    }\n\n    /**\n     * Setter for the duration of the state.\n     * @param {number} endTime - The timestamp of the next state.\n     */\n    ,\n    set: function set(endTime) {\n      this._duration = endTime - this._timestamp;\n    }\n  }]);\n\n  return State;\n}();\n\nexports.default = State;\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Uppercase the first letter of a string\n * @param  {String} string - String to be uppercased\n * @return {String} - The uppercased string\n * @private\n * @method toTitleCase\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction capitlize(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n/**\n * @param {string} string - Certain string\n * @param {string} searchString - Certain string\n * @returns {boolean} - Whether the string: string is ending with string: searchString\n */\nfunction endsWith(string, searchString) {\n  if (typeof string !== 'string' || typeof searchString !== 'string') {\n    return false;\n  }\n  return string.indexOf(searchString, string.length - searchString.length) != -1;\n}\n\nexports.capitlize = capitlize;\nexports.endsWith = endsWith;\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\r\n * js-logger - http://github.com/jonnyreeves/js-logger\r\n * Jonny Reeves, http://jonnyreeves.co.uk/\r\n * js-logger may be freely distributed under the MIT license.\r\n */\r\n(function (global) {\r\n\t\"use strict\";\r\n\r\n\t// Top level module for the global, static logger instance.\r\n\tvar Logger = { };\r\n\r\n\t// For those that are at home that are keeping score.\r\n\tLogger.VERSION = \"1.3.0\";\r\n\r\n\t// Function which handles all incoming log messages.\r\n\tvar logHandler;\r\n\r\n\t// Map of ContextualLogger instances by name; used by Logger.get() to return the same named instance.\r\n\tvar contextualLoggersByNameMap = {};\r\n\r\n\t// Polyfill for ES5's Function.bind.\r\n\tvar bind = function(scope, func) {\r\n\t\treturn function() {\r\n\t\t\treturn func.apply(scope, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\t// Super exciting object merger-matron 9000 adding another 100 bytes to your download.\r\n\tvar merge = function () {\r\n\t\tvar args = arguments, target = args[0], key, i;\r\n\t\tfor (i = 1; i < args.length; i++) {\r\n\t\t\tfor (key in args[i]) {\r\n\t\t\t\tif (!(key in target) && args[i].hasOwnProperty(key)) {\r\n\t\t\t\t\ttarget[key] = args[i][key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\t// Helper to define a logging level object; helps with optimisation.\r\n\tvar defineLogLevel = function(value, name) {\r\n\t\treturn { value: value, name: name };\r\n\t};\r\n\r\n\t// Predefined logging levels.\r\n\tLogger.DEBUG = defineLogLevel(1, 'DEBUG');\r\n\tLogger.INFO = defineLogLevel(2, 'INFO');\r\n\tLogger.TIME = defineLogLevel(3, 'TIME');\r\n\tLogger.WARN = defineLogLevel(4, 'WARN');\r\n\tLogger.ERROR = defineLogLevel(8, 'ERROR');\r\n\tLogger.OFF = defineLogLevel(99, 'OFF');\r\n\r\n\t// Inner class which performs the bulk of the work; ContextualLogger instances can be configured independently\r\n\t// of each other.\r\n\tvar ContextualLogger = function(defaultContext) {\r\n\t\tthis.context = defaultContext;\r\n\t\tthis.setLevel(defaultContext.filterLevel);\r\n\t\tthis.log = this.info;  // Convenience alias.\r\n\t};\r\n\r\n\tContextualLogger.prototype = {\r\n\t\t// Changes the current logging level for the logging instance.\r\n\t\tsetLevel: function (newLevel) {\r\n\t\t\t// Ensure the supplied Level object looks valid.\r\n\t\t\tif (newLevel && \"value\" in newLevel) {\r\n\t\t\t\tthis.context.filterLevel = newLevel;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Is the logger configured to output messages at the supplied level?\r\n\t\tenabledFor: function (lvl) {\r\n\t\t\tvar filterLevel = this.context.filterLevel;\r\n\t\t\treturn lvl.value >= filterLevel.value;\r\n\t\t},\r\n\r\n\t\tdebug: function () {\r\n\t\t\tthis.invoke(Logger.DEBUG, arguments);\r\n\t\t},\r\n\r\n\t\tinfo: function () {\r\n\t\t\tthis.invoke(Logger.INFO, arguments);\r\n\t\t},\r\n\r\n\t\twarn: function () {\r\n\t\t\tthis.invoke(Logger.WARN, arguments);\r\n\t\t},\r\n\r\n\t\terror: function () {\r\n\t\t\tthis.invoke(Logger.ERROR, arguments);\r\n\t\t},\r\n\r\n\t\ttime: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'start' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttimeEnd: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'end' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Invokes the logger callback if it's not being filtered.\r\n\t\tinvoke: function (level, msgArgs) {\r\n\t\t\tif (logHandler && this.enabledFor(level)) {\r\n\t\t\t\tlogHandler(msgArgs, merge({ level: level }, this.context));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Protected instance which all calls to the to level `Logger` module will be routed through.\r\n\tvar globalLogger = new ContextualLogger({ filterLevel: Logger.OFF });\r\n\r\n\t// Configure the global Logger instance.\r\n\t(function() {\r\n\t\t// Shortcut for optimisers.\r\n\t\tvar L = Logger;\r\n\r\n\t\tL.enabledFor = bind(globalLogger, globalLogger.enabledFor);\r\n\t\tL.debug = bind(globalLogger, globalLogger.debug);\r\n\t\tL.time = bind(globalLogger, globalLogger.time);\r\n\t\tL.timeEnd = bind(globalLogger, globalLogger.timeEnd);\r\n\t\tL.info = bind(globalLogger, globalLogger.info);\r\n\t\tL.warn = bind(globalLogger, globalLogger.warn);\r\n\t\tL.error = bind(globalLogger, globalLogger.error);\r\n\r\n\t\t// Don't forget the convenience alias!\r\n\t\tL.log = L.info;\r\n\t}());\r\n\r\n\t// Set the global logging handler.  The supplied function should expect two arguments, the first being an arguments\r\n\t// object with the supplied log messages and the second being a context object which contains a hash of stateful\r\n\t// parameters which the logging function can consume.\r\n\tLogger.setHandler = function (func) {\r\n\t\tlogHandler = func;\r\n\t};\r\n\r\n\t// Sets the global logging filter level which applies to *all* previously registered, and future Logger instances.\r\n\t// (note that named loggers (retrieved via `Logger.get`) can be configured independently if required).\r\n\tLogger.setLevel = function(level) {\r\n\t\t// Set the globalLogger's level.\r\n\t\tglobalLogger.setLevel(level);\r\n\r\n\t\t// Apply this level to all registered contextual loggers.\r\n\t\tfor (var key in contextualLoggersByNameMap) {\r\n\t\t\tif (contextualLoggersByNameMap.hasOwnProperty(key)) {\r\n\t\t\t\tcontextualLoggersByNameMap[key].setLevel(level);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Retrieve a ContextualLogger instance.  Note that named loggers automatically inherit the global logger's level,\r\n\t// default context and log handler.\r\n\tLogger.get = function (name) {\r\n\t\t// All logger instances are cached so they can be configured ahead of use.\r\n\t\treturn contextualLoggersByNameMap[name] ||\r\n\t\t\t(contextualLoggersByNameMap[name] = new ContextualLogger(merge({ name: name }, globalLogger.context)));\r\n\t};\r\n\r\n\t// CreateDefaultHandler returns a handler function which can be passed to `Logger.setHandler()` which will\r\n\t// write to the window's console object (if present); the optional options object can be used to customise the\r\n\t// formatter used to format each log message.\r\n\tLogger.createDefaultHandler = function (options) {\r\n\t\toptions = options || {};\r\n\r\n\t\toptions.formatter = options.formatter || function defaultMessageFormatter(messages, context) {\r\n\t\t\t// Prepend the logger's name to the log message for easy identification.\r\n\t\t\tif (context.name) {\r\n\t\t\t\tmessages.unshift(\"[\" + context.name + \"]\");\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Map of timestamps by timer labels used to track `#time` and `#timeEnd()` invocations in environments\r\n\t\t// that don't offer a native console method.\r\n\t\tvar timerStartTimeByLabelMap = {};\r\n\r\n\t\t// Support for IE8+ (and other, slightly more sane environments)\r\n\t\tvar invokeConsoleMethod = function (hdlr, messages) {\r\n\t\t\tFunction.prototype.apply.call(hdlr, console, messages);\r\n\t\t};\r\n\r\n\t\t// Check for the presence of a logger.\r\n\t\tif (typeof console === \"undefined\") {\r\n\t\t\treturn function () { /* no console */ };\r\n\t\t}\r\n\r\n\t\treturn function(messages, context) {\r\n\t\t\t// Convert arguments object to Array.\r\n\t\t\tmessages = Array.prototype.slice.call(messages);\r\n\r\n\t\t\tvar hdlr = console.log;\r\n\t\t\tvar timerLabel;\r\n\r\n\t\t\tif (context.level === Logger.TIME) {\r\n\t\t\t\ttimerLabel = (context.name ? '[' + context.name + '] ' : '') + messages[0];\r\n\r\n\t\t\t\tif (messages[1] === 'start') {\r\n\t\t\t\t\tif (console.time) {\r\n\t\t\t\t\t\tconsole.time(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttimerStartTimeByLabelMap[timerLabel] = new Date().getTime();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (console.timeEnd) {\r\n\t\t\t\t\t\tconsole.timeEnd(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinvokeConsoleMethod(hdlr, [ timerLabel + ': ' +\r\n\t\t\t\t\t\t\t(new Date().getTime() - timerStartTimeByLabelMap[timerLabel]) + 'ms' ]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Delegate through to custom warn/error loggers if present on the console.\r\n\t\t\t\tif (context.level === Logger.WARN && console.warn) {\r\n\t\t\t\t\thdlr = console.warn;\r\n\t\t\t\t} else if (context.level === Logger.ERROR && console.error) {\r\n\t\t\t\t\thdlr = console.error;\r\n\t\t\t\t} else if (context.level === Logger.INFO && console.info) {\r\n\t\t\t\t\thdlr = console.info;\r\n\t\t\t\t}\r\n\r\n\t\t\t\toptions.formatter(messages, context);\r\n\t\t\t\tinvokeConsoleMethod(hdlr, messages);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t// Configure and example a Default implementation which writes to the `window.console` (if present).  The\r\n\t// `options` hash can be used to configure the default logLevel and provide a custom message formatter.\r\n\tLogger.useDefaults = function(options) {\r\n\t\tLogger.setLevel(options && options.defaultLevel || Logger.DEBUG);\r\n\t\tLogger.setHandler(Logger.createDefaultHandler(options));\r\n\t};\r\n\r\n\t// Export to popular environments boilerplate.\r\n\tif (true) {\r\n\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (Logger),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t}\r\n\telse if (typeof module !== 'undefined' && module.exports) {\r\n\t\tmodule.exports = Logger;\r\n\t}\r\n\telse {\r\n\t\tLogger._prevLogger = global.Logger;\r\n\r\n\t\tLogger.noConflict = function () {\r\n\t\t\tglobal.Logger = Logger._prevLogger;\r\n\t\t\treturn Logger;\r\n\t\t};\r\n\r\n\t\tglobal.Logger = Logger;\r\n\t}\r\n}(this));\r\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// playkit.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ac649955fb15e33dceff","//@flow\nimport * as JsLogger from 'js-logger';\n\nconst LOG_LEVEL: { [level: string]: Object } = {\n  \"DEBUG\": JsLogger.DEBUG,\n  \"INFO\": JsLogger.INFO,\n  \"TIME\": JsLogger.TIME,\n  \"WARN\": JsLogger.WARN,\n  \"ERROR\": JsLogger.ERROR,\n  \"OFF\": JsLogger.OFF\n};\n\nclass LoggerFactory {\n  constructor(options?: Object) {\n    JsLogger.useDefaults(options || {});\n  }\n\n  getLogger(name?: string) {\n    if (!name) {\n      return JsLogger;\n    }\n    return JsLogger.get(name);\n  }\n}\n\nconst lf = new LoggerFactory({defaultLevel: JsLogger.DEBUG});\n\nexport default lf;\nexport {LOG_LEVEL};\n\n\n\n// WEBPACK FOOTER //\n// ./utils/logger.js","//@flow\n/**\n * Create an Event work-alike object based on the dictionary.\n * The event should contain all of the same properties from the dict.\n * @param {string} type -\n * @param {Object=} opt_dict -\n * @constructor\n * @extends {Event}\n */\nclass FakeEvent {\n  /** @const {boolean} */\n  bubbles: boolean;\n\n  /** @const {boolean} */\n  cancelable: boolean;\n\n  /** @const {boolean} */\n  defaultPrevented: boolean;\n\n  /**\n   * According to MDN, Chrome uses high-res timers instead of epoch time.\n   * Follow suit so that timeStamps on FakeEvents use the same base as\n   * on native Events.\n   * @const {number}\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Event/timeStamp\n   */\n  timeStamp: number | Date;\n\n  /** @const {string} */\n  type: string;\n\n  /** @const {boolean} */\n  isTrusted: boolean;\n\n  /** @type {EventTarget} */\n  currentTarget: any;\n\n  /** @type {EventTarget} */\n  target: any;\n\n  /**\n   * Non-standard property read by FakeEventTarget to stop processing listeners.\n   * @type {boolean}\n   */\n  stopped: boolean;\n\n  payload: any;\n\n  constructor(type: string, payload: any) {\n    // These Properties below cannot be set by dict.  They are all provided for\n    // compatibility with native events.\n\n    /** @const {boolean} */\n    this.bubbles = false;\n\n    /** @const {boolean} */\n    this.cancelable = false;\n\n    /** @const {boolean} */\n    this.defaultPrevented = false;\n\n    /**\n     * According to MDN, Chrome uses high-res timers instead of epoch time.\n     * Follow suit so that timeStamps on FakeEvents use the same base as\n     * on native Events.\n     * @const {number}\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Event/timeStamp\n     */\n    this.timeStamp = window.performance ? window.performance.now() : Date.now();\n\n    /** @const {string} */\n    this.type = type;\n\n    /** @const {boolean} */\n    this.isTrusted = false;\n\n    /** @type {EventTarget} */\n    this.currentTarget = null;\n\n    /** @type {EventTarget} */\n    this.target = null;\n\n\n    /**\n     * Non-standard property read by FakeEventTarget to stop processing listeners.\n     * @type {boolean}\n     */\n    this.stopped = false;\n\n    this.payload = payload;\n  }\n\n  /**\n   * Does nothing, since FakeEvents have no default.  Provided for compatibility\n   * with native Events.\n   * @override\n   */\n  preventDefault() {\n  }\n\n  /**\n   * Stops processing event listeners for this event.  Provided for compatibility\n   * with native Events.\n   * @override\n   */\n  stopImmediatePropagation() {\n    this.stopped = true;\n  }\n\n  /**\n   * Does nothing, since FakeEvents do not bubble.  Provided for compatibility\n   * with native Events.\n   * @override\n   */\n  stopPropagation() {\n  }\n}\n\nexport default FakeEvent;\n\n\n\n// WEBPACK FOOTER //\n// ./event/fake-event.js","//@flow\nimport EventManager from './event/event-manager'\nimport FakeEventTarget from './event/fake-event-target'\nimport FakeEvent from './event/fake-event'\nimport PlayerEvents from './event/events'\nimport PlayerStates from './state/state-types'\nimport {isNumber, isFloat} from './utils/util'\nimport {capitlize} from './utils/string-util'\nimport LoggerFactory from './utils/logger'\nimport Html5 from './engines/html5/html5'\nimport PluginManager from './plugin/plugin-manager'\nimport StateManager from './state/state-manager'\n\nlet logger = LoggerFactory.getLogger('Player');\ntype ListenerType = (event: FakeEvent) => any;\n\nclass Player extends FakeEventTarget {\n  _pluginManager: PluginManager;\n  _eventManager: EventManager;\n  _config: any;\n  _engine: IEngine;\n  _engineEventHandlers: Map<string, ListenerType>;\n  _stateManager: StateManager;\n\n  constructor(config: Object) {\n    super();\n    this._stateManager = new StateManager(this);\n    this._pluginManager = new PluginManager();\n    this._eventManager = new EventManager();\n    this._engineEventHandlers = new Map();\n    for (let playerEvent in PlayerEvents) {\n      if (PlayerEvents.hasOwnProperty(playerEvent)) {\n        this._engineEventHandlers.set(`onEngine${capitlize(PlayerEvents[playerEvent])}_`, (event) => {\n          return this.dispatchEvent(event);\n        });\n      }\n    }\n    this._config = config || Player.defaultConfig_();\n    this.loadPlugins(this._config);\n    this.selectEngine(this._config);\n    this.attachMedia();\n    logger.info('player is ready!');\n  }\n\n  destroy() {\n    this._engine.destroy();\n    this._eventManager.destroy();\n    this._pluginManager.destroy();\n    this._stateManager.destroy();\n    // this.engine_ = null;\n    // this.eventManager_ = null;\n    this._config = null;\n  }\n\n  static defaultConfig_() {\n    return {};\n  }\n\n  loadPlugins(config: Object): void {\n    let plugins = config.plugins;\n    for (let name in plugins) {\n      if (plugins.hasOwnProperty(name)) {\n        this._pluginManager.load(name, this, plugins[name]);\n      }\n    }\n  }\n\n  selectEngine(config: Object) {\n    if (config && config.sources) {\n      let sources = config.sources;\n      for (let i = 0; i < sources.length; i++) {\n        if (Html5.canPlayType(sources[i].mimetype)) {\n          this.loadEngine(sources[i], config);\n          break;\n        }\n      }\n    }\n  }\n\n  loadEngine(source: Object, config: Object) {\n    this._engine = new Html5(source, config);\n    if (config.preload === \"auto\") {\n      this.load();\n    }\n  }\n\n  attachMedia() {\n    // Listen to all HTML5-defined events and trigger them on the player\n    for (let playerEvent in PlayerEvents) {\n      if (PlayerEvents.hasOwnProperty(playerEvent)) {\n        const handler = this._engineEventHandlers.get(`onEngine${capitlize(PlayerEvents[playerEvent])}_`);\n        if (handler) {\n          this._eventManager.listen(this._engine, PlayerEvents[playerEvent], handler);\n        }\n      }\n    }\n  }\n\n  /**\n   * Get the player config\n   * @returns {Object} - The player configuration\n   */\n  get config(): Object {\n    return this._config;\n  }\n\n  //  <editor-fold desc=\"Playback Interface\">\n  /**\n   * Start/resume playback\n   * @returns {void}\n   */\n  play(): void {\n    return this._engine.play();\n  }\n\n  /**\n   * Pause playback\n   * @returns {void}\n   */\n  pause(): void {\n    return this._engine.pause();\n  }\n\n  /**\n   * Load media\n   * @returns {void}\n   */\n  load(): void {\n    this._engine.load();\n  }\n\n  /**\n   * Set the current time in seconds\n   * @param {Number} to - The number to set in seconds\n   */\n  set currentTime(to: number) {\n    if (isNumber(to)) {\n      let boundedTo = to;\n      if (to < 0) {\n        boundedTo = 0;\n      }\n      if (boundedTo > this._engine.duration) {\n        boundedTo = this._engine.duration;\n      }\n      this._engine.currentTime = boundedTo;\n    }\n  }\n\n  /**\n   * Get the current time in seconds\n   * @returns {Number} - The playback current time\n   */\n  get currentTime(): number {\n    return this._engine.currentTime;\n  }\n\n  /**\n   * /**\n   * Get the duration in seconds\n   * @returns {Number} - The playback duration\n   */\n  get duration(): number {\n    return this._engine.duration;\n  }\n\n  /**\n   * Set playback volume\n   * @param {Number} vol - The volume to set\n   */\n  set volume(vol: number) {\n    if (isFloat(vol)) {\n      let boundedVol = vol;\n      if (boundedVol < 0) {\n        boundedVol = 0;\n      }\n      if (boundedVol > 1) {\n        boundedVol = 1;\n      }\n      this._engine.volume = boundedVol;\n    }\n  }\n\n  /**\n   * Get playback volume\n   * @returns {Number} - The playback volume\n   */\n  get volume(): number {\n    return this._engine.volume;\n  }\n\n  // </editor-fold>\n\n  // <editor-fold desc=\"State\">\n  ready() {\n  }\n\n  /**\n   * Get paused state\n   * @returns {boolean} - Whether the video is paused or not\n   */\n  get paused(): boolean {\n    return this._engine.paused;\n  }\n\n  /**\n   * Get seeking state\n   * @returns {boolean} - Whether the video is seeking or not\n   */\n  get seeking(): boolean {\n    return this._engine.seeking;\n  }\n\n  buffered() {\n  }\n\n  /**\n   * Set player muted state\n   * @param {boolean} mute - The mute value\n   */\n  set muted(mute: boolean) {\n    this._engine.muted = mute;\n  }\n\n  /**\n   * Get player muted state\n   * @returns {boolean} - Whether the video is muted or not\n   */\n  get muted(): boolean {\n    return this._engine.muted;\n  }\n\n  /**\n   * Get the player source\n   * @returns {string} - The current source of the player\n   */\n  get src(): string {\n    return this._engine.src;\n  }\n\n  /**\n   * Get the player events\n   * @returns {Object} - The events of the player\n   * @constructor\n   */\n  get Event(): { [event: string]: string } {\n    return PlayerEvents;\n  }\n\n  /**\n   * Get the player states\n   * @returns {Object} - The states of the player\n   * @constructor\n   */\n  get State(): { [state: string]: string } {\n    return PlayerStates;\n  }\n\n// </editor-fold>\n}\n\nexport default Player;\n\n\n\n// WEBPACK FOOTER //\n// ./player.js","//@flow\nimport MultiMap from '../utils/multi-map'\nimport FakeEvent from './fake-event'\n\n/**\n * Creates a new EventManager. An EventManager maintains a collection of \"event\n * bindings\" between event targets and event listeners.\n *\n * @struct\n * @constructor\n * @implements {IDestroyable}\n */\nclass EventManager {\n  _bindingMap: MultiMap<Binding_> | null;\n\n  constructor() {\n    /**\n     * Maps an event type to an array of event bindings.\n     * @private {MultiMap.<!EventManager.Binding_>}\n     */\n    this._bindingMap = new MultiMap();\n  }\n\n  /**\n   * Detaches all event listeners.\n   * @override\n   */\n  destroy() {\n    this.removeAll();\n    this._bindingMap = null;\n    return Promise.resolve();\n  }\n\n\n  /**\n   * Attaches an event listener to an event target.\n   * @param {EventTarget} target The event target.\n   * @param {string} type The event type.\n   * @param {EventManager.ListenerType} listener The event listener.\n   * @returns {void}\n   */\n  listen(target: any, type: string, listener: ListenerType): void {\n    let binding = new Binding_(target, type, listener);\n    if (this._bindingMap) {\n      this._bindingMap.push(type, binding);\n    }\n  }\n\n\n  /**\n   * Detaches an event listener from an event target.\n   * @param {EventTarget} target The event target.\n   * @param {string} type The event type.\n   * @returns {void}\n   */\n  unlisten(target: any, type: string): void {\n    if (this._bindingMap) {\n      let list = this._bindingMap.get(type);\n\n      for (let i = 0; i < list.length; ++i) {\n        let binding = list[i];\n\n        if (binding.target == target) {\n          binding.unlisten();\n          if (this._bindingMap) {\n            this._bindingMap.remove(type, binding);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Detaches all event listeners from all targets.\n   * @returns {void}\n   */\n  removeAll(): void {\n    if (this._bindingMap) {\n      let listeners = this._bindingMap.getAll();\n\n      for (let listener of listeners) {\n        listener.unlisten();\n      }\n      if (this._bindingMap) {\n        this._bindingMap.clear();\n      }\n    }\n  }\n}\n\n/**\n * @typedef {function(!Event)}\n */\ntype ListenerType = (event: FakeEvent) => any;\n\n/**\n * Creates a new Binding_ and attaches the event listener to the event target.\n * @param {EventTarget} target The event target.\n * @param {string} type The event type.\n * @param {EventManager.ListenerType} listener The event listener.\n * @constructor\n * @private\n */\nclass Binding_ {\n  target: any;\n  type: string;\n  listener: ?ListenerType;\n\n  constructor(target, type, listener) {\n    /** @type {EventTarget} */\n    this.target = target;\n\n    /** @type {string} */\n    this.type = type;\n\n    /** @type {?EventManager.ListenerType} */\n    this.listener = listener;\n\n    this.target.addEventListener(type, listener, false);\n  }\n\n\n  /**\n   * Detaches the event listener from the event target. This does nothing if the\n   * event listener is already detached.\n   * @returns {void}\n   */\n  unlisten(): void {\n    if (!this.target)\n      return;\n\n    this.target.removeEventListener(this.type, this.listener, false);\n\n    this.target = null;\n    this.listener = null;\n  }\n}\n\nexport default EventManager;\n\n\n\n// WEBPACK FOOTER //\n// ./event/event-manager.js","//@flow\nconst PLAYER_EVENTS: { [event: string]: string } = {\n  PLAY: 'play',\n  PAUSE: 'pause',\n  /**\n   * Fired when the media begins to play (either for the first time, after having been paused, or after ending and then restarting)\n   */\n  PLAYING: 'playing',\n  /**\n   * Fired while the user agent is downloading media data\n   */\n  PROGRESS: 'progress',\n  /**\n   * Fires when the loading of an audio/video is aborted\n   */\n  ABORT: 'abort',\n  /**\n   * Fires when an error occurs.  The element's error attribute contains more information\n   */\n  ERROR: 'error',\n  /**\n   * Fires when the browser is intentionally not getting media data\n   */\n  SUSPEND: 'suspend',\n  /**\n   * Fires when the current playlist is empty\n   */\n  EMPTIED: 'emptied',\n  /**\n   * Fires when playback completes\n   */\n  ENDED: 'ended',\n  /**\n   * Fires when the requested operation (such as playback) is delayed pending the completion of another operation (such as a seek)\n   */\n  WAITING: 'waiting',\n  /**\n   * Fires when the browser is trying to get media data, but data is not available\n   */\n  STALLED: 'stalled',\n  /**\n   * Fires when the video is starting to load\n   */\n  LOAD_START: 'loadstart',\n  /**\n   * Fires when the browser has loaded meta data for the audio/video\n   */\n  LOADED_METADATA: 'loadedmetadata',\n  /**\n   * Fires when the browser has loaded the current frame of the audio/video\n   */\n  LOADED_DATA: 'loadeddata',\n  /**\n   * Fires when the current playback position has changed\n   */\n  TIME_UPDATE: 'timeupdate',\n  /**\n   * Fires when the playing speed of the audio/video is changed\n   */\n  RATE_CHANGE: 'ratechange',\n  /**\n   * Fires when the volume has been changed\n   */\n  VOLUME_CHANGE: 'volumechange',\n  /**\n   * Fires when the text track has been changed\n   */\n  TEXT_TRACK_CHANGE: 'texttrackchange',\n  /**\n   * Fires when the player state has been changed\n   */\n  PLAYER_STATE_CHANGED: 'playerStateChanged',\n  /**\n   * Fires when the seeking attribute is set to false indicating that seeking has ended\n   */\n  SEEKED: 'seeked',\n  /**\n   * Fires when the seeking attribute is set to true indicating that seeking is active\n   */\n  SEEKING: 'seeking'\n};\n\nexport default PLAYER_EVENTS;\n\n\n\n\n// WEBPACK FOOTER //\n// ./event/events.js","//@flow\nimport NativeAdapter from './adapters/native-adapter'\nimport LoggerFactory from '../../../utils/logger'\n\n/**\n * Media source provider\n * @classdesc\n */\nexport default class MediaSourceProvider {\n  /**\n   * The logger of the media source provider\n   * @member {any} _logger\n   * @static\n   * @private\n   */\n  static _logger: any = LoggerFactory.getLogger('MediaSourceProvider');\n  /**\n   * The media source adapter registry\n   * @member {Array<IMediaSourceAdapter>} _mediaSourceAdapters\n   * @static\n   * @private\n   */\n  static _mediaSourceAdapters: Array<typeof IMediaSourceAdapter> = [NativeAdapter];\n  /**\n   * The selected adapter for playback\n   * @type {null|IMediaSourceAdapter}\n   * @static\n   * @private\n   */\n  static _selectedAdapter: ?(typeof IMediaSourceAdapter) = null;\n\n  /**\n   * Add a media source adapter to the registry\n   * @function register\n   * @param {IMediaSourceAdapter} mediaSourceAdapter - The media source adapter to register\n   * @static\n   * @returns {void}\n   */\n  static register(mediaSourceAdapter: typeof IMediaSourceAdapter): void {\n    if (mediaSourceAdapter) {\n      if (!MediaSourceProvider._mediaSourceAdapters.includes(mediaSourceAdapter)) {\n        MediaSourceProvider._logger.debug(`Adapter <${mediaSourceAdapter.name}> has been registered successfully.`);\n        MediaSourceProvider._mediaSourceAdapters.push(mediaSourceAdapter);\n      } else {\n        MediaSourceProvider._logger.debug(`Adapter <${mediaSourceAdapter.name}> is already registered, do not register again.`);\n      }\n    }\n  }\n\n  /**\n   * Remove a media source adapter from the registry\n   * @function unRegister\n   * @param {IMediaSourceAdapter} mediaSourceAdapter - The media source adapter to unRegister\n   * @static\n   * @returns {void}\n   */\n  static unRegister(mediaSourceAdapter: typeof IMediaSourceAdapter): void {\n    let index = MediaSourceProvider._mediaSourceAdapters.indexOf(mediaSourceAdapter);\n    if (index > -1) {\n      MediaSourceProvider._logger.debug(`Unregistered <${mediaSourceAdapter.name}> adapter.`);\n      MediaSourceProvider._mediaSourceAdapters.splice(index, 1);\n    }\n  }\n\n  /**\n   * Checks if one of the registered media source adapters can play a given mime type\n   * @function canPlayType\n   * @param {string} mimeType - The mime type to check\n   * @static\n   * @returns {boolean} - If one of the adapters can play the specific mime type\n   */\n  static canPlayType(mimeType: string): boolean {\n    let mediaSourceAdapters = MediaSourceProvider._mediaSourceAdapters;\n    for (let i = 0; i < mediaSourceAdapters.length; i++) {\n      if (mediaSourceAdapters[i].canPlayType(mimeType)) {\n        MediaSourceProvider._selectedAdapter = mediaSourceAdapters[i];\n        MediaSourceProvider._logger.debug(`Selected adapter is <${MediaSourceProvider._selectedAdapter.name}>.`);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the appropriate media source adapter to the video source\n   * @function getMediaSourceAdapter\n   * @param {IEngine} engine - The video engine which requires adapter for a given mimeType\n   * @param {Object} source - The video source\n   * @param {Object} config - The player configuration\n   * @returns {IMediaSourceAdapter|null} - The selected media source adapter, or null if such doesn't exists\n   * @static\n   */\n  static getMediaSourceAdapter(engine: IEngine, source: Object, config: Object): ?IMediaSourceAdapter {\n    if (engine && source && config) {\n      if (!MediaSourceProvider._selectedAdapter) {\n        MediaSourceProvider.canPlayType(source.mimetype);\n      }\n      return MediaSourceProvider._selectedAdapter ? MediaSourceProvider._selectedAdapter.createAdapter(engine, source, config.engines) : null;\n    }\n    return null;\n  }\n}\n\nconst registerMediaSourceAdapter = MediaSourceProvider.register;\nexport {registerMediaSourceAdapter};\n\n\n\n\n// WEBPACK FOOTER //\n// ./engines/html5/media-source/media-source-provider.js","//@flow\nimport Player from '../player'\nimport LoggerFactory from '../utils/logger'\nimport {merge} from '../utils/util'\nimport EventManager from '../event/event-manager'\nimport PlayerError from '../utils/player-error'\n\n/** The BasePlugin responsible to implement the plugin interface.\n * Contains several default implementations.\n * Other plugins should extend this class.\n * @classdesc\n */\nexport default class BasePlugin implements IPlugin {\n  /**\n   * The runtime configuration of the plugin.\n   * @member\n   */\n  config: Object;\n  /**\n   * The name of the plugin.\n   * @member\n   */\n  name: string;\n  /**\n   * The logger of the plugin.\n   * @member\n   */\n  logger: any;\n  /**\n   * Reference to the actual player.\n   * @member\n   */\n  player: Player;\n  /**\n   * The event manager of the plugin.\n   * @member\n   */\n  eventManager: EventManager;\n  /**\n   * The default configuration of the plugin.\n   * Inherited plugins should override this property.\n   * @type {Object}\n   * @static\n   * @member\n   */\n  static defaultConfig: Object = {};\n\n  /**\n   * Factory method to create the actual plugin.\n   * @param {string} name - The plugin name\n   * @param {Player} player - The player reference\n   * @param {Object} config - The plugin configuration\n   * @returns {BasePlugin} - New runtime plugin instance\n   * @static\n   * @public\n   */\n  static createPlugin(name: string, player: Player, config: Object = {}): BasePlugin {\n    return new this(name, player, config);\n  }\n\n  /**\n   * Returns under what conditions the plugin is valid.\n   * Plugin must implement this method.\n   * @returns {boolean} - Whether the plugin is valid and can be initiated. Default implementation is true\n   * @static\n   * @public\n   * @abstract\n   */\n  static isValid(): boolean {\n    throw new PlayerError(PlayerError.TYPE.NOT_IMPLEMENTED_METHOD, 'isValid()').getError();\n  }\n\n  /**\n   * constructor\n   * @param {string} name - The plugin name\n   * @param {Player} player - The player reference\n   * @param {Object} config - The plugin configuration\n   * @constructor\n   * @private\n   */\n  constructor(name: string, player: Player, config: Object) {\n    this.name = name;\n    this.player = player;\n    this.eventManager = new EventManager();\n    this.logger = LoggerFactory.getLogger(this.name);\n    this.config = merge(this.constructor.defaultConfig, config);\n  }\n\n  /**\n   * Getter for the configuration of the plugin.\n   * @param {string} attr - The key in the plugin configuration (optional).\n   * @returns {*} - If attribute is provided, returns its value. Else, Returns the config of the plugin.\n   * @public\n   */\n  getConfig(attr?: string): any {\n    if (attr) {\n      return this.config[attr];\n    }\n    return this.config;\n  }\n\n  /**\n   * Updates the config of the plugin.\n   * @param {Object} update - The updated configuration.\n   * @public\n   * @returns {void}\n   */\n  updateConfig(update: Object): void {\n    this.config = merge(this.config, update);\n  }\n\n  /**\n   * Runs the destroy logic of the plugin.\n   * plugin must implement this method.\n   * @public\n   * @abstract\n   * @returns {void}\n   */\n  destroy(): void {\n    throw new PlayerError(PlayerError.TYPE.NOT_IMPLEMENTED_METHOD, 'destroy()').getError();\n  }\n\n  /**\n   * Getter for the plugin's name.\n   * @returns {string} - The name of the plugin.\n   * @public\n   */\n  getName(): string {\n    return this.name;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./plugin/base-plugin.js","//@flow\nimport BasePlugin from './base-plugin'\nimport PlayerError from '../utils/player-error'\nimport Player from '../player'\nimport LoggerFactory from '../utils/logger'\n\n/**\n * The logger of the PluginManager class.\n * @private\n * @const\n */\nconst logger = LoggerFactory.getLogger(\"PluginManager\");\n\n/** The PluginManager responsible for register plugins definitions and store plugins instances.\n * @classdesc\n */\nexport default class PluginManager {\n  /**\n   * The registry of the plugins.\n   * Maps plugin's name to his class.\n   * @type {Map}\n   * @static\n   * @private\n   */\n  static _registry: Map<string, Function> = new Map();\n  /**\n   * The active plugins in the player.\n   * Maps plugin's name to his instance.\n   * @type {Map}\n   * @private\n   */\n  _plugins: Map<string, BasePlugin> = new Map();\n\n  /**\n   * Writes the plugin in the registry.\n   * Maps: plugin name -> plugin class.\n   * @param {string} name - The plugin name\n   * @param {Function} handler - The plugin class\n   * @returns {boolean} - If the registration request succeeded\n   * @static\n   * @public\n   */\n  static register(name: string, handler: Function): boolean {\n    if (typeof handler !== 'function' || handler.prototype instanceof BasePlugin === false) {\n      throw new PlayerError(PlayerError.TYPE.NOT_VALID_HANDLER).getError();\n    }\n    if (!PluginManager._registry.has(name)) {\n      PluginManager._registry.set(name, handler);\n      logger.debug(`Plugin <${name}> has been registered successfully.`);\n      return true;\n    }\n    logger.debug(`Plugin <${name}> is already registered, do not register again.`);\n    return false;\n  }\n\n  /**\n   * Removes the plugin from the registry.\n   * @param {string} name - The plugin name\n   * @static\n   * @public\n   * @returns {void}\n   */\n  static unRegister(name: string): void {\n    if (PluginManager._registry.has(name)) {\n      PluginManager._registry.delete(name);\n      logger.debug(`Unregistered <${name}> plugin.`);\n    }\n  }\n\n  /**\n   * Creates and store new instance of the plugin in case isValid() of the plugin returns true.\n   * @param {string} name - The plugin name\n   * @param {Player} player - The player reference\n   * @param {Object} [config={}] - The plugin configuration\n   * @returns {boolean} - Whether the plugin load was successful\n   * @public\n   */\n  load(name: string, player: Player, config: Object = {}): boolean {\n    if (!PluginManager._registry.has(name)) {\n      throw new PlayerError(PlayerError.TYPE.NOT_REGISTERED_PLUGIN, name).getError();\n    }\n    let pluginClass = PluginManager._registry.get(name);\n    if (pluginClass != null && pluginClass.isValid()) {\n      this._plugins.set(name, pluginClass.createPlugin(name, player, config));\n      logger.debug(`Plugin <${name}> has been loaded.`);\n      return true;\n    }\n    logger.debug(`Plugin <${name}> isn\\'t loaded, isValid()=false.`);\n    return false;\n  }\n\n  /**\n   * Iterates over all the plugins and calls private _destroy.\n   * @public\n   * @returns {void}\n   */\n  destroy(): void {\n    this._plugins.forEach(this._destroy.bind(this));\n  }\n\n  /**\n   * Calls destroy() method of the plugin's impl.\n   * @param {BasePlugin} plugin - The plugin instance\n   * @param {string} name - The plugin name\n   * @private\n   * @returns {void}\n   */\n  _destroy(plugin: BasePlugin, name: string): void {\n    plugin.destroy();\n    this._plugins.delete(name);\n  }\n\n  /**\n   * Returns the plugin's instance.\n   * @param {string} name - The plugin name\n   * @returns {BasePlugin} - The plugin instance\n   * @public\n   */\n  get(name: string): ?BasePlugin {\n    return this._plugins.get(name);\n  }\n}\n\n/**\n * Export the register method.\n * @type {function}\n * @constant\n */\nconst registerPlugin = PluginManager.register;\nexport {registerPlugin};\n\n\n\n// WEBPACK FOOTER //\n// ./plugin/plugin-manager.js","//@flow\nimport FakeEvent from './fake-event'\nimport MultiMap from '../utils/multi-map'\n\n/**\n * A work-alike for EventTarget.  Only DOM elements may be true EventTargets,\n * but this can be used as a base class to provide event dispatch to non-DOM\n * classes.  Only FakeEvents should be dispatched.\n *\n * @struct\n * @constructor\n * @implements {EventTarget}\n * @export\n */\nclass FakeEventTarget {\n  _listeners: MultiMap<ListenerType>;\n  dispatchTarget: FakeEventTarget;\n\n  constructor() {\n    /**\n     * @private {!MultiMap.<FakeEventTarget.ListenerType>}\n     */\n    this._listeners = new MultiMap();\n\n    /**\n     * The target of all dispatched events.  Defaults to |this|.\n     * @type {EventTarget}\n     */\n    this.dispatchTarget = this;\n  }\n\n  /**\n   * Add an event listener to this object.\n   *\n   * @param {string} type The event type to listen for.\n   * @param {FakeEventTarget.ListenerType} listener The callback or\n   *   listener object to invoke.\n   * @param {boolean=} opt_capturing Ignored.  FakeEventTargets do not have\n   *   parents, so events neither capture nor bubble.\n   * @override\n   * @export\n   */\n  addEventListener(type: string, listener: ListenerType) {\n    this._listeners.push(type, listener);\n  }\n\n  /**\n   * Remove an event listener from this object.\n   *\n   * @param {string} type The event type for which you wish to remove a listener.\n   * @param {FakeEventTarget.ListenerType} listener The callback or\n   *   listener object to remove.\n   * @param {boolean=} opt_capturing Ignored.  FakeEventTargets do not have\n   *   parents, so events neither capture nor bubble.\n   * @override\n   * @export\n   */\n  removeEventListener(type: string, listener: ListenerType) {\n    this._listeners.remove(type, listener);\n  }\n\n  /**\n   * Dispatch an event from this object.\n   *\n   * @param {!Event} event The event to be dispatched from this object.\n   * @return {boolean} True if the default action was prevented.\n   * @override\n   * @export\n   */\n  dispatchEvent(event: FakeEvent) {\n    // In many browsers, it is complex to overwrite properties of actual Events.\n    // Here we expect only to dispatch FakeEvents, which are simpler.\n    //goog.asserts.assert(event instanceof FakeEvent,\n    //    'FakeEventTarget can only dispatch FakeEvents!');\n\n    let list = this._listeners.get(event.type) || [];\n\n    for (let i = 0; i < list.length; ++i) {\n      // Do this every time, since events can be re-dispatched from handlers.\n      event.target = this.dispatchTarget;\n      event.currentTarget = this.dispatchTarget;\n\n      let listener = list[i];\n      try {\n        if (listener.handleEvent) {\n          listener.handleEvent(event);\n        } else {\n          listener.call(this, event);\n        }\n      } catch (exception) {\n        // Exceptions during event handlers should not affect the caller,\n        // but should appear on the console as uncaught, according to MDN:\n        // http://goo.gl/N6Ff27\n        // TODO: add log\n      }\n\n      if (event.stopped) {\n        break;\n      }\n    }\n\n    return event.defaultPrevented;\n  }\n}\n\n/**\n * These are the listener types defined in the closure extern for EventTarget.\n * @typedef {EventListener|function(!Event):(boolean|undefined)}\n */\ndeclare function ListenerType(event: FakeEvent): (boolean | void);\n\nexport default FakeEventTarget;\n\n\n\n// WEBPACK FOOTER //\n// ./event/fake-event-target.js","//@flow\n\n/**\n * The possible player state types.\n * @const\n * @type {{IDLE: string, LOADING: string, PLAYING: string, PAUSED: string, BUFFERING: string}}\n */\nconst PLAYER_STATE_TYPES: { [state: string]: string } = {\n  IDLE: \"idle\",\n  LOADING: \"loading\",\n  PLAYING: \"playing\",\n  PAUSED: \"paused\",\n  BUFFERING: \"buffering\"\n};\n\nexport default PLAYER_STATE_TYPES;\n\n\n\n// WEBPACK FOOTER //\n// ./state/state-types.js","//@flow\n\n/**\n * A simple multimap template.\n * @constructor\n * @struct\n * @template T\n */\nclass MultiMap<T> {\n  _map: Map<string, T[]>;\n\n  constructor() {\n    /** @private {!Object.<string, !Array.<T>>} */\n    this._map = new Map();\n  }\n\n  /**\n   * Add a key, value pair to the map.\n   * @param {string} key -\n   * @param {T} value  -\n   * @returns {void}\n   */\n  push(key: string, value: T): void {\n    if (this._map.has(key)) {\n      let list = this._map.get(key);\n      if (Array.isArray(list)) {\n        list.push(value);\n        this._map.set(key, list);\n      }\n    } else {\n      this._map.set(key, [value]);\n    }\n  }\n\n  /**\n   * Set an array of values for the key, overwriting any previous data.\n   * @param {string} key -\n   * @param {!Array.<T>} values -\n   * @returns {void}\n   */\n  set(key: string, values: T[]): void {\n    this._map.set(key, values);\n  }\n\n  /**\n   * Check for a key.\n   * @param {string} key -\n   * @return {boolean} true if the key exists.\n   */\n  has(key: string): boolean {\n    return this._map.has(key);\n  }\n\n  /**\n   * Get a list of values by key.\n   * @param {string} key -\n   * @return {Array.<T>} or null if no suZch key exists.\n   */\n  get(key: string): Array<T> {\n    let list = this._map.get(key);\n    // slice() clones the list so that it and the map can each be modified\n    // without affecting the other.\n    return list ? list.slice() : [];\n  }\n\n  /**\n   * Get a list of all values.\n   * @returns {!Array.<T>} -\n   */\n  getAll(): T[] {\n    let list: T[] = [];\n    for (var value of this._map.values()) {\n      list = list.concat(value);\n    }\n    return list;\n  }\n\n  /**\n   * Remove a specific value, if it exists.\n   * @param {string} key -\n   * @param {T} value -\n   * @returns {void}\n   */\n  remove(key: string, value: T): void {\n    if (!this._map.has(key)) return;\n    let list = this._map.get(key);\n    if (Array.isArray(list)) {\n      for (let i = 0; i < list.length; ++i) {\n        if (list[i] == value) {\n          list.splice(i, 1);\n          --i;\n        }\n      }\n    }\n  }\n\n  /**\n   * Get all keys from the multimap.\n   * @return {!Array.<string>}\n   */\n  // eslint-disable-next-line no-undef\n  keys(): Iterator<string> {\n    return this._map.keys();\n  }\n\n\n  /**\n   * Clear all keys and values from the multimap.\n   * @returns {void}\n   */\n  clear(): void {\n    this._map.clear();\n  }\n}\n\nexport default MultiMap;\n\n\n\n// WEBPACK FOOTER //\n// ./utils/multi-map.js","//@flow\nexport default class PlayerError {\n  static TYPE: {[name: string]: Object} = {\n    NOT_REGISTERED_PLUGIN: {\n      name: \"PluginNotRegisteredException\",\n      message: function (name) {\n        return `Cannot load ${name} plugin. Name not found in the registry`;\n      }\n    },\n    NOT_VALID_HANDLER: {\n      name: \"PluginHandlerIsNotValidException\",\n      message: function () {\n        return \"To activate plugin you must provide a class derived from BasePlugin\";\n      }\n    },\n    NOT_IMPLEMENTED_METHOD: {\n      name: \"NotImplementedException\",\n      message: function (method) {\n        return `${method} method not implemented`;\n      }\n    }\n  };\n\n  name: string;\n  message: string;\n\n  constructor(error: Object, param?: any) {\n    this.name = error.name;\n    this.message = error.message(param);\n  }\n\n  getError() {\n    return {\n      name: this.name,\n      message: this.message\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./utils/player-error.js","//@flow\n\"use strict\";\n\n/**\n * @param {number} n - A certain number\n * @returns {boolean} - If the input is a number\n */\nfunction isNumber(n: number): boolean {\n  return Number(n) === n;\n}\n\n/**\n * @param {number} n - A certain number\n * @returns {boolean} - If the input is an integer\n */\nfunction isInt(n: number): boolean {\n  return isNumber(n) && n % 1 === 0;\n}\n\n/**\n * @param {number} n - A certain number\n * @returns {boolean} - If the input is a float\n */\nfunction isFloat(n: number): boolean {\n  return isNumber(n) && n % 1 !== 0;\n}\n\n/**\n * @param {Object} obj1 - Certain object\n * @param {Object} obj2 - Certain object\n * @returns {*} - The merged object.\n */\nfunction merge(obj1: Object, obj2: Object): Object {\n  if (!obj1 && !obj2) return {};\n  if (!obj1) return obj2;\n  if (!obj2) return obj1;\n  return Object.assign(obj1, obj2);\n}\n\nexport {isNumber, isInt, isFloat, merge};\n\n\n\n// WEBPACK FOOTER //\n// ./utils/util.js","module.exports = {\n\t\"name\": \"playkit-js\",\n\t\"version\": \"0.0.1\",\n\t\"main\": \"dist/playkit.js\",\n\t\"scripts\": {\n\t\t\"clean\": \"rm -rf ./dist\",\n\t\t\"prebuild\": \"npm run clean\",\n\t\t\"build\": \"webpack\",\n\t\t\"dev\": \"webpack --progress --colors --watch\",\n\t\t\"test\": \"NODE_ENV=test ./node_modules/.bin/karma start --single-run\",\n\t\t\"test:watch\": \"NODE_ENV=test ./node_modules/.bin/karma start --auto-watch\",\n\t\t\"start\": \"webpack-dev-server\",\n\t\t\"release\": \"NODE_ENV=production npm run build -- -p && git add --all dist && git commit -m'Update dist' && standard-version\",\n\t\t\"eslint\": \"eslint . --color\",\n\t\t\"flow\": \"flow check\",\n\t\t\"prepush\": \"npm run eslint & npm run test & npm run flow\"\n\t},\n\t\"devDependencies\": {\n\t\t\"babel-cli\": \"^6.18.0\",\n\t\t\"babel-core\": \"^6.18.2\",\n\t\t\"babel-eslint\": \"^7.1.1\",\n\t\t\"babel-loader\": \"^6.2.7\",\n\t\t\"babel-plugin-istanbul\": \"^4.0.0\",\n\t\t\"babel-plugin-transform-class-properties\": \"^6.22.0\",\n\t\t\"babel-plugin-transform-flow-strip-types\": \"^6.22.0\",\n\t\t\"babel-preset-es2015\": \"^6.18.0\",\n\t\t\"babel-register\": \"^6.23.0\",\n\t\t\"chai\": \"^3.5.0\",\n\t\t\"cross-env\": \"^3.1.4\",\n\t\t\"eslint\": \"^3.10.0\",\n\t\t\"eslint-loader\": \"^1.6.1\",\n\t\t\"eslint-plugin-flowtype\": \"^2.30.0\",\n\t\t\"eslint-plugin-import\": \"^2.2.0\",\n\t\t\"eslint-plugin-mocha-no-only\": \"^0.0.5\",\n\t\t\"flow-bin\": \"latest\",\n\t\t\"istanbul\": \"^0.4.5\",\n\t\t\"karma\": \"^1.5.0\",\n\t\t\"karma-chai\": \"^0.1.0\",\n\t\t\"karma-chrome-launcher\": \"^2.0.0\",\n\t\t\"karma-cli\": \"^1.0.1\",\n\t\t\"karma-coverage\": \"^1.1.1\",\n\t\t\"karma-mocha\": \"^1.3.0\",\n\t\t\"karma-sourcemap-loader\": \"^0.3.7\",\n\t\t\"karma-webpack\": \"^2.0.2\",\n\t\t\"mocha\": \"^3.2.0\",\n\t\t\"mocha-cli\": \"^1.0.1\",\n\t\t\"nyc\": \"^10.1.2\",\n\t\t\"sinon\": \"^2.0.0\",\n\t\t\"sinon-chai\": \"^2.8.0\",\n\t\t\"standard-version\": \"^4.0.0\",\n\t\t\"uglifyjs-webpack-plugin\": \"^0.4.3\",\n\t\t\"webpack\": \"latest\",\n\t\t\"webpack-dev-server\": \"latest\"\n\t},\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"https://github.com/kaltura/playkit-js\"\n\t},\n\t\"keywords\": [\n\t\t\"kaltura\",\n\t\t\"player\",\n\t\t\"html5 player\"\n\t],\n\t\"license\": \"AGPLV3\",\n\t\"bugs\": {\n\t\t\"url\": \"https://github.com/kaltura/playkit-js/issues\"\n\t},\n\t\"homepage\": \"https://github.com/kaltura/playkit-js\",\n\t\"dependencies\": {\n\t\t\"js-logger\": \"^1.3.0\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../package.json\n// module id = 13\n// module chunks = 0","//@flow\nimport FakeEventTarget from '../../event/fake-event-target'\nimport FakeEvent from '../../event/fake-event'\nimport EventManager from '../../event/event-manager'\nimport PlayerEvents from '../../event/events'\nimport MediaSourceProvider from './media-source/media-source-provider'\n\nexport default class Html5 extends FakeEventTarget implements IEngine {\n  _el: HTMLVideoElement;\n  _eventManager: EventManager;\n  _mediaSourceAdapter: ?IMediaSourceAdapter;\n\n  static EngineName: string = \"html5\";\n\n  static canPlayType(mimeType) {\n    return MediaSourceProvider.canPlayType(mimeType);\n  }\n\n  constructor(source: Object, config: Object) {\n    super();\n    this.createVideoElement();\n    this._eventManager = new EventManager();\n    this.setSource(source, config);\n    this.attach();\n  }\n\n  destroy() {\n    this.detach();\n    if (this._mediaSourceAdapter) {\n      this._mediaSourceAdapter.destroy();\n    }\n    if (this._el) {\n      this.pause();\n      this._el.removeAttribute('src');\n      if (this._el.parentNode) {\n        this._el.parentNode.removeChild(this._el);\n      }\n    }\n  }\n\n  attach() {\n    for (let playerEvent in PlayerEvents) {\n      if (PlayerEvents.hasOwnProperty(playerEvent)) {\n        this._eventManager.listen(this._el, PlayerEvents[playerEvent], () => {\n          this.dispatchEvent(new FakeEvent(PlayerEvents[playerEvent]));\n        });\n      }\n    }\n  }\n\n  detach() {\n    for (let playerEvent in PlayerEvents) {\n      if (PlayerEvents.hasOwnProperty(playerEvent)) {\n        this._eventManager.unlisten(this._el, PlayerEvents[playerEvent]);\n      }\n    }\n  }\n\n  createVideoElement() {\n    this._el = document.createElement(\"video\");\n    //Set attributes\n    this._el.style.width = \"640px\";\n    this._el.style.height = \"360px\";\n    this._el.style.backgroundColor = \"black\";\n    this._el.controls = true;\n    if (document && document.body) {\n      document.body.appendChild(this._el);\n    }\n  }\n\n  getVideoElement(): HTMLVideoElement {\n    return this._el;\n  }\n\n  setSource(source: Object, config: Object) {\n    this.loadMediaSourceAdapter(source, config);\n  }\n\n  loadMediaSourceAdapter(source: Object, config: Object) {\n    this._mediaSourceAdapter = MediaSourceProvider.getMediaSourceAdapter((this: Html5), source, config);\n  }\n\n  set src(source: string): void {\n    //Set source\n    this._el.src = source;\n  }\n\n  get src(): string {\n    return this._el.src;\n  }\n\n  //playback interface\n  /**\n   * Start/resume playback\n   * @returns {void}\n   */\n  play(): void {\n    return this._el.play();\n  }\n\n  /**\n   * Pause playback\n   * @returns {void}\n   */\n  pause(): void {\n    return this._el.pause();\n  }\n\n  /**\n   * Load media\n   * @returns {void}\n   */\n  load(): void {\n    if (this._mediaSourceAdapter) {\n      this._mediaSourceAdapter.load();\n    }\n  }\n\n  /**\n   * Get the current time in seconds\n   * @returns {Number} - The current playback time\n   */\n  get currentTime(): number {\n    return this._el.currentTime;\n  }\n\n  /**\n   * Set the current time in seconds\n   * @param {Number} to - The number to set in seconds\n   */\n  set currentTime(to: number) {\n    this._el.currentTime = to;\n  }\n\n  /**\n   * Get the duration in seconds\n   * @returns {Number} - The playback duration\n   */\n  get duration(): number {\n    return this._el.duration;\n  }\n\n  /**\n   * Set playback volume\n   * @param {Number} vol - The volume to set\n   */\n  set volume(vol: number) {\n    this._el.volume = vol;\n  }\n\n  /**\n   * Get playback volume\n   * @returns {Number} - The volume value of the video element\n   */\n  get volume(): number {\n    return this._el.volume;\n  }\n\n  //state\n  ready() {\n  }\n\n  /**\n   * Get paused state\n   * @returns {boolean} - The paused value of the video element\n   */\n  get paused(): boolean {\n    return this._el.paused;\n  }\n\n  /**\n   * Get seeking state\n   * @returns {boolean} - The seeking value of the video element\n   */\n  get seeking(): boolean {\n    return this._el.seeking;\n  }\n\n  get seekable(): TimeRanges {\n    return this._el.seekable;\n  }\n\n  get played(): TimeRanges {\n    return this._el.played;\n  }\n\n  get buffered(): TimeRanges {\n    return this._el.buffered;\n  }\n\n  /**\n   * Set player muted state\n   * @param {boolean} mute - The new mute value\n   */\n  set muted(mute: boolean) {\n    this._el.muted = mute;\n  }\n\n  /**\n   * Get player muted state\n   * @returns {boolean} - The muted value of the video element\n   */\n  get muted(): boolean {\n    return this._el.muted;\n  }\n\n  get defaultMuted(): boolean {\n    return this._el.defaultMuted;\n  }\n\n  set poster(poster: string) {\n    this._el.poster = poster;\n  }\n\n  get poster(): string {\n    return this._el.poster;\n  }\n\n  set preload(preload: string) {\n    this._el.preload = preload;\n  }\n\n  get preload(): string {\n    return this._el.preload;\n  }\n\n  set autoplay(autoplay: boolean) {\n    this._el.autoplay = autoplay;\n  }\n\n  get autoplay(): boolean {\n    return this._el.autoplay;\n  }\n\n  set loop(loop: boolean) {\n    this._el.loop = loop;\n  }\n\n  get loop(): boolean {\n    return this._el.loop;\n  }\n\n  set controls(controls: boolean) {\n    this._el.controls = controls;\n  }\n\n  get controls(): boolean {\n    return this._el.controls;\n  }\n\n  set playbackRate(playbackRate: number) {\n    this._el.playbackRate = playbackRate;\n  }\n\n  get playbackRate(): number {\n    return this._el.playbackRate;\n  }\n\n  set defaultPlaybackRate(defaultPlaybackRate: number) {\n    this._el.defaultPlaybackRate = defaultPlaybackRate;\n  }\n\n  get defaultPlaybackRate(): number {\n    return this._el.defaultPlaybackRate;\n  }\n\n  get ended(): boolean {\n    return this._el.ended;\n  }\n\n  get error(): ?MediaError {\n    return this._el.error;\n  }\n\n  get networkState(): number {\n    return this._el.networkState;\n  }\n\n  get readyState(): number {\n    return this._el.readyState;\n  }\n\n  get videoHeight(): number {\n    return this._el.videoHeight;\n  }\n\n  get videoWidth(): number {\n    return this._el.videoWidth;\n  }\n\n  static TEST_VID: HTMLVideoElement;\n\n  static isSupported() {\n    try {\n      Html5.TEST_VID = document.createElement('video');\n      Html5.TEST_VID.volume = 0.5;\n    } catch (e) {\n      return false;\n    }\n\n    return !!Html5.TEST_VID.canPlayType;\n  }\n}\n\n//Engine.register(\"html5\", Html5);\n\n\n\n// WEBPACK FOOTER //\n// ./engines/html5/html5.js","//@flow\nimport LoggerFactory from '../../../../utils/logger'\n\n/**\n * An illustration of media source extension for progressive download\n * @classdesc\n * @implements {IMediaSourceAdapter}\n */\nexport default class NativeAdapter implements IMediaSourceAdapter {\n  /**\n   * The name of the Adapter\n   * @member {string} _name\n   * @static\n   * @private\n   */\n  static _name = \"NativeAdapter\";\n  /**\n   * Getter for the adapter name\n   * @returns {string} - The adapter name\n   */\n  static get name(): string {\n    return NativeAdapter._name;\n  }\n\n  /**\n   * The adapter logger\n   * @member {any} _logger\n   * @private\n   * @static\n   */\n  static _logger = LoggerFactory.getLogger(NativeAdapter._name);\n  /**\n   * The adapter config\n   * @member {Object} _config\n   * @private\n   */\n  _config: Object;\n  /**\n   * The owning engine\n   * @member {IEngine} _engine\n   * @private\n   */\n  _engine: IEngine;\n  /**\n   * The dom video element\n   * @member {HTMLVideoElement} _videoElement\n   * @private\n   */\n  _videoElement: HTMLVideoElement;\n  /**\n   * The source url\n   * @member {string} _source\n   * @private\n   */\n  _source: string;\n\n  /**\n   * @constructor\n   * @param {IEngine} engine - The video element which bind to NativeAdapter\n   * @param {string} source - The source URL\n   * @param {Object} config - The media source adapter configuration\n   */\n  constructor(engine: IEngine, source: Object, config: Object) {\n    this._engine = engine;\n    this._config = config;\n    this._videoElement = engine.getVideoElement();\n    this._source = source.url;\n    if (source) {\n      this._videoElement.src = source.url;\n    }\n  }\n\n  /**\n   * Checks if NativeAdapter can play a given mime type\n   * @function canPlayType\n   * @param {string} mimeType - The mime type to check\n   * @returns {boolean} - Whether the native adapter can play a specific mime type\n   * @static\n   */\n  static canPlayType(mimeType: string): boolean {\n    let canPlayType = !!(document.createElement(\"video\").canPlayType(mimeType));\n    NativeAdapter._logger.debug('canPlayType result for mimeType:' + mimeType + ' is ' + canPlayType.toString());\n    return canPlayType;\n  }\n\n  /**\n   * Checks if the media source adapter is supported\n   * @function isSupported\n   * @returns {boolean} - Whether the media source adapter is supported. Default implementation is true\n   * @static\n   */\n  static isSupported(): boolean {\n    NativeAdapter._logger.debug('isSupported:true');\n    return true;\n  }\n\n  /**\n   * Factory method to create media source adapter\n   * @function createAdapter\n   * @param {IEngine} engine - The video engine that the media source adapter work with\n   * @param {Object} source - The source Object\n   * @param {Object} config - The media source adapter configuration\n   * @returns {IMediaSourceAdapter} - New instance of the run time media source adapter\n   * @static\n   */\n  static createAdapter(engine: IEngine, source: Object, config: Object): IMediaSourceAdapter {\n    NativeAdapter._logger.debug('Creating adapter');\n    return new this(engine, source, config);\n  }\n\n  /**\n   * Load the video source\n   * @function load\n   * @returns {void}\n   */\n  load(): void {\n    NativeAdapter._logger.debug('load');\n    this._videoElement.load();\n  }\n\n  /**\n   * Clearing the video source\n   * @function destroy\n   * @returns {void}\n   */\n  destroy(): void {\n    NativeAdapter._logger.debug('destroy');\n    this._videoElement.src = \"\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./engines/html5/media-source/adapters/native-adapter.js","//@flow\nimport Player from './player'\nimport LoggerFactory from './utils/logger'\nimport * as packageData from '../package.json'\nimport {registerMediaSourceAdapter} from './engines/html5/media-source/media-source-provider'\nimport {registerPlugin} from './plugin/plugin-manager'\nimport BasePlugin from './plugin/base-plugin'\n\n// Playkit version\nlet VERSION = packageData.version;\n\nLoggerFactory.getLogger().log(\"%c Playkit \" + VERSION, \"color: yellow; font-size: large\");\nLoggerFactory.getLogger().log(\"%c For more details see https://github.com/kaltura/playkit-js\", \"color: yellow;\");\n\n/**\n * @param {Object} config - The configuration of the player\n * @returns {Player} - The player instance\n */\nexport function playkit(config: Object = {}) {\n  return new Player(config);\n}\n\n// Registration for media source adapters\nexport {registerMediaSourceAdapter};\n\n// Export the plugin framework\nexport {registerPlugin, BasePlugin};\n\n//export version\nexport {VERSION};\nexport default playkit;\n\n\n\n// WEBPACK FOOTER //\n// ./playkit.js","//@flow\nimport Player from '../player'\nimport EventManager from '../event/event-manager'\nimport State from './state'\nimport PlayerStates from './state-types'\nimport PlayerEvents from '../event/events'\nimport FakeEvent from '../event/fake-event'\nimport LoggerFactory from '../utils/logger'\n\n/**\n * Define a transition object.\n */\ntype Transition = {\n  [state: string]: {\n    [event: string]: Function\n  }\n}\n\n/**\n * This class responsible to manage all the state machine of the player.\n * @classdesc\n */\nexport default class StateManager {\n  /**\n   * The logger of the class.\n   * @member\n   * @type {any}\n   * @private\n   */\n  _logger: any;\n  /**\n   * Reference to the actual player.\n   * @member\n   * @type {Player}\n   * @private\n   */\n  _player: Player;\n  /**\n   * The event manager of the class.\n   * @member\n   * @type {EventManager}\n   * @private\n   */\n  _eventManager: EventManager;\n  /**\n   * Holds the current state of the player.\n   * @member\n   * @type {State}\n   * @private\n   */\n  _curState: State;\n  /**\n   * Holds the previous state of the player.\n   * @member\n   * @type {State | null}\n   * @private\n   */\n  _prevState: State | null;\n  /**\n   * Holds the state history of the player.\n   * @member\n   * @type {Array<State>}\n   * @private\n   */\n  _history: Array<State>;\n  /**\n   * The possible transitions from one state to another.\n   * @type {Array<Transition>}\n   * @private\n   */\n  _transitions: Transition = {\n    [PlayerStates.IDLE]: {\n      [PlayerEvents.LOAD_START]: () => {\n        this._updateState(PlayerStates.LOADING);\n        this._dispatchEvent();\n      },\n      [PlayerEvents.PLAY]: () => {\n        this._updateState(PlayerStates.BUFFERING);\n        this._dispatchEvent();\n      }\n    },\n    [PlayerStates.LOADING]: {\n      [PlayerEvents.LOADED_METADATA]: () => {\n        if (this._player.config.autoPlay) {\n          this._updateState(PlayerStates.PLAYING);\n        } else {\n          this._updateState(PlayerStates.PAUSED);\n        }\n        this._dispatchEvent();\n      },\n      [PlayerEvents.ERROR]: () => {\n        this._updateState(PlayerStates.IDLE);\n        this._dispatchEvent();\n      }\n    },\n    [PlayerStates.PAUSED]: {\n      [PlayerEvents.PLAY]: () => {\n        this._updateState(PlayerStates.PLAYING);\n        this._dispatchEvent();\n      },\n      [PlayerEvents.PLAYING]: () => {\n        this._updateState(PlayerStates.PLAYING);\n        this._dispatchEvent();\n      },\n      [PlayerEvents.ENDED]: () => {\n        this._updateState(PlayerStates.IDLE);\n        this._dispatchEvent();\n      }\n    },\n    [PlayerStates.PLAYING]: {\n      [PlayerEvents.PAUSE]: () => {\n        this._updateState(PlayerStates.PAUSED);\n        this._dispatchEvent();\n      },\n      [PlayerEvents.WAITING]: () => {\n        this._updateState(PlayerStates.BUFFERING);\n        this._dispatchEvent();\n      },\n      [PlayerEvents.ENDED]: () => {\n        this._updateState(PlayerStates.IDLE);\n        this._dispatchEvent();\n      },\n      [PlayerEvents.ERROR]: () => {\n        this._updateState(PlayerStates.IDLE);\n        this._dispatchEvent();\n      }\n    },\n    [PlayerStates.BUFFERING]: {\n      [PlayerEvents.PLAYING]: () => {\n        this._updateState(PlayerStates.PLAYING);\n        this._dispatchEvent();\n      },\n      [PlayerEvents.PAUSE]: () => {\n        this._updateState(PlayerStates.PAUSED);\n        this._dispatchEvent();\n      }\n    }\n  };\n\n  /**\n   * @constructor\n   * @param {Player} player - Reference to the player.\n   */\n  constructor(player: Player) {\n    this._player = player;\n    this._logger = LoggerFactory.getLogger(\"StateManager\");\n    this._eventManager = new EventManager();\n    this._history = [];\n    this._prevState = null;\n    this._curState = new State(PlayerStates.IDLE);\n    this._attachListeners();\n  }\n\n  /**\n   * Register to all necessary events which impacts on the player state.\n   * @private\n   * @returns {void}\n   */\n  _attachListeners(): void {\n    this._eventManager.listen(this._player, PlayerEvents.ERROR, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, PlayerEvents.ENDED, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, PlayerEvents.PLAY, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, PlayerEvents.LOAD_START, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, PlayerEvents.PLAYING, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, PlayerEvents.LOADED_METADATA, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, PlayerEvents.PAUSE, this._doTransition.bind(this));\n    this._eventManager.listen(this._player, PlayerEvents.WAITING, this._doTransition.bind(this));\n  }\n\n  /**\n   * Performs a state transition depends on the event which occurs in the player system.\n   * @param {FakeEvent} event - The event occurs in the player system.\n   * @private\n   * @returns {void}\n   */\n  _doTransition(event: FakeEvent): void {\n    this._logger.debug('Do transition request', event);\n    let transition = this._transitions[this._curState.type];\n    if (typeof transition[event.type] === 'function') {\n      transition[event.type]();\n    }\n  }\n\n  /**\n   * Updates the player's state.\n   * @param {string} type - The type of the new state.\n   * @private\n   * @returns {void}\n   */\n  _updateState(type: string): void {\n    if (this._curState.type !== type) {\n      this._curState.duration = Date.now() / 1000;\n      this._history.push(this._curState);\n      this._prevState = this._curState;\n      this._curState = new State(type);\n      this._logger.debug(`Switch player state: from ${this._prevState.type} to ${this._curState.type}`)\n    }\n  }\n\n  /**\n   * Fires the playerStateChanged event after state has been changed.\n   * @private\n   * @returns {void}\n   */\n  _dispatchEvent(): void {\n    let event = new FakeEvent(PlayerEvents.PLAYER_STATE_CHANGED, {\n      'oldState': this._prevState,\n      'newState': this._curState\n    });\n    this._player.dispatchEvent(event);\n  }\n\n  /**\n   * Destroys the state manager.\n   * @public\n   * @returns {void}\n   */\n  destroy(): void {\n    this._history = [];\n    this._eventManager.destroy();\n  }\n\n  /**\n   * Getter to the current state of the player.\n   * @public\n   * @returns {State} - The current state object\n   */\n  get currentState(): State {\n    return this._curState;\n  }\n\n  /**\n   * Getter to the previous state of the player.\n   * @public\n   * @returns {State|null} - The previous state object, or null if such doesn't exists\n   */\n  get previousState(): State | null {\n    return this._prevState;\n  }\n\n  /**\n   * Getter to the state history of the player.\n   * @public\n   * @returns {Array.<State>} - The full states history objects\n   */\n  get history(): Array<State> {\n    return this._history;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./state/state-manager.js","//@flow\n\n/**\n * This class describes a player state.\n * @classdesc\n */\nexport default class State {\n  /**\n   * The type of the state.\n   * Can be one of those describes in states.js\n   * @member\n   * @type {string}\n   * @public\n   */\n  type: string;\n  /**\n   * The duration that the player was in this state.\n   * @member\n   * @type {number}\n   * @private\n   */\n  _duration: number;\n  /**\n   * The timestamp that this state started.\n   * @member\n   * @type {number}\n   * @private\n   */\n  _timestamp: number;\n\n  /**\n   * @constructor\n   * @param {string} type - The type of the state.\n   */\n  constructor(type: string) {\n    this.type = type;\n    this._duration = 0;\n    this._timestamp = Date.now() / 1000;\n  }\n\n  /**\n   * Getter for the duration of the state.\n   * @returns {number} - The duration of the state\n   */\n  get duration(): number {\n    return this._duration;\n  }\n\n  /**\n   * Setter for the duration of the state.\n   * @param {number} endTime - The timestamp of the next state.\n   */\n  set duration(endTime: number): void {\n    this._duration = endTime - this._timestamp;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./state/state.js","//@flow\n\"use strict\";\n\n/**\n * Uppercase the first letter of a string\n * @param  {String} string - String to be uppercased\n * @return {String} - The uppercased string\n * @private\n * @method toTitleCase\n */\nfunction capitlize(string: string): string {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n/**\n * @param {string} string - Certain string\n * @param {string} searchString - Certain string\n * @returns {boolean} - Whether the string: string is ending with string: searchString\n */\nfunction endsWith(string: string, searchString: string): boolean {\n  if (typeof string !== 'string' || typeof searchString !== 'string') {\n    return false;\n  }\n  return string.indexOf(searchString, string.length - searchString.length) != -1;\n}\n\nexport {capitlize, endsWith};\n\n\n\n// WEBPACK FOOTER //\n// ./utils/string-util.js","/*!\r\n * js-logger - http://github.com/jonnyreeves/js-logger\r\n * Jonny Reeves, http://jonnyreeves.co.uk/\r\n * js-logger may be freely distributed under the MIT license.\r\n */\r\n(function (global) {\r\n\t\"use strict\";\r\n\r\n\t// Top level module for the global, static logger instance.\r\n\tvar Logger = { };\r\n\r\n\t// For those that are at home that are keeping score.\r\n\tLogger.VERSION = \"1.3.0\";\r\n\r\n\t// Function which handles all incoming log messages.\r\n\tvar logHandler;\r\n\r\n\t// Map of ContextualLogger instances by name; used by Logger.get() to return the same named instance.\r\n\tvar contextualLoggersByNameMap = {};\r\n\r\n\t// Polyfill for ES5's Function.bind.\r\n\tvar bind = function(scope, func) {\r\n\t\treturn function() {\r\n\t\t\treturn func.apply(scope, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\t// Super exciting object merger-matron 9000 adding another 100 bytes to your download.\r\n\tvar merge = function () {\r\n\t\tvar args = arguments, target = args[0], key, i;\r\n\t\tfor (i = 1; i < args.length; i++) {\r\n\t\t\tfor (key in args[i]) {\r\n\t\t\t\tif (!(key in target) && args[i].hasOwnProperty(key)) {\r\n\t\t\t\t\ttarget[key] = args[i][key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\t// Helper to define a logging level object; helps with optimisation.\r\n\tvar defineLogLevel = function(value, name) {\r\n\t\treturn { value: value, name: name };\r\n\t};\r\n\r\n\t// Predefined logging levels.\r\n\tLogger.DEBUG = defineLogLevel(1, 'DEBUG');\r\n\tLogger.INFO = defineLogLevel(2, 'INFO');\r\n\tLogger.TIME = defineLogLevel(3, 'TIME');\r\n\tLogger.WARN = defineLogLevel(4, 'WARN');\r\n\tLogger.ERROR = defineLogLevel(8, 'ERROR');\r\n\tLogger.OFF = defineLogLevel(99, 'OFF');\r\n\r\n\t// Inner class which performs the bulk of the work; ContextualLogger instances can be configured independently\r\n\t// of each other.\r\n\tvar ContextualLogger = function(defaultContext) {\r\n\t\tthis.context = defaultContext;\r\n\t\tthis.setLevel(defaultContext.filterLevel);\r\n\t\tthis.log = this.info;  // Convenience alias.\r\n\t};\r\n\r\n\tContextualLogger.prototype = {\r\n\t\t// Changes the current logging level for the logging instance.\r\n\t\tsetLevel: function (newLevel) {\r\n\t\t\t// Ensure the supplied Level object looks valid.\r\n\t\t\tif (newLevel && \"value\" in newLevel) {\r\n\t\t\t\tthis.context.filterLevel = newLevel;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Is the logger configured to output messages at the supplied level?\r\n\t\tenabledFor: function (lvl) {\r\n\t\t\tvar filterLevel = this.context.filterLevel;\r\n\t\t\treturn lvl.value >= filterLevel.value;\r\n\t\t},\r\n\r\n\t\tdebug: function () {\r\n\t\t\tthis.invoke(Logger.DEBUG, arguments);\r\n\t\t},\r\n\r\n\t\tinfo: function () {\r\n\t\t\tthis.invoke(Logger.INFO, arguments);\r\n\t\t},\r\n\r\n\t\twarn: function () {\r\n\t\t\tthis.invoke(Logger.WARN, arguments);\r\n\t\t},\r\n\r\n\t\terror: function () {\r\n\t\t\tthis.invoke(Logger.ERROR, arguments);\r\n\t\t},\r\n\r\n\t\ttime: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'start' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttimeEnd: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'end' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Invokes the logger callback if it's not being filtered.\r\n\t\tinvoke: function (level, msgArgs) {\r\n\t\t\tif (logHandler && this.enabledFor(level)) {\r\n\t\t\t\tlogHandler(msgArgs, merge({ level: level }, this.context));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Protected instance which all calls to the to level `Logger` module will be routed through.\r\n\tvar globalLogger = new ContextualLogger({ filterLevel: Logger.OFF });\r\n\r\n\t// Configure the global Logger instance.\r\n\t(function() {\r\n\t\t// Shortcut for optimisers.\r\n\t\tvar L = Logger;\r\n\r\n\t\tL.enabledFor = bind(globalLogger, globalLogger.enabledFor);\r\n\t\tL.debug = bind(globalLogger, globalLogger.debug);\r\n\t\tL.time = bind(globalLogger, globalLogger.time);\r\n\t\tL.timeEnd = bind(globalLogger, globalLogger.timeEnd);\r\n\t\tL.info = bind(globalLogger, globalLogger.info);\r\n\t\tL.warn = bind(globalLogger, globalLogger.warn);\r\n\t\tL.error = bind(globalLogger, globalLogger.error);\r\n\r\n\t\t// Don't forget the convenience alias!\r\n\t\tL.log = L.info;\r\n\t}());\r\n\r\n\t// Set the global logging handler.  The supplied function should expect two arguments, the first being an arguments\r\n\t// object with the supplied log messages and the second being a context object which contains a hash of stateful\r\n\t// parameters which the logging function can consume.\r\n\tLogger.setHandler = function (func) {\r\n\t\tlogHandler = func;\r\n\t};\r\n\r\n\t// Sets the global logging filter level which applies to *all* previously registered, and future Logger instances.\r\n\t// (note that named loggers (retrieved via `Logger.get`) can be configured independently if required).\r\n\tLogger.setLevel = function(level) {\r\n\t\t// Set the globalLogger's level.\r\n\t\tglobalLogger.setLevel(level);\r\n\r\n\t\t// Apply this level to all registered contextual loggers.\r\n\t\tfor (var key in contextualLoggersByNameMap) {\r\n\t\t\tif (contextualLoggersByNameMap.hasOwnProperty(key)) {\r\n\t\t\t\tcontextualLoggersByNameMap[key].setLevel(level);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Retrieve a ContextualLogger instance.  Note that named loggers automatically inherit the global logger's level,\r\n\t// default context and log handler.\r\n\tLogger.get = function (name) {\r\n\t\t// All logger instances are cached so they can be configured ahead of use.\r\n\t\treturn contextualLoggersByNameMap[name] ||\r\n\t\t\t(contextualLoggersByNameMap[name] = new ContextualLogger(merge({ name: name }, globalLogger.context)));\r\n\t};\r\n\r\n\t// CreateDefaultHandler returns a handler function which can be passed to `Logger.setHandler()` which will\r\n\t// write to the window's console object (if present); the optional options object can be used to customise the\r\n\t// formatter used to format each log message.\r\n\tLogger.createDefaultHandler = function (options) {\r\n\t\toptions = options || {};\r\n\r\n\t\toptions.formatter = options.formatter || function defaultMessageFormatter(messages, context) {\r\n\t\t\t// Prepend the logger's name to the log message for easy identification.\r\n\t\t\tif (context.name) {\r\n\t\t\t\tmessages.unshift(\"[\" + context.name + \"]\");\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Map of timestamps by timer labels used to track `#time` and `#timeEnd()` invocations in environments\r\n\t\t// that don't offer a native console method.\r\n\t\tvar timerStartTimeByLabelMap = {};\r\n\r\n\t\t// Support for IE8+ (and other, slightly more sane environments)\r\n\t\tvar invokeConsoleMethod = function (hdlr, messages) {\r\n\t\t\tFunction.prototype.apply.call(hdlr, console, messages);\r\n\t\t};\r\n\r\n\t\t// Check for the presence of a logger.\r\n\t\tif (typeof console === \"undefined\") {\r\n\t\t\treturn function () { /* no console */ };\r\n\t\t}\r\n\r\n\t\treturn function(messages, context) {\r\n\t\t\t// Convert arguments object to Array.\r\n\t\t\tmessages = Array.prototype.slice.call(messages);\r\n\r\n\t\t\tvar hdlr = console.log;\r\n\t\t\tvar timerLabel;\r\n\r\n\t\t\tif (context.level === Logger.TIME) {\r\n\t\t\t\ttimerLabel = (context.name ? '[' + context.name + '] ' : '') + messages[0];\r\n\r\n\t\t\t\tif (messages[1] === 'start') {\r\n\t\t\t\t\tif (console.time) {\r\n\t\t\t\t\t\tconsole.time(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttimerStartTimeByLabelMap[timerLabel] = new Date().getTime();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (console.timeEnd) {\r\n\t\t\t\t\t\tconsole.timeEnd(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinvokeConsoleMethod(hdlr, [ timerLabel + ': ' +\r\n\t\t\t\t\t\t\t(new Date().getTime() - timerStartTimeByLabelMap[timerLabel]) + 'ms' ]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Delegate through to custom warn/error loggers if present on the console.\r\n\t\t\t\tif (context.level === Logger.WARN && console.warn) {\r\n\t\t\t\t\thdlr = console.warn;\r\n\t\t\t\t} else if (context.level === Logger.ERROR && console.error) {\r\n\t\t\t\t\thdlr = console.error;\r\n\t\t\t\t} else if (context.level === Logger.INFO && console.info) {\r\n\t\t\t\t\thdlr = console.info;\r\n\t\t\t\t}\r\n\r\n\t\t\t\toptions.formatter(messages, context);\r\n\t\t\t\tinvokeConsoleMethod(hdlr, messages);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t// Configure and example a Default implementation which writes to the `window.console` (if present).  The\r\n\t// `options` hash can be used to configure the default logLevel and provide a custom message formatter.\r\n\tLogger.useDefaults = function(options) {\r\n\t\tLogger.setLevel(options && options.defaultLevel || Logger.DEBUG);\r\n\t\tLogger.setHandler(Logger.createDefaultHandler(options));\r\n\t};\r\n\r\n\t// Export to popular environments boilerplate.\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine(Logger);\r\n\t}\r\n\telse if (typeof module !== 'undefined' && module.exports) {\r\n\t\tmodule.exports = Logger;\r\n\t}\r\n\telse {\r\n\t\tLogger._prevLogger = global.Logger;\r\n\r\n\t\tLogger.noConflict = function () {\r\n\t\t\tglobal.Logger = Logger._prevLogger;\r\n\t\t\treturn Logger;\r\n\t\t};\r\n\r\n\t\tglobal.Logger = Logger;\r\n\t}\r\n}(this));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/js-logger/src/logger.js\n// module id = 20\n// module chunks = 0"],"sourceRoot":""}